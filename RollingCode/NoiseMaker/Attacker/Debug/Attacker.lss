
Attacker.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000007a  00800200  00001552  000015e6  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001552  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000019c  0080027a  0080027a  00001660  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00001660  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 00000108  00000000  00000000  000016bc  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000016ce  00000000  00000000  000017c4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000008c9  00000000  00000000  00002e92  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000a53  00000000  00000000  0000375b  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000004e8  00000000  00000000  000041b0  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000070f  00000000  00000000  00004698  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000d9d  00000000  00000000  00004da7  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000050  00000000  00000000  00005b44  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	8f c0       	rjmp	.+286    	; 0x120 <__ctors_end>
       2:	00 00       	nop
       4:	ab c0       	rjmp	.+342    	; 0x15c <__bad_interrupt>
       6:	00 00       	nop
       8:	a9 c0       	rjmp	.+338    	; 0x15c <__bad_interrupt>
       a:	00 00       	nop
       c:	a7 c0       	rjmp	.+334    	; 0x15c <__bad_interrupt>
       e:	00 00       	nop
      10:	a5 c0       	rjmp	.+330    	; 0x15c <__bad_interrupt>
      12:	00 00       	nop
      14:	a3 c0       	rjmp	.+326    	; 0x15c <__bad_interrupt>
      16:	00 00       	nop
      18:	a1 c0       	rjmp	.+322    	; 0x15c <__bad_interrupt>
      1a:	00 00       	nop
      1c:	9f c0       	rjmp	.+318    	; 0x15c <__bad_interrupt>
      1e:	00 00       	nop
      20:	9d c0       	rjmp	.+314    	; 0x15c <__bad_interrupt>
      22:	00 00       	nop
      24:	9b c0       	rjmp	.+310    	; 0x15c <__bad_interrupt>
      26:	00 00       	nop
      28:	99 c0       	rjmp	.+306    	; 0x15c <__bad_interrupt>
      2a:	00 00       	nop
      2c:	97 c0       	rjmp	.+302    	; 0x15c <__bad_interrupt>
      2e:	00 00       	nop
      30:	95 c0       	rjmp	.+298    	; 0x15c <__bad_interrupt>
      32:	00 00       	nop
      34:	93 c0       	rjmp	.+294    	; 0x15c <__bad_interrupt>
      36:	00 00       	nop
      38:	91 c0       	rjmp	.+290    	; 0x15c <__bad_interrupt>
      3a:	00 00       	nop
      3c:	8f c0       	rjmp	.+286    	; 0x15c <__bad_interrupt>
      3e:	00 00       	nop
      40:	8d c0       	rjmp	.+282    	; 0x15c <__bad_interrupt>
      42:	00 00       	nop
      44:	8b c0       	rjmp	.+278    	; 0x15c <__bad_interrupt>
      46:	00 00       	nop
      48:	89 c0       	rjmp	.+274    	; 0x15c <__bad_interrupt>
      4a:	00 00       	nop
      4c:	87 c0       	rjmp	.+270    	; 0x15c <__bad_interrupt>
      4e:	00 00       	nop
      50:	85 c0       	rjmp	.+266    	; 0x15c <__bad_interrupt>
      52:	00 00       	nop
      54:	83 c0       	rjmp	.+262    	; 0x15c <__bad_interrupt>
      56:	00 00       	nop
      58:	81 c0       	rjmp	.+258    	; 0x15c <__bad_interrupt>
      5a:	00 00       	nop
      5c:	7f c0       	rjmp	.+254    	; 0x15c <__bad_interrupt>
      5e:	00 00       	nop
      60:	7d c0       	rjmp	.+250    	; 0x15c <__bad_interrupt>
      62:	00 00       	nop
      64:	7b c0       	rjmp	.+246    	; 0x15c <__bad_interrupt>
      66:	00 00       	nop
      68:	79 c0       	rjmp	.+242    	; 0x15c <__bad_interrupt>
      6a:	00 00       	nop
      6c:	77 c0       	rjmp	.+238    	; 0x15c <__bad_interrupt>
      6e:	00 00       	nop
      70:	75 c0       	rjmp	.+234    	; 0x15c <__bad_interrupt>
      72:	00 00       	nop
      74:	73 c0       	rjmp	.+230    	; 0x15c <__bad_interrupt>
      76:	00 00       	nop
      78:	71 c0       	rjmp	.+226    	; 0x15c <__bad_interrupt>
      7a:	00 00       	nop
      7c:	6f c0       	rjmp	.+222    	; 0x15c <__bad_interrupt>
      7e:	00 00       	nop
      80:	6d c0       	rjmp	.+218    	; 0x15c <__bad_interrupt>
      82:	00 00       	nop
      84:	6b c0       	rjmp	.+214    	; 0x15c <__bad_interrupt>
      86:	00 00       	nop
      88:	69 c0       	rjmp	.+210    	; 0x15c <__bad_interrupt>
      8a:	00 00       	nop
      8c:	67 c0       	rjmp	.+206    	; 0x15c <__bad_interrupt>
      8e:	00 00       	nop
      90:	65 c0       	rjmp	.+202    	; 0x15c <__bad_interrupt>
      92:	00 00       	nop
      94:	63 c0       	rjmp	.+198    	; 0x15c <__bad_interrupt>
      96:	00 00       	nop
      98:	61 c0       	rjmp	.+194    	; 0x15c <__bad_interrupt>
      9a:	00 00       	nop
      9c:	5f c0       	rjmp	.+190    	; 0x15c <__bad_interrupt>
      9e:	00 00       	nop
      a0:	5d c0       	rjmp	.+186    	; 0x15c <__bad_interrupt>
      a2:	00 00       	nop
      a4:	5b c0       	rjmp	.+182    	; 0x15c <__bad_interrupt>
      a6:	00 00       	nop
      a8:	59 c0       	rjmp	.+178    	; 0x15c <__bad_interrupt>
      aa:	00 00       	nop
      ac:	57 c0       	rjmp	.+174    	; 0x15c <__bad_interrupt>
      ae:	00 00       	nop
      b0:	55 c0       	rjmp	.+170    	; 0x15c <__bad_interrupt>
      b2:	00 00       	nop
      b4:	53 c0       	rjmp	.+166    	; 0x15c <__bad_interrupt>
      b6:	00 00       	nop
      b8:	51 c0       	rjmp	.+162    	; 0x15c <__bad_interrupt>
      ba:	00 00       	nop
      bc:	4f c0       	rjmp	.+158    	; 0x15c <__bad_interrupt>
      be:	00 00       	nop
      c0:	4d c0       	rjmp	.+154    	; 0x15c <__bad_interrupt>
      c2:	00 00       	nop
      c4:	4b c0       	rjmp	.+150    	; 0x15c <__bad_interrupt>
      c6:	00 00       	nop
      c8:	49 c0       	rjmp	.+146    	; 0x15c <__bad_interrupt>
      ca:	00 00       	nop
      cc:	47 c0       	rjmp	.+142    	; 0x15c <__bad_interrupt>
      ce:	00 00       	nop
      d0:	45 c0       	rjmp	.+138    	; 0x15c <__bad_interrupt>
      d2:	00 00       	nop
      d4:	43 c0       	rjmp	.+134    	; 0x15c <__bad_interrupt>
      d6:	00 00       	nop
      d8:	41 c0       	rjmp	.+130    	; 0x15c <__bad_interrupt>
      da:	00 00       	nop
      dc:	3f c0       	rjmp	.+126    	; 0x15c <__bad_interrupt>
      de:	00 00       	nop
      e0:	3d c0       	rjmp	.+122    	; 0x15c <__bad_interrupt>
      e2:	00 00       	nop
      e4:	3b c0       	rjmp	.+118    	; 0x15c <__bad_interrupt>
      e6:	00 00       	nop
      e8:	39 c0       	rjmp	.+114    	; 0x15c <__bad_interrupt>
      ea:	00 00       	nop
      ec:	37 c0       	rjmp	.+110    	; 0x15c <__bad_interrupt>
      ee:	00 00       	nop
      f0:	35 c0       	rjmp	.+106    	; 0x15c <__bad_interrupt>
      f2:	00 00       	nop
      f4:	33 c0       	rjmp	.+102    	; 0x15c <__bad_interrupt>
      f6:	00 00       	nop
      f8:	31 c0       	rjmp	.+98     	; 0x15c <__bad_interrupt>
      fa:	00 00       	nop
      fc:	2f c0       	rjmp	.+94     	; 0x15c <__bad_interrupt>
      fe:	00 00       	nop
     100:	2d c0       	rjmp	.+90     	; 0x15c <__bad_interrupt>
     102:	00 00       	nop
     104:	2b c0       	rjmp	.+86     	; 0x15c <__bad_interrupt>
     106:	00 00       	nop
     108:	29 c0       	rjmp	.+82     	; 0x15c <__bad_interrupt>
     10a:	00 00       	nop
     10c:	27 c0       	rjmp	.+78     	; 0x15c <__bad_interrupt>
     10e:	00 00       	nop
     110:	25 c0       	rjmp	.+74     	; 0x15c <__bad_interrupt>
     112:	00 00       	nop
     114:	23 c0       	rjmp	.+70     	; 0x15c <__bad_interrupt>
     116:	00 00       	nop
     118:	21 c0       	rjmp	.+66     	; 0x15c <__bad_interrupt>
     11a:	00 00       	nop
     11c:	1f c0       	rjmp	.+62     	; 0x15c <__bad_interrupt>
	...

00000120 <__ctors_end>:
     120:	11 24       	eor	r1, r1
     122:	1f be       	out	0x3f, r1	; 63
     124:	cf ef       	ldi	r28, 0xFF	; 255
     126:	d1 e4       	ldi	r29, 0x41	; 65
     128:	de bf       	out	0x3e, r29	; 62
     12a:	cd bf       	out	0x3d, r28	; 61

0000012c <__do_copy_data>:
     12c:	12 e0       	ldi	r17, 0x02	; 2
     12e:	a0 e0       	ldi	r26, 0x00	; 0
     130:	b2 e0       	ldi	r27, 0x02	; 2
     132:	e2 e5       	ldi	r30, 0x52	; 82
     134:	f5 e1       	ldi	r31, 0x15	; 21
     136:	00 e0       	ldi	r16, 0x00	; 0
     138:	0b bf       	out	0x3b, r16	; 59
     13a:	02 c0       	rjmp	.+4      	; 0x140 <__do_copy_data+0x14>
     13c:	07 90       	elpm	r0, Z+
     13e:	0d 92       	st	X+, r0
     140:	aa 37       	cpi	r26, 0x7A	; 122
     142:	b1 07       	cpc	r27, r17
     144:	d9 f7       	brne	.-10     	; 0x13c <__do_copy_data+0x10>

00000146 <__do_clear_bss>:
     146:	24 e0       	ldi	r18, 0x04	; 4
     148:	aa e7       	ldi	r26, 0x7A	; 122
     14a:	b2 e0       	ldi	r27, 0x02	; 2
     14c:	01 c0       	rjmp	.+2      	; 0x150 <.do_clear_bss_start>

0000014e <.do_clear_bss_loop>:
     14e:	1d 92       	st	X+, r1

00000150 <.do_clear_bss_start>:
     150:	a6 31       	cpi	r26, 0x16	; 22
     152:	b2 07       	cpc	r27, r18
     154:	e1 f7       	brne	.-8      	; 0x14e <.do_clear_bss_loop>
     156:	b9 d2       	rcall	.+1394   	; 0x6ca <main>
     158:	0c 94 a7 0a 	jmp	0x154e	; 0x154e <_exit>

0000015c <__bad_interrupt>:
     15c:	51 cf       	rjmp	.-350    	; 0x0 <__vectors>

0000015e <button_init>:
     15e:	6d 98       	cbi	0x0d, 5	; 13
     160:	75 9a       	sbi	0x0e, 5	; 14
     162:	08 95       	ret

00000164 <button_pressed>:
     164:	81 e0       	ldi	r24, 0x01	; 1
     166:	65 99       	sbic	0x0c, 5	; 12
     168:	80 e0       	ldi	r24, 0x00	; 0
     16a:	08 95       	ret

0000016c <button_released>:
     16c:	fb df       	rcall	.-10     	; 0x164 <button_pressed>
     16e:	91 e0       	ldi	r25, 0x01	; 1
     170:	89 27       	eor	r24, r25
     172:	08 95       	ret

00000174 <leds_init>:
     174:	6a 9a       	sbi	0x0d, 2	; 13
     176:	6b 9a       	sbi	0x0d, 3	; 13
     178:	6c 9a       	sbi	0x0d, 4	; 13
     17a:	72 9a       	sbi	0x0e, 2	; 14
     17c:	73 9a       	sbi	0x0e, 3	; 14
     17e:	74 9a       	sbi	0x0e, 4	; 14
     180:	08 95       	ret

00000182 <leds_on>:
     182:	81 30       	cpi	r24, 0x01	; 1
     184:	11 f4       	brne	.+4      	; 0x18a <leds_on+0x8>
     186:	72 98       	cbi	0x0e, 2	; 14
     188:	08 95       	ret
     18a:	82 30       	cpi	r24, 0x02	; 2
     18c:	11 f4       	brne	.+4      	; 0x192 <leds_on+0x10>
     18e:	73 98       	cbi	0x0e, 3	; 14
     190:	08 95       	ret
     192:	83 30       	cpi	r24, 0x03	; 3
     194:	09 f4       	brne	.+2      	; 0x198 <leds_on+0x16>
     196:	74 98       	cbi	0x0e, 4	; 14
     198:	08 95       	ret

0000019a <leds_off>:
     19a:	81 30       	cpi	r24, 0x01	; 1
     19c:	11 f4       	brne	.+4      	; 0x1a2 <leds_off+0x8>
     19e:	72 9a       	sbi	0x0e, 2	; 14
     1a0:	08 95       	ret
     1a2:	82 30       	cpi	r24, 0x02	; 2
     1a4:	11 f4       	brne	.+4      	; 0x1aa <leds_off+0x10>
     1a6:	73 9a       	sbi	0x0e, 3	; 14
     1a8:	08 95       	ret
     1aa:	83 30       	cpi	r24, 0x03	; 3
     1ac:	09 f4       	brne	.+2      	; 0x1b0 <leds_off+0x16>
     1ae:	74 9a       	sbi	0x0e, 4	; 14
     1b0:	08 95       	ret

000001b2 <radio_init>:
     1b2:	ff 92       	push	r15
     1b4:	0f 93       	push	r16
     1b6:	1f 93       	push	r17
     1b8:	cf 93       	push	r28
     1ba:	df 93       	push	r29
     1bc:	08 2f       	mov	r16, r24
     1be:	19 2f       	mov	r17, r25
     1c0:	f6 2e       	mov	r15, r22
     1c2:	c9 e3       	ldi	r28, 0x39	; 57
     1c4:	d1 e0       	ldi	r29, 0x01	; 1
     1c6:	18 82       	st	Y, r1
     1c8:	86 e0       	ldi	r24, 0x06	; 6
     1ca:	90 e0       	ldi	r25, 0x00	; 0
     1cc:	be d3       	rcall	.+1916   	; 0x94a <hw_timer_wait_micro>
     1ce:	81 e0       	ldi	r24, 0x01	; 1
     1d0:	88 83       	st	Y, r24
     1d2:	80 91 41 01 	lds	r24, 0x0141
     1d6:	80 93 7a 02 	sts	0x027A, r24
     1da:	88 23       	and	r24, r24
     1dc:	51 f4       	brne	.+20     	; 0x1f2 <radio_init+0x40>
     1de:	88 e0       	ldi	r24, 0x08	; 8
     1e0:	80 93 42 01 	sts	0x0142, r24
     1e4:	8e ef       	ldi	r24, 0xFE	; 254
     1e6:	91 e0       	ldi	r25, 0x01	; 1
     1e8:	b0 d3       	rcall	.+1888   	; 0x94a <hw_timer_wait_micro>
     1ea:	80 91 41 01 	lds	r24, 0x0141
     1ee:	80 93 7a 02 	sts	0x027A, r24
     1f2:	8b e0       	ldi	r24, 0x0B	; 11
     1f4:	80 93 48 01 	sts	0x0148, r24
     1f8:	8f ef       	ldi	r24, 0xFF	; 255
     1fa:	80 93 4f 01 	sts	0x014F, r24
     1fe:	00 93 7b 02 	sts	0x027B, r16
     202:	10 93 7c 02 	sts	0x027C, r17
     206:	00 93 60 01 	sts	0x0160, r16
     20a:	10 93 61 01 	sts	0x0161, r17
     20e:	10 92 62 01 	sts	0x0162, r1
     212:	10 92 63 01 	sts	0x0163, r1
     216:	80 91 41 01 	lds	r24, 0x0141
     21a:	80 93 7a 02 	sts	0x027A, r24
     21e:	f0 92 7d 02 	sts	0x027D, r15
     222:	df 91       	pop	r29
     224:	cf 91       	pop	r28
     226:	1f 91       	pop	r17
     228:	0f 91       	pop	r16
     22a:	ff 90       	pop	r15
     22c:	08 95       	ret

0000022e <radio_start>:
     22e:	8f ef       	ldi	r24, 0xFF	; 255
     230:	80 93 4f 01 	sts	0x014F, r24
     234:	86 e0       	ldi	r24, 0x06	; 6
     236:	80 93 42 01 	sts	0x0142, r24
     23a:	e1 e4       	ldi	r30, 0x41	; 65
     23c:	f1 e0       	ldi	r31, 0x01	; 1
     23e:	80 81       	ld	r24, Z
     240:	8f 71       	andi	r24, 0x1F	; 31
     242:	86 30       	cpi	r24, 0x06	; 6
     244:	e1 f7       	brne	.-8      	; 0x23e <radio_start+0x10>
     246:	ec e4       	ldi	r30, 0x4C	; 76
     248:	f1 e0       	ldi	r31, 0x01	; 1
     24a:	80 81       	ld	r24, Z
     24c:	80 68       	ori	r24, 0x80	; 128
     24e:	80 83       	st	Z, r24
     250:	08 95       	ret

00000252 <radio_tx_done>:
     252:	80 91 7e 02 	lds	r24, 0x027E
     256:	10 92 7e 02 	sts	0x027E, r1
     25a:	08 95       	ret

0000025c <radio_send>:
     25c:	2f ef       	ldi	r18, 0xFF	; 255
     25e:	20 93 4f 01 	sts	0x014F, r18
     262:	20 91 41 01 	lds	r18, 0x0141
     266:	2f 71       	andi	r18, 0x1F	; 31
     268:	29 30       	cpi	r18, 0x09	; 9
     26a:	41 f0       	breq	.+16     	; 0x27c <radio_send+0x20>
     26c:	29 e0       	ldi	r18, 0x09	; 9
     26e:	20 93 42 01 	sts	0x0142, r18
     272:	e1 e4       	ldi	r30, 0x41	; 65
     274:	f1 e0       	ldi	r31, 0x01	; 1
     276:	20 81       	ld	r18, Z
     278:	29 30       	cpi	r18, 0x09	; 9
     27a:	e9 f7       	brne	.-6      	; 0x276 <radio_send+0x1a>
     27c:	26 2f       	mov	r18, r22
     27e:	23 5f       	subi	r18, 0xF3	; 243
     280:	20 93 80 01 	sts	0x0180, r18
     284:	20 e2       	ldi	r18, 0x20	; 32
     286:	20 93 81 01 	sts	0x0181, r18
     28a:	22 e2       	ldi	r18, 0x22	; 34
     28c:	20 93 82 01 	sts	0x0182, r18
     290:	21 e0       	ldi	r18, 0x01	; 1
     292:	20 93 83 01 	sts	0x0183, r18
     296:	10 92 84 01 	sts	0x0184, r1
     29a:	10 92 85 01 	sts	0x0185, r1
     29e:	50 93 86 01 	sts	0x0186, r21
     2a2:	40 93 87 01 	sts	0x0187, r20
     2a6:	10 92 88 01 	sts	0x0188, r1
     2aa:	10 92 89 01 	sts	0x0189, r1
     2ae:	20 91 7c 02 	lds	r18, 0x027C
     2b2:	20 93 8a 01 	sts	0x018A, r18
     2b6:	20 91 7b 02 	lds	r18, 0x027B
     2ba:	20 93 8b 01 	sts	0x018B, r18
     2be:	66 23       	and	r22, r22
     2c0:	91 f0       	breq	.+36     	; 0x2e6 <radio_send+0x8a>
     2c2:	a8 2f       	mov	r26, r24
     2c4:	b9 2f       	mov	r27, r25
     2c6:	61 50       	subi	r22, 0x01	; 1
     2c8:	70 e0       	ldi	r23, 0x00	; 0
     2ca:	cb 01       	movw	r24, r22
     2cc:	83 57       	subi	r24, 0x73	; 115
     2ce:	9e 4f       	sbci	r25, 0xFE	; 254
     2d0:	ec e8       	ldi	r30, 0x8C	; 140
     2d2:	f1 e0       	ldi	r31, 0x01	; 1
     2d4:	2d 91       	ld	r18, X+
     2d6:	21 93       	st	Z+, r18
     2d8:	e8 17       	cp	r30, r24
     2da:	f9 07       	cpc	r31, r25
     2dc:	d9 f7       	brne	.-10     	; 0x2d4 <radio_send+0x78>
     2de:	fb 01       	movw	r30, r22
     2e0:	e3 57       	subi	r30, 0x73	; 115
     2e2:	fe 4f       	sbci	r31, 0xFE	; 254
     2e4:	02 c0       	rjmp	.+4      	; 0x2ea <radio_send+0x8e>
     2e6:	ec e8       	ldi	r30, 0x8C	; 140
     2e8:	f1 e0       	ldi	r31, 0x01	; 1
     2ea:	10 82       	st	Z, r1
     2ec:	11 82       	std	Z+1, r1	; 0x01
     2ee:	82 e0       	ldi	r24, 0x02	; 2
     2f0:	80 93 42 01 	sts	0x0142, r24
     2f4:	ef e4       	ldi	r30, 0x4F	; 79
     2f6:	f1 e0       	ldi	r31, 0x01	; 1
     2f8:	80 81       	ld	r24, Z
     2fa:	86 ff       	sbrs	r24, 6
     2fc:	fd cf       	rjmp	.-6      	; 0x2f8 <radio_send+0x9c>
     2fe:	8f ef       	ldi	r24, 0xFF	; 255
     300:	80 93 4f 01 	sts	0x014F, r24
     304:	86 e0       	ldi	r24, 0x06	; 6
     306:	80 93 42 01 	sts	0x0142, r24
     30a:	e1 e4       	ldi	r30, 0x41	; 65
     30c:	f1 e0       	ldi	r31, 0x01	; 1
     30e:	80 81       	ld	r24, Z
     310:	8f 71       	andi	r24, 0x1F	; 31
     312:	86 30       	cpi	r24, 0x06	; 6
     314:	e1 f7       	brne	.-8      	; 0x30e <radio_send+0xb2>
     316:	81 e0       	ldi	r24, 0x01	; 1
     318:	80 93 7e 02 	sts	0x027E, r24
     31c:	80 91 41 01 	lds	r24, 0x0141
     320:	80 93 7a 02 	sts	0x027A, r24
     324:	08 95       	ret

00000326 <radio_rxed>:
     326:	90 91 4f 01 	lds	r25, 0x014F
     32a:	81 e0       	ldi	r24, 0x01	; 1
     32c:	93 ff       	sbrs	r25, 3
     32e:	80 e0       	ldi	r24, 0x00	; 0
     330:	08 95       	ret

00000332 <radio_recv>:
     332:	8f 92       	push	r8
     334:	9f 92       	push	r9
     336:	af 92       	push	r10
     338:	bf 92       	push	r11
     33a:	cf 92       	push	r12
     33c:	df 92       	push	r13
     33e:	ef 92       	push	r14
     340:	ff 92       	push	r15
     342:	0f 93       	push	r16
     344:	1f 93       	push	r17
     346:	cf 93       	push	r28
     348:	78 2f       	mov	r23, r24
     34a:	c9 2f       	mov	r28, r25
     34c:	5a 01       	movw	r10, r20
     34e:	49 01       	movw	r8, r18
     350:	40 91 7b 01 	lds	r20, 0x017B
     354:	8f ef       	ldi	r24, 0xFF	; 255
     356:	80 93 00 02 	sts	0x0200, r24
     35a:	ef e4       	ldi	r30, 0x4F	; 79
     35c:	f1 e0       	ldi	r31, 0x01	; 1
     35e:	80 81       	ld	r24, Z
     360:	82 ff       	sbrs	r24, 2
     362:	fd cf       	rjmp	.-6      	; 0x35e <radio_recv+0x2c>
     364:	0c c0       	rjmp	.+24     	; 0x37e <radio_recv+0x4c>
     366:	80 81       	ld	r24, Z
     368:	90 e0       	ldi	r25, 0x00	; 0
     36a:	8f 71       	andi	r24, 0x1F	; 31
     36c:	90 70       	andi	r25, 0x00	; 0
     36e:	28 17       	cp	r18, r24
     370:	39 07       	cpc	r19, r25
     372:	64 f4       	brge	.+24     	; 0x38c <radio_recv+0x5a>
     374:	80 81       	ld	r24, Z
     376:	8f 71       	andi	r24, 0x1F	; 31
     378:	80 93 00 02 	sts	0x0200, r24
     37c:	04 c0       	rjmp	.+8      	; 0x386 <radio_recv+0x54>
     37e:	af e4       	ldi	r26, 0x4F	; 79
     380:	b1 e0       	ldi	r27, 0x01	; 1
     382:	e6 e4       	ldi	r30, 0x46	; 70
     384:	f1 e0       	ldi	r31, 0x01	; 1
     386:	20 91 00 02 	lds	r18, 0x0200
     38a:	30 e0       	ldi	r19, 0x00	; 0
     38c:	8c 91       	ld	r24, X
     38e:	83 ff       	sbrs	r24, 3
     390:	ea cf       	rjmp	.-44     	; 0x366 <radio_recv+0x34>
     392:	84 2f       	mov	r24, r20
     394:	8b 50       	subi	r24, 0x0B	; 11
     396:	46 2f       	mov	r20, r22
     398:	86 17       	cp	r24, r22
     39a:	08 f4       	brcc	.+2      	; 0x39e <radio_recv+0x6c>
     39c:	48 2f       	mov	r20, r24
     39e:	30 91 85 01 	lds	r19, 0x0185
     3a2:	20 e0       	ldi	r18, 0x00	; 0
     3a4:	80 91 86 01 	lds	r24, 0x0186
     3a8:	90 e0       	ldi	r25, 0x00	; 0
     3aa:	82 2b       	or	r24, r18
     3ac:	93 2b       	or	r25, r19
     3ae:	f5 01       	movw	r30, r10
     3b0:	91 83       	std	Z+1, r25	; 0x01
     3b2:	80 83       	st	Z, r24
     3b4:	30 91 89 01 	lds	r19, 0x0189
     3b8:	20 e0       	ldi	r18, 0x00	; 0
     3ba:	80 91 8a 01 	lds	r24, 0x018A
     3be:	90 e0       	ldi	r25, 0x00	; 0
     3c0:	82 2b       	or	r24, r18
     3c2:	93 2b       	or	r25, r19
     3c4:	f4 01       	movw	r30, r8
     3c6:	91 83       	std	Z+1, r25	; 0x01
     3c8:	80 83       	st	Z, r24
     3ca:	44 23       	and	r20, r20
     3cc:	99 f0       	breq	.+38     	; 0x3f4 <radio_recv+0xc2>
     3ce:	a7 2f       	mov	r26, r23
     3d0:	bc 2f       	mov	r27, r28
     3d2:	24 2f       	mov	r18, r20
     3d4:	21 50       	subi	r18, 0x01	; 1
     3d6:	30 e0       	ldi	r19, 0x00	; 0
     3d8:	c9 01       	movw	r24, r18
     3da:	84 57       	subi	r24, 0x74	; 116
     3dc:	9e 4f       	sbci	r25, 0xFE	; 254
     3de:	eb e8       	ldi	r30, 0x8B	; 139
     3e0:	f1 e0       	ldi	r31, 0x01	; 1
     3e2:	51 91       	ld	r21, Z+
     3e4:	5d 93       	st	X+, r21
     3e6:	e8 17       	cp	r30, r24
     3e8:	f9 07       	cpc	r31, r25
     3ea:	d9 f7       	brne	.-10     	; 0x3e2 <radio_recv+0xb0>
     3ec:	f9 01       	movw	r30, r18
     3ee:	e4 57       	subi	r30, 0x74	; 116
     3f0:	fe 4f       	sbci	r31, 0xFE	; 254
     3f2:	02 c0       	rjmp	.+4      	; 0x3f8 <radio_recv+0xc6>
     3f4:	eb e8       	ldi	r30, 0x8B	; 139
     3f6:	f1 e0       	ldi	r31, 0x01	; 1
     3f8:	80 81       	ld	r24, Z
     3fa:	80 93 7f 02 	sts	0x027F, r24
     3fe:	f6 01       	movw	r30, r12
     400:	80 83       	st	Z, r24
     402:	80 91 47 01 	lds	r24, 0x0147
     406:	80 93 80 02 	sts	0x0280, r24
     40a:	f7 01       	movw	r30, r14
     40c:	80 83       	st	Z, r24
     40e:	80 91 46 01 	lds	r24, 0x0146
     412:	88 1f       	adc	r24, r24
     414:	88 27       	eor	r24, r24
     416:	88 1f       	adc	r24, r24
     418:	f8 01       	movw	r30, r16
     41a:	80 83       	st	Z, r24
     41c:	e1 e4       	ldi	r30, 0x41	; 65
     41e:	f1 e0       	ldi	r31, 0x01	; 1
     420:	80 81       	ld	r24, Z
     422:	8f 71       	andi	r24, 0x1F	; 31
     424:	86 30       	cpi	r24, 0x06	; 6
     426:	e1 f7       	brne	.-8      	; 0x420 <radio_recv+0xee>
     428:	ec e4       	ldi	r30, 0x4C	; 76
     42a:	f1 e0       	ldi	r31, 0x01	; 1
     42c:	80 81       	ld	r24, Z
     42e:	8f 77       	andi	r24, 0x7F	; 127
     430:	80 83       	st	Z, r24
     432:	80 81       	ld	r24, Z
     434:	80 68       	ori	r24, 0x80	; 128
     436:	80 83       	st	Z, r24
     438:	8f ef       	ldi	r24, 0xFF	; 255
     43a:	80 93 4f 01 	sts	0x014F, r24
     43e:	80 91 41 01 	lds	r24, 0x0141
     442:	80 93 7a 02 	sts	0x027A, r24
     446:	84 2f       	mov	r24, r20
     448:	82 50       	subi	r24, 0x02	; 2
     44a:	cf 91       	pop	r28
     44c:	1f 91       	pop	r17
     44e:	0f 91       	pop	r16
     450:	ff 90       	pop	r15
     452:	ef 90       	pop	r14
     454:	df 90       	pop	r13
     456:	cf 90       	pop	r12
     458:	bf 90       	pop	r11
     45a:	af 90       	pop	r10
     45c:	9f 90       	pop	r9
     45e:	8f 90       	pop	r8
     460:	08 95       	ret

00000462 <radio_set_power>:
     462:	e5 e4       	ldi	r30, 0x45	; 69
     464:	f1 e0       	ldi	r31, 0x01	; 1
     466:	90 81       	ld	r25, Z
     468:	8f 70       	andi	r24, 0x0F	; 15
     46a:	90 7f       	andi	r25, 0xF0	; 240
     46c:	98 2b       	or	r25, r24
     46e:	90 83       	st	Z, r25
     470:	08 95       	ret

00000472 <radio_rssi>:
     472:	80 91 46 01 	lds	r24, 0x0146
     476:	8f 71       	andi	r24, 0x1F	; 31
     478:	90 91 00 02 	lds	r25, 0x0200
     47c:	98 17       	cp	r25, r24
     47e:	10 f4       	brcc	.+4      	; 0x484 <radio_rssi+0x12>
     480:	80 93 00 02 	sts	0x0200, r24
     484:	08 95       	ret

00000486 <radio_max_rssi>:
     486:	80 91 00 02 	lds	r24, 0x0200
     48a:	10 92 00 02 	sts	0x0200, r1
     48e:	08 95       	ret

00000490 <radio_latest_energy>:
     490:	80 91 80 02 	lds	r24, 0x0280
     494:	08 95       	ret

00000496 <radio_latest_lqi>:
     496:	80 91 7f 02 	lds	r24, 0x027F
     49a:	08 95       	ret

0000049c <radio_rx_all>:
     49c:	80 91 7d 02 	lds	r24, 0x027D
     4a0:	08 95       	ret

000004a2 <radio_getid>:
     4a2:	80 91 7b 02 	lds	r24, 0x027B
     4a6:	90 91 7c 02 	lds	r25, 0x027C
     4aa:	08 95       	ret

000004ac <serial_init>:
     4ac:	4f 92       	push	r4
     4ae:	5f 92       	push	r5
     4b0:	6f 92       	push	r6
     4b2:	7f 92       	push	r7
     4b4:	8f 92       	push	r8
     4b6:	9f 92       	push	r9
     4b8:	af 92       	push	r10
     4ba:	bf 92       	push	r11
     4bc:	cf 92       	push	r12
     4be:	df 92       	push	r13
     4c0:	ef 92       	push	r14
     4c2:	ff 92       	push	r15
     4c4:	4b 01       	movw	r8, r22
     4c6:	5c 01       	movw	r10, r24
     4c8:	d9 d1       	rcall	.+946    	; 0x87c <hw_timer_cpuf>
     4ca:	2b 01       	movw	r4, r22
     4cc:	3c 01       	movw	r6, r24
     4ce:	68 94       	set
     4d0:	13 f8       	bld	r1, 3
     4d2:	76 94       	lsr	r7
     4d4:	67 94       	ror	r6
     4d6:	57 94       	ror	r5
     4d8:	47 94       	ror	r4
     4da:	16 94       	lsr	r1
     4dc:	d1 f7       	brne	.-12     	; 0x4d2 <serial_init+0x26>
     4de:	0f 2e       	mov	r0, r31
     4e0:	fa e0       	ldi	r31, 0x0A	; 10
     4e2:	cf 2e       	mov	r12, r31
     4e4:	f0 e0       	ldi	r31, 0x00	; 0
     4e6:	df 2e       	mov	r13, r31
     4e8:	f0 e0       	ldi	r31, 0x00	; 0
     4ea:	ef 2e       	mov	r14, r31
     4ec:	f0 e0       	ldi	r31, 0x00	; 0
     4ee:	ff 2e       	mov	r15, r31
     4f0:	f0 2d       	mov	r31, r0
     4f2:	c5 01       	movw	r24, r10
     4f4:	b4 01       	movw	r22, r8
     4f6:	a7 01       	movw	r20, r14
     4f8:	96 01       	movw	r18, r12
     4fa:	a5 d4       	rcall	.+2378   	; 0xe46 <__udivmodsi4>
     4fc:	c3 01       	movw	r24, r6
     4fe:	b2 01       	movw	r22, r4
     500:	a2 d4       	rcall	.+2372   	; 0xe46 <__udivmodsi4>
     502:	ca 01       	movw	r24, r20
     504:	b9 01       	movw	r22, r18
     506:	6b 5f       	subi	r22, 0xFB	; 251
     508:	7f 4f       	sbci	r23, 0xFF	; 255
     50a:	8f 4f       	sbci	r24, 0xFF	; 255
     50c:	9f 4f       	sbci	r25, 0xFF	; 255
     50e:	a7 01       	movw	r20, r14
     510:	96 01       	movw	r18, r12
     512:	99 d4       	rcall	.+2354   	; 0xe46 <__udivmodsi4>
     514:	da 01       	movw	r26, r20
     516:	c9 01       	movw	r24, r18
     518:	01 97       	sbiw	r24, 0x01	; 1
     51a:	a1 09       	sbc	r26, r1
     51c:	b1 09       	sbc	r27, r1
     51e:	e1 ec       	ldi	r30, 0xC1	; 193
     520:	f0 e0       	ldi	r31, 0x00	; 0
     522:	10 82       	st	Z, r1
     524:	10 92 c0 00 	sts	0x00C0, r1
     528:	26 e0       	ldi	r18, 0x06	; 6
     52a:	20 93 c2 00 	sts	0x00C2, r18
     52e:	29 2f       	mov	r18, r25
     530:	2f 70       	andi	r18, 0x0F	; 15
     532:	20 93 c5 00 	sts	0x00C5, r18
     536:	80 93 c4 00 	sts	0x00C4, r24
     53a:	88 e1       	ldi	r24, 0x18	; 24
     53c:	80 83       	st	Z, r24
     53e:	81 e0       	ldi	r24, 0x01	; 1
     540:	92 e0       	ldi	r25, 0x02	; 2
     542:	90 93 13 04 	sts	0x0413, r25
     546:	80 93 12 04 	sts	0x0412, r24
     54a:	e2 e1       	ldi	r30, 0x12	; 18
     54c:	f4 e0       	ldi	r31, 0x04	; 4
     54e:	92 93       	st	-Z, r25
     550:	82 93       	st	-Z, r24
     552:	95 83       	std	Z+5, r25	; 0x05
     554:	84 83       	std	Z+4, r24	; 0x04
     556:	81 e0       	ldi	r24, 0x01	; 1
     558:	80 93 81 02 	sts	0x0281, r24
     55c:	ff 90       	pop	r15
     55e:	ef 90       	pop	r14
     560:	df 90       	pop	r13
     562:	cf 90       	pop	r12
     564:	bf 90       	pop	r11
     566:	af 90       	pop	r10
     568:	9f 90       	pop	r9
     56a:	8f 90       	pop	r8
     56c:	7f 90       	pop	r7
     56e:	6f 90       	pop	r6
     570:	5f 90       	pop	r5
     572:	4f 90       	pop	r4
     574:	08 95       	ret

00000576 <serial_is_init>:
     576:	80 91 81 02 	lds	r24, 0x0281
     57a:	08 95       	ret

0000057c <serial_put>:
     57c:	e0 ec       	ldi	r30, 0xC0	; 192
     57e:	f0 e0       	ldi	r31, 0x00	; 0
     580:	90 81       	ld	r25, Z
     582:	95 ff       	sbrs	r25, 5
     584:	fd cf       	rjmp	.-6      	; 0x580 <serial_put+0x4>
     586:	80 93 c6 00 	sts	0x00C6, r24
     58a:	08 95       	ret

0000058c <write>:
     58c:	cf 93       	push	r28
     58e:	c8 2f       	mov	r28, r24
     590:	f5 df       	rcall	.-22     	; 0x57c <serial_put>
     592:	8c 2f       	mov	r24, r28
     594:	90 e0       	ldi	r25, 0x00	; 0
     596:	cf 91       	pop	r28
     598:	08 95       	ret

0000059a <serial_puts>:
     59a:	cf 93       	push	r28
     59c:	df 93       	push	r29
     59e:	ec 01       	movw	r28, r24
     5a0:	88 81       	ld	r24, Y
     5a2:	88 23       	and	r24, r24
     5a4:	29 f0       	breq	.+10     	; 0x5b0 <serial_puts+0x16>
     5a6:	21 96       	adiw	r28, 0x01	; 1
     5a8:	e9 df       	rcall	.-46     	; 0x57c <serial_put>
     5aa:	89 91       	ld	r24, Y+
     5ac:	88 23       	and	r24, r24
     5ae:	e1 f7       	brne	.-8      	; 0x5a8 <serial_puts+0xe>
     5b0:	df 91       	pop	r29
     5b2:	cf 91       	pop	r28
     5b4:	08 95       	ret

000005b6 <serial_ready>:
     5b6:	80 91 c0 00 	lds	r24, 0x00C0
     5ba:	88 1f       	adc	r24, r24
     5bc:	88 27       	eor	r24, r24
     5be:	88 1f       	adc	r24, r24
     5c0:	08 95       	ret

000005c2 <serial_get>:
     5c2:	f9 df       	rcall	.-14     	; 0x5b6 <serial_ready>
     5c4:	88 23       	and	r24, r24
     5c6:	e9 f3       	breq	.-6      	; 0x5c2 <serial_get>
     5c8:	80 91 c6 00 	lds	r24, 0x00C6
     5cc:	08 95       	ret

000005ce <read>:
     5ce:	cf 93       	push	r28
     5d0:	f8 df       	rcall	.-16     	; 0x5c2 <serial_get>
     5d2:	c8 2f       	mov	r28, r24
     5d4:	d3 df       	rcall	.-90     	; 0x57c <serial_put>
     5d6:	8c 2f       	mov	r24, r28
     5d8:	90 e0       	ldi	r25, 0x00	; 0
     5da:	cf 91       	pop	r28
     5dc:	08 95       	ret

000005de <os_timer_add>:
     5de:	bc 01       	movw	r22, r24
     5e0:	40 91 87 02 	lds	r20, 0x0287
     5e4:	50 91 88 02 	lds	r21, 0x0288
     5e8:	48 17       	cp	r20, r24
     5ea:	59 07       	cpc	r21, r25
     5ec:	41 f1       	breq	.+80     	; 0x63e <os_timer_add+0x60>
     5ee:	a9 e8       	ldi	r26, 0x89	; 137
     5f0:	b2 e0       	ldi	r27, 0x02	; 2
     5f2:	9d 01       	movw	r18, r26
     5f4:	2e 5e       	subi	r18, 0xEE	; 238
     5f6:	3f 4f       	sbci	r19, 0xFF	; 255
     5f8:	fd 01       	movw	r30, r26
     5fa:	81 91       	ld	r24, Z+
     5fc:	91 91       	ld	r25, Z+
     5fe:	86 17       	cp	r24, r22
     600:	97 07       	cpc	r25, r23
     602:	e9 f0       	breq	.+58     	; 0x63e <os_timer_add+0x60>
     604:	e2 17       	cp	r30, r18
     606:	f3 07       	cpc	r31, r19
     608:	c1 f7       	brne	.-16     	; 0x5fa <os_timer_add+0x1c>
     60a:	41 15       	cp	r20, r1
     60c:	51 05       	cpc	r21, r1
     60e:	41 f0       	breq	.+16     	; 0x620 <os_timer_add+0x42>
     610:	21 e0       	ldi	r18, 0x01	; 1
     612:	30 e0       	ldi	r19, 0x00	; 0
     614:	a9 01       	movw	r20, r18
     616:	8d 91       	ld	r24, X+
     618:	9d 91       	ld	r25, X+
     61a:	00 97       	sbiw	r24, 0x00	; 0
     61c:	59 f4       	brne	.+22     	; 0x634 <os_timer_add+0x56>
     61e:	02 c0       	rjmp	.+4      	; 0x624 <os_timer_add+0x46>
     620:	40 e0       	ldi	r20, 0x00	; 0
     622:	50 e0       	ldi	r21, 0x00	; 0
     624:	fa 01       	movw	r30, r20
     626:	ee 0f       	add	r30, r30
     628:	ff 1f       	adc	r31, r31
     62a:	e9 57       	subi	r30, 0x79	; 121
     62c:	fd 4f       	sbci	r31, 0xFD	; 253
     62e:	71 83       	std	Z+1, r23	; 0x01
     630:	60 83       	st	Z, r22
     632:	08 95       	ret
     634:	2f 5f       	subi	r18, 0xFF	; 255
     636:	3f 4f       	sbci	r19, 0xFF	; 255
     638:	2a 30       	cpi	r18, 0x0A	; 10
     63a:	31 05       	cpc	r19, r1
     63c:	59 f7       	brne	.-42     	; 0x614 <os_timer_add+0x36>
     63e:	08 95       	ret

00000640 <os_timer_tick>:
     640:	fc 01       	movw	r30, r24
     642:	00 97       	sbiw	r24, 0x00	; 0
     644:	29 f1       	breq	.+74     	; 0x690 <os_timer_tick+0x50>
     646:	80 81       	ld	r24, Z
     648:	88 23       	and	r24, r24
     64a:	11 f1       	breq	.+68     	; 0x690 <os_timer_tick+0x50>
     64c:	80 85       	ldd	r24, Z+8	; 0x08
     64e:	91 85       	ldd	r25, Z+9	; 0x09
     650:	00 97       	sbiw	r24, 0x00	; 0
     652:	f1 f0       	breq	.+60     	; 0x690 <os_timer_tick+0x50>
     654:	66 23       	and	r22, r22
     656:	39 f0       	breq	.+14     	; 0x666 <os_timer_tick+0x26>
     658:	22 81       	ldd	r18, Z+2	; 0x02
     65a:	21 30       	cpi	r18, 0x01	; 1
     65c:	c9 f4       	brne	.+50     	; 0x690 <os_timer_tick+0x50>
     65e:	01 97       	sbiw	r24, 0x01	; 1
     660:	91 87       	std	Z+9, r25	; 0x09
     662:	80 87       	std	Z+8, r24	; 0x08
     664:	06 c0       	rjmp	.+12     	; 0x672 <os_timer_tick+0x32>
     666:	22 81       	ldd	r18, Z+2	; 0x02
     668:	22 23       	and	r18, r18
     66a:	91 f4       	brne	.+36     	; 0x690 <os_timer_tick+0x50>
     66c:	01 97       	sbiw	r24, 0x01	; 1
     66e:	91 87       	std	Z+9, r25	; 0x09
     670:	80 87       	std	Z+8, r24	; 0x08
     672:	80 85       	ldd	r24, Z+8	; 0x08
     674:	91 85       	ldd	r25, Z+9	; 0x09
     676:	00 97       	sbiw	r24, 0x00	; 0
     678:	59 f4       	brne	.+22     	; 0x690 <os_timer_tick+0x50>
     67a:	81 e0       	ldi	r24, 0x01	; 1
     67c:	83 83       	std	Z+3, r24	; 0x03
     67e:	86 81       	ldd	r24, Z+6	; 0x06
     680:	97 81       	ldd	r25, Z+7	; 0x07
     682:	00 97       	sbiw	r24, 0x00	; 0
     684:	19 f0       	breq	.+6      	; 0x68c <os_timer_tick+0x4c>
     686:	81 e0       	ldi	r24, 0x01	; 1
     688:	81 83       	std	Z+1, r24	; 0x01
     68a:	01 c0       	rjmp	.+2      	; 0x68e <os_timer_tick+0x4e>
     68c:	11 82       	std	Z+1, r1	; 0x01
     68e:	10 82       	st	Z, r1
     690:	08 95       	ret

00000692 <timer_init>:
     692:	fc 01       	movw	r30, r24
     694:	10 82       	st	Z, r1
     696:	11 82       	std	Z+1, r1	; 0x01
     698:	62 83       	std	Z+2, r22	; 0x02
     69a:	13 82       	std	Z+3, r1	; 0x03
     69c:	55 83       	std	Z+5, r21	; 0x05
     69e:	44 83       	std	Z+4, r20	; 0x04
     6a0:	37 83       	std	Z+7, r19	; 0x07
     6a2:	26 83       	std	Z+6, r18	; 0x06
     6a4:	9c cf       	rjmp	.-200    	; 0x5de <os_timer_add>

000006a6 <timer_start>:
     6a6:	fc 01       	movw	r30, r24
     6a8:	80 81       	ld	r24, Z
     6aa:	88 23       	and	r24, r24
     6ac:	41 f4       	brne	.+16     	; 0x6be <timer_start+0x18>
     6ae:	81 e0       	ldi	r24, 0x01	; 1
     6b0:	80 83       	st	Z, r24
     6b2:	11 82       	std	Z+1, r1	; 0x01
     6b4:	13 82       	std	Z+3, r1	; 0x03
     6b6:	84 81       	ldd	r24, Z+4	; 0x04
     6b8:	95 81       	ldd	r25, Z+5	; 0x05
     6ba:	91 87       	std	Z+9, r25	; 0x09
     6bc:	80 87       	std	Z+8, r24	; 0x08
     6be:	cf 01       	movw	r24, r30
     6c0:	8e cf       	rjmp	.-228    	; 0x5de <os_timer_add>

000006c2 <timer_stop>:
     6c2:	fc 01       	movw	r30, r24
     6c4:	10 82       	st	Z, r1
     6c6:	11 82       	std	Z+1, r1	; 0x01
     6c8:	08 95       	ret

000006ca <main>:
     6ca:	cf 93       	push	r28
     6cc:	df 93       	push	r29
     6ce:	cd b7       	in	r28, 0x3d	; 61
     6d0:	de b7       	in	r29, 0x3e	; 62
     6d2:	27 97       	sbiw	r28, 0x07	; 7
     6d4:	0f b6       	in	r0, 0x3f	; 63
     6d6:	f8 94       	cli
     6d8:	de bf       	out	0x3e, r29	; 62
     6da:	0f be       	out	0x3f, r0	; 63
     6dc:	cd bf       	out	0x3d, r28	; 61
     6de:	07 e8       	ldi	r16, 0x87	; 135
     6e0:	12 e0       	ldi	r17, 0x02	; 2
     6e2:	0f 2e       	mov	r0, r31
     6e4:	f4 e1       	ldi	r31, 0x14	; 20
     6e6:	af 2e       	mov	r10, r31
     6e8:	bb 24       	eor	r11, r11
     6ea:	f0 2d       	mov	r31, r0
     6ec:	a0 0e       	add	r10, r16
     6ee:	b1 1e       	adc	r11, r17
     6f0:	f8 01       	movw	r30, r16
     6f2:	11 92       	st	Z+, r1
     6f4:	11 92       	st	Z+, r1
     6f6:	ea 15       	cp	r30, r10
     6f8:	fb 05       	cpc	r31, r11
     6fa:	d9 f7       	brne	.-10     	; 0x6f2 <main+0x28>
     6fc:	c4 d0       	rcall	.+392    	; 0x886 <hw_timer_init>
     6fe:	97 d1       	rcall	.+814    	; 0xa2e <application_start>
     700:	44 24       	eor	r4, r4
     702:	55 24       	eor	r5, r5
     704:	33 24       	eor	r3, r3
     706:	70 2e       	mov	r7, r16
     708:	61 2e       	mov	r6, r17
     70a:	0f 2e       	mov	r0, r31
     70c:	f7 e8       	ldi	r31, 0x87	; 135
     70e:	8f 2e       	mov	r8, r31
     710:	f2 e0       	ldi	r31, 0x02	; 2
     712:	9f 2e       	mov	r9, r31
     714:	f0 2d       	mov	r31, r0
     716:	9d dd       	rcall	.-1222   	; 0x252 <radio_tx_done>
     718:	88 23       	and	r24, r24
     71a:	09 f0       	breq	.+2      	; 0x71e <main+0x54>
     71c:	3e d3       	rcall	.+1660   	; 0xd9a <application_radio_tx_done>
     71e:	03 de       	rcall	.-1018   	; 0x326 <radio_rxed>
     720:	88 23       	and	r24, r24
     722:	89 f1       	breq	.+98     	; 0x786 <main+0xbc>
     724:	8b e9       	ldi	r24, 0x9B	; 155
     726:	92 e0       	ldi	r25, 0x02	; 2
     728:	60 e8       	ldi	r22, 0x80	; 128
     72a:	ae 01       	movw	r20, r28
     72c:	4a 5f       	subi	r20, 0xFA	; 250
     72e:	5f 4f       	sbci	r21, 0xFF	; 255
     730:	9e 01       	movw	r18, r28
     732:	2c 5f       	subi	r18, 0xFC	; 252
     734:	3f 4f       	sbci	r19, 0xFF	; 255
     736:	8e 01       	movw	r16, r28
     738:	0d 5f       	subi	r16, 0xFD	; 253
     73a:	1f 4f       	sbci	r17, 0xFF	; 255
     73c:	ee 24       	eor	r14, r14
     73e:	ff 24       	eor	r15, r15
     740:	68 94       	set
     742:	e1 f8       	bld	r14, 1
     744:	ec 0e       	add	r14, r28
     746:	fd 1e       	adc	r15, r29
     748:	6e 01       	movw	r12, r28
     74a:	08 94       	sec
     74c:	c1 1c       	adc	r12, r1
     74e:	d1 1c       	adc	r13, r1
     750:	f0 dd       	rcall	.-1056   	; 0x332 <radio_recv>
     752:	08 2f       	mov	r16, r24
     754:	8b 81       	ldd	r24, Y+3	; 0x03
     756:	88 23       	and	r24, r24
     758:	b1 f0       	breq	.+44     	; 0x786 <main+0xbc>
     75a:	a3 de       	rcall	.-698    	; 0x4a2 <radio_getid>
     75c:	2e 81       	ldd	r18, Y+6	; 0x06
     75e:	3f 81       	ldd	r19, Y+7	; 0x07
     760:	82 17       	cp	r24, r18
     762:	93 07       	cpc	r25, r19
     764:	39 f0       	breq	.+14     	; 0x774 <main+0xaa>
     766:	8f ef       	ldi	r24, 0xFF	; 255
     768:	2f 3f       	cpi	r18, 0xFF	; 255
     76a:	38 07       	cpc	r19, r24
     76c:	19 f0       	breq	.+6      	; 0x774 <main+0xaa>
     76e:	96 de       	rcall	.-724    	; 0x49c <radio_rx_all>
     770:	88 23       	and	r24, r24
     772:	49 f0       	breq	.+18     	; 0x786 <main+0xbc>
     774:	6c 81       	ldd	r22, Y+4	; 0x04
     776:	7d 81       	ldd	r23, Y+5	; 0x05
     778:	8e 81       	ldd	r24, Y+6	; 0x06
     77a:	9f 81       	ldd	r25, Y+7	; 0x07
     77c:	40 2f       	mov	r20, r16
     77e:	50 e0       	ldi	r21, 0x00	; 0
     780:	2b e9       	ldi	r18, 0x9B	; 155
     782:	32 e0       	ldi	r19, 0x02	; 2
     784:	93 d1       	rcall	.+806    	; 0xaac <application_radio_rx_msg>
     786:	a5 d0       	rcall	.+330    	; 0x8d2 <hw_timer_now_us>
     788:	dc 01       	movw	r26, r24
     78a:	cb 01       	movw	r24, r22
     78c:	40 91 82 02 	lds	r20, 0x0282
     790:	50 91 83 02 	lds	r21, 0x0283
     794:	60 91 84 02 	lds	r22, 0x0284
     798:	70 91 85 02 	lds	r23, 0x0285
     79c:	48 17       	cp	r20, r24
     79e:	59 07       	cpc	r21, r25
     7a0:	6a 07       	cpc	r22, r26
     7a2:	7b 07       	cpc	r23, r27
     7a4:	78 f5       	brcc	.+94     	; 0x804 <main+0x13a>
     7a6:	95 d0       	rcall	.+298    	; 0x8d2 <hw_timer_now_us>
     7a8:	dc 01       	movw	r26, r24
     7aa:	cb 01       	movw	r24, r22
     7ac:	88 51       	subi	r24, 0x18	; 24
     7ae:	9c 4f       	sbci	r25, 0xFC	; 252
     7b0:	af 4f       	sbci	r26, 0xFF	; 255
     7b2:	bf 4f       	sbci	r27, 0xFF	; 255
     7b4:	80 93 82 02 	sts	0x0282, r24
     7b8:	90 93 83 02 	sts	0x0283, r25
     7bc:	a0 93 84 02 	sts	0x0284, r26
     7c0:	b0 93 85 02 	sts	0x0285, r27
     7c4:	07 2d       	mov	r16, r7
     7c6:	16 2d       	mov	r17, r6
     7c8:	d8 01       	movw	r26, r16
     7ca:	8d 91       	ld	r24, X+
     7cc:	9d 91       	ld	r25, X+
     7ce:	8d 01       	movw	r16, r26
     7d0:	61 e0       	ldi	r22, 0x01	; 1
     7d2:	36 df       	rcall	.-404    	; 0x640 <os_timer_tick>
     7d4:	0a 15       	cp	r16, r10
     7d6:	1b 05       	cpc	r17, r11
     7d8:	b9 f7       	brne	.-18     	; 0x7c8 <main+0xfe>
     7da:	08 94       	sec
     7dc:	41 1c       	adc	r4, r1
     7de:	51 1c       	adc	r5, r1
     7e0:	b8 ee       	ldi	r27, 0xE8	; 232
     7e2:	4b 16       	cp	r4, r27
     7e4:	b3 e0       	ldi	r27, 0x03	; 3
     7e6:	5b 06       	cpc	r5, r27
     7e8:	68 f0       	brcs	.+26     	; 0x804 <main+0x13a>
     7ea:	07 2d       	mov	r16, r7
     7ec:	16 2d       	mov	r17, r6
     7ee:	f8 01       	movw	r30, r16
     7f0:	81 91       	ld	r24, Z+
     7f2:	91 91       	ld	r25, Z+
     7f4:	8f 01       	movw	r16, r30
     7f6:	60 e0       	ldi	r22, 0x00	; 0
     7f8:	23 df       	rcall	.-442    	; 0x640 <os_timer_tick>
     7fa:	a0 16       	cp	r10, r16
     7fc:	b1 06       	cpc	r11, r17
     7fe:	b9 f7       	brne	.-18     	; 0x7ee <main+0x124>
     800:	44 24       	eor	r4, r4
     802:	55 24       	eor	r5, r5
     804:	a7 2d       	mov	r26, r7
     806:	b6 2d       	mov	r27, r6
     808:	00 e0       	ldi	r16, 0x00	; 0
     80a:	10 e0       	ldi	r17, 0x00	; 0
     80c:	ed 91       	ld	r30, X+
     80e:	fd 91       	ld	r31, X+
     810:	30 97       	sbiw	r30, 0x00	; 0
     812:	71 f1       	breq	.+92     	; 0x870 <main+0x1a6>
     814:	83 81       	ldd	r24, Z+3	; 0x03
     816:	88 23       	and	r24, r24
     818:	59 f1       	breq	.+86     	; 0x870 <main+0x1a6>
     81a:	cf 01       	movw	r24, r30
     81c:	25 d1       	rcall	.+586    	; 0xa68 <application_timer_tick>
     81e:	c8 01       	movw	r24, r16
     820:	88 0f       	add	r24, r24
     822:	99 1f       	adc	r25, r25
     824:	88 0d       	add	r24, r8
     826:	99 1d       	adc	r25, r9
     828:	dc 01       	movw	r26, r24
     82a:	ed 91       	ld	r30, X+
     82c:	fc 91       	ld	r31, X
     82e:	11 97       	sbiw	r26, 0x01	; 1
     830:	13 82       	std	Z+3, r1	; 0x03
     832:	81 81       	ldd	r24, Z+1	; 0x01
     834:	88 23       	and	r24, r24
     836:	41 f0       	breq	.+16     	; 0x848 <main+0x17e>
     838:	86 81       	ldd	r24, Z+6	; 0x06
     83a:	97 81       	ldd	r25, Z+7	; 0x07
     83c:	00 97       	sbiw	r24, 0x00	; 0
     83e:	21 f0       	breq	.+8      	; 0x848 <main+0x17e>
     840:	91 87       	std	Z+9, r25	; 0x09
     842:	80 87       	std	Z+8, r24	; 0x08
     844:	81 e0       	ldi	r24, 0x01	; 1
     846:	80 83       	st	Z, r24
     848:	11 82       	std	Z+1, r1	; 0x01
     84a:	8c dc       	rcall	.-1768   	; 0x164 <button_pressed>
     84c:	88 23       	and	r24, r24
     84e:	31 f0       	breq	.+12     	; 0x85c <main+0x192>
     850:	33 20       	and	r3, r3
     852:	21 f4       	brne	.+8      	; 0x85c <main+0x192>
     854:	bd d2       	rcall	.+1402   	; 0xdd0 <application_button_pressed>
     856:	33 24       	eor	r3, r3
     858:	33 94       	inc	r3
     85a:	5d cf       	rjmp	.-326    	; 0x716 <main+0x4c>
     85c:	87 dc       	rcall	.-1778   	; 0x16c <button_released>
     85e:	88 23       	and	r24, r24
     860:	09 f4       	brne	.+2      	; 0x864 <main+0x19a>
     862:	59 cf       	rjmp	.-334    	; 0x716 <main+0x4c>
     864:	33 20       	and	r3, r3
     866:	09 f4       	brne	.+2      	; 0x86a <main+0x1a0>
     868:	56 cf       	rjmp	.-340    	; 0x716 <main+0x4c>
     86a:	dd d2       	rcall	.+1466   	; 0xe26 <application_button_released>
     86c:	33 24       	eor	r3, r3
     86e:	53 cf       	rjmp	.-346    	; 0x716 <main+0x4c>
     870:	0f 5f       	subi	r16, 0xFF	; 255
     872:	1f 4f       	sbci	r17, 0xFF	; 255
     874:	0a 30       	cpi	r16, 0x0A	; 10
     876:	11 05       	cpc	r17, r1
     878:	49 f6       	brne	.-110    	; 0x80c <main+0x142>
     87a:	e7 cf       	rjmp	.-50     	; 0x84a <main+0x180>

0000087c <hw_timer_cpuf>:
     87c:	60 e0       	ldi	r22, 0x00	; 0
     87e:	72 e1       	ldi	r23, 0x12	; 18
     880:	8a e7       	ldi	r24, 0x7A	; 122
     882:	90 e0       	ldi	r25, 0x00	; 0
     884:	08 95       	ret

00000886 <hw_timer_init>:
     886:	10 92 80 00 	sts	0x0080, r1
     88a:	81 e0       	ldi	r24, 0x01	; 1
     88c:	80 93 81 00 	sts	0x0081, r24
     890:	10 92 82 00 	sts	0x0082, r1
     894:	10 92 85 00 	sts	0x0085, r1
     898:	10 92 84 00 	sts	0x0084, r1
     89c:	10 92 6f 00 	sts	0x006F, r1
     8a0:	08 95       	ret

000008a2 <hw_timer_start>:
     8a2:	cf 93       	push	r28
     8a4:	df 93       	push	r29
     8a6:	ec 01       	movw	r28, r24
     8a8:	ee df       	rcall	.-36     	; 0x886 <hw_timer_init>
     8aa:	d0 93 85 00 	sts	0x0085, r29
     8ae:	c0 93 84 00 	sts	0x0084, r28
     8b2:	df 91       	pop	r29
     8b4:	cf 91       	pop	r28
     8b6:	08 95       	ret

000008b8 <hw_timer_overflow>:
     8b8:	81 e0       	ldi	r24, 0x01	; 1
     8ba:	b0 9b       	sbis	0x16, 0	; 22
     8bc:	80 e0       	ldi	r24, 0x00	; 0
     8be:	88 23       	and	r24, r24
     8c0:	11 f0       	breq	.+4      	; 0x8c6 <hw_timer_overflow+0xe>
     8c2:	91 e0       	ldi	r25, 0x01	; 1
     8c4:	96 bb       	out	0x16, r25	; 22
     8c6:	08 95       	ret

000008c8 <hw_timer_now>:
     8c8:	80 91 84 00 	lds	r24, 0x0084
     8cc:	90 91 85 00 	lds	r25, 0x0085
     8d0:	08 95       	ret

000008d2 <hw_timer_now_us>:
     8d2:	cf 92       	push	r12
     8d4:	df 92       	push	r13
     8d6:	ef 92       	push	r14
     8d8:	ff 92       	push	r15
     8da:	c0 90 84 00 	lds	r12, 0x0084
     8de:	d0 90 85 00 	lds	r13, 0x0085
     8e2:	d6 94       	lsr	r13
     8e4:	c7 94       	ror	r12
     8e6:	d6 94       	lsr	r13
     8e8:	c7 94       	ror	r12
     8ea:	d6 94       	lsr	r13
     8ec:	c7 94       	ror	r12
     8ee:	ee 24       	eor	r14, r14
     8f0:	ff 24       	eor	r15, r15
     8f2:	e2 df       	rcall	.-60     	; 0x8b8 <hw_timer_overflow>
     8f4:	88 23       	and	r24, r24
     8f6:	a1 f0       	breq	.+40     	; 0x920 <hw_timer_now_us+0x4e>
     8f8:	80 91 1b 03 	lds	r24, 0x031B
     8fc:	90 91 1c 03 	lds	r25, 0x031C
     900:	a0 91 1d 03 	lds	r26, 0x031D
     904:	b0 91 1e 03 	lds	r27, 0x031E
     908:	80 50       	subi	r24, 0x00	; 0
     90a:	90 4e       	sbci	r25, 0xE0	; 224
     90c:	af 4f       	sbci	r26, 0xFF	; 255
     90e:	bf 4f       	sbci	r27, 0xFF	; 255
     910:	80 93 1b 03 	sts	0x031B, r24
     914:	90 93 1c 03 	sts	0x031C, r25
     918:	a0 93 1d 03 	sts	0x031D, r26
     91c:	b0 93 1e 03 	sts	0x031E, r27
     920:	80 91 1b 03 	lds	r24, 0x031B
     924:	90 91 1c 03 	lds	r25, 0x031C
     928:	a0 91 1d 03 	lds	r26, 0x031D
     92c:	b0 91 1e 03 	lds	r27, 0x031E
     930:	c8 0e       	add	r12, r24
     932:	d9 1e       	adc	r13, r25
     934:	ea 1e       	adc	r14, r26
     936:	fb 1e       	adc	r15, r27
     938:	6c 2d       	mov	r22, r12
     93a:	7d 2d       	mov	r23, r13
     93c:	8e 2d       	mov	r24, r14
     93e:	9f 2d       	mov	r25, r15
     940:	ff 90       	pop	r15
     942:	ef 90       	pop	r14
     944:	df 90       	pop	r13
     946:	cf 90       	pop	r12
     948:	08 95       	ret

0000094a <hw_timer_wait_micro>:
     94a:	8f 92       	push	r8
     94c:	9f 92       	push	r9
     94e:	af 92       	push	r10
     950:	bf 92       	push	r11
     952:	cf 92       	push	r12
     954:	df 92       	push	r13
     956:	ef 92       	push	r14
     958:	ff 92       	push	r15
     95a:	4c 01       	movw	r8, r24
     95c:	aa 24       	eor	r10, r10
     95e:	bb 24       	eor	r11, r11
     960:	88 0c       	add	r8, r8
     962:	99 1c       	adc	r9, r9
     964:	aa 1c       	adc	r10, r10
     966:	bb 1c       	adc	r11, r11
     968:	88 0c       	add	r8, r8
     96a:	99 1c       	adc	r9, r9
     96c:	aa 1c       	adc	r10, r10
     96e:	bb 1c       	adc	r11, r11
     970:	88 0c       	add	r8, r8
     972:	99 1c       	adc	r9, r9
     974:	aa 1c       	adc	r10, r10
     976:	bb 1c       	adc	r11, r11
     978:	80 e0       	ldi	r24, 0x00	; 0
     97a:	88 16       	cp	r8, r24
     97c:	80 e0       	ldi	r24, 0x00	; 0
     97e:	98 06       	cpc	r9, r24
     980:	81 e0       	ldi	r24, 0x01	; 1
     982:	a8 06       	cpc	r10, r24
     984:	80 e0       	ldi	r24, 0x00	; 0
     986:	b8 06       	cpc	r11, r24
     988:	78 f1       	brcs	.+94     	; 0x9e8 <hw_timer_wait_micro+0x9e>
     98a:	75 01       	movw	r14, r10
     98c:	64 01       	movw	r12, r8
     98e:	80 e0       	ldi	r24, 0x00	; 0
     990:	90 e0       	ldi	r25, 0x00	; 0
     992:	87 df       	rcall	.-242    	; 0x8a2 <hw_timer_start>
     994:	80 e0       	ldi	r24, 0x00	; 0
     996:	90 e0       	ldi	r25, 0x00	; 0
     998:	af ef       	ldi	r26, 0xFF	; 255
     99a:	bf ef       	ldi	r27, 0xFF	; 255
     99c:	c8 0e       	add	r12, r24
     99e:	d9 1e       	adc	r13, r25
     9a0:	ea 1e       	adc	r14, r26
     9a2:	fb 1e       	adc	r15, r27
     9a4:	89 df       	rcall	.-238    	; 0x8b8 <hw_timer_overflow>
     9a6:	88 23       	and	r24, r24
     9a8:	e9 f3       	breq	.-6      	; 0x9a4 <hw_timer_wait_micro+0x5a>
     9aa:	90 e0       	ldi	r25, 0x00	; 0
     9ac:	c9 16       	cp	r12, r25
     9ae:	90 e0       	ldi	r25, 0x00	; 0
     9b0:	d9 06       	cpc	r13, r25
     9b2:	91 e0       	ldi	r25, 0x01	; 1
     9b4:	e9 06       	cpc	r14, r25
     9b6:	90 e0       	ldi	r25, 0x00	; 0
     9b8:	f9 06       	cpc	r15, r25
     9ba:	48 f7       	brcc	.-46     	; 0x98e <hw_timer_wait_micro+0x44>
     9bc:	80 e0       	ldi	r24, 0x00	; 0
     9be:	90 e0       	ldi	r25, 0x00	; 0
     9c0:	af ef       	ldi	r26, 0xFF	; 255
     9c2:	bf ef       	ldi	r27, 0xFF	; 255
     9c4:	88 0e       	add	r8, r24
     9c6:	99 1e       	adc	r9, r25
     9c8:	aa 1e       	adc	r10, r26
     9ca:	bb 1e       	adc	r11, r27
     9cc:	b5 01       	movw	r22, r10
     9ce:	88 27       	eor	r24, r24
     9d0:	99 27       	eor	r25, r25
     9d2:	20 e0       	ldi	r18, 0x00	; 0
     9d4:	30 e0       	ldi	r19, 0x00	; 0
     9d6:	4f ef       	ldi	r20, 0xFF	; 255
     9d8:	5f ef       	ldi	r21, 0xFF	; 255
     9da:	26 d2       	rcall	.+1100   	; 0xe28 <__mulsi3>
     9dc:	dc 01       	movw	r26, r24
     9de:	cb 01       	movw	r24, r22
     9e0:	88 0e       	add	r8, r24
     9e2:	99 1e       	adc	r9, r25
     9e4:	aa 1e       	adc	r10, r26
     9e6:	bb 1e       	adc	r11, r27
     9e8:	c4 01       	movw	r24, r8
     9ea:	80 95       	com	r24
     9ec:	90 95       	com	r25
     9ee:	59 df       	rcall	.-334    	; 0x8a2 <hw_timer_start>
     9f0:	63 df       	rcall	.-314    	; 0x8b8 <hw_timer_overflow>
     9f2:	88 23       	and	r24, r24
     9f4:	e9 f3       	breq	.-6      	; 0x9f0 <hw_timer_wait_micro+0xa6>
     9f6:	ff 90       	pop	r15
     9f8:	ef 90       	pop	r14
     9fa:	df 90       	pop	r13
     9fc:	cf 90       	pop	r12
     9fe:	bf 90       	pop	r11
     a00:	af 90       	pop	r10
     a02:	9f 90       	pop	r9
     a04:	8f 90       	pop	r8
     a06:	08 95       	ret

00000a08 <hw_timer_wait_milli>:
     a08:	cf 93       	push	r28
     a0a:	df 93       	push	r29
     a0c:	ec 01       	movw	r28, r24
     a0e:	82 34       	cpi	r24, 0x42	; 66
     a10:	91 05       	cpc	r25, r1
     a12:	40 f0       	brcs	.+16     	; 0xa24 <hw_timer_wait_milli+0x1c>
     a14:	88 ee       	ldi	r24, 0xE8	; 232
     a16:	9d ef       	ldi	r25, 0xFD	; 253
     a18:	98 df       	rcall	.-208    	; 0x94a <hw_timer_wait_micro>
     a1a:	c1 54       	subi	r28, 0x41	; 65
     a1c:	d0 40       	sbci	r29, 0x00	; 0
     a1e:	c2 34       	cpi	r28, 0x42	; 66
     a20:	d1 05       	cpc	r29, r1
     a22:	c0 f7       	brcc	.-16     	; 0xa14 <hw_timer_wait_milli+0xc>
     a24:	ce 01       	movw	r24, r28
     a26:	91 df       	rcall	.-222    	; 0x94a <hw_timer_wait_micro>
     a28:	df 91       	pop	r29
     a2a:	cf 91       	pop	r28
     a2c:	08 95       	ret

00000a2e <application_start>:
     a2e:	a2 db       	rcall	.-2236   	; 0x174 <leds_init>
     a30:	96 db       	rcall	.-2260   	; 0x15e <button_init>
     a32:	61 e0       	ldi	r22, 0x01	; 1
     a34:	83 e0       	ldi	r24, 0x03	; 3
     a36:	90 e0       	ldi	r25, 0x00	; 0
     a38:	bc db       	rcall	.-2184   	; 0x1b2 <radio_init>
     a3a:	81 e0       	ldi	r24, 0x01	; 1
     a3c:	12 dd       	rcall	.-1500   	; 0x462 <radio_set_power>
     a3e:	f7 db       	rcall	.-2066   	; 0x22e <radio_start>
	leds_init();
	button_init();
	radio_init(NODE_ID, true); //true indicates receives radio message for ALL nodes
	radio_set_power(1);
	radio_start();
	serial_init(9600);
     a40:	60 e8       	ldi	r22, 0x80	; 128
     a42:	75 e2       	ldi	r23, 0x25	; 37
     a44:	80 e0       	ldi	r24, 0x00	; 0
     a46:	90 e0       	ldi	r25, 0x00	; 0
     a48:	31 dd       	rcall	.-1438   	; 0x4ac <serial_init>
	printf("test\r\n");
     a4a:	80 e1       	ldi	r24, 0x10	; 16
     a4c:	92 e0       	ldi	r25, 0x02	; 2
     a4e:	90 d2       	rcall	.+1312   	; 0xf70 <puts>
	
	timer_init(&timer1, TIMER_MILLISECONDS, 1000, 100);
     a50:	24 e6       	ldi	r18, 0x64	; 100
     a52:	30 e0       	ldi	r19, 0x00	; 0
     a54:	48 ee       	ldi	r20, 0xE8	; 232
     a56:	53 e0       	ldi	r21, 0x03	; 3
     a58:	61 e0       	ldi	r22, 0x01	; 1
     a5a:	8a e2       	ldi	r24, 0x2A	; 42
     a5c:	93 e0       	ldi	r25, 0x03	; 3
     a5e:	19 de       	rcall	.-974    	; 0x692 <timer_init>
	timer_start(&timer1);
     a60:	8a e2       	ldi	r24, 0x2A	; 42
     a62:	93 e0       	ldi	r25, 0x03	; 3
     a64:	20 ce       	rjmp	.-960    	; 0x6a6 <timer_start>
     a66:	08 95       	ret

00000a68 <application_timer_tick>:
//
// Timer tick handler
//
void application_timer_tick(timer *t)
{
	if(canSend){
     a68:	80 91 28 03 	lds	r24, 0x0328
     a6c:	88 23       	and	r24, r24
     a6e:	e9 f0       	breq	.+58     	; 0xaaa <application_timer_tick+0x42>
		printf("sending a message\r\n");
     a70:	86 e1       	ldi	r24, 0x16	; 22
     a72:	92 e0       	ldi	r25, 0x02	; 2
     a74:	7d d2       	rcall	.+1274   	; 0xf70 <puts>
		if(tx_buffer_inuse == false)
     a76:	80 91 29 03 	lds	r24, 0x0329
     a7a:	81 11       	cpse	r24, r1
     a7c:	16 c0       	rjmp	.+44     	; 0xaaa <application_timer_tick+0x42>
		{
			tx_buffer_inuse = true;
     a7e:	81 e0       	ldi	r24, 0x01	; 1
     a80:	80 93 29 03 	sts	0x0329, r24
			canSend = false;
     a84:	10 92 28 03 	sts	0x0328, r1
			
			memcpy(&tx_buffer, &newPkt, sizeof(Packet));
     a88:	84 e1       	ldi	r24, 0x14	; 20
     a8a:	ec ef       	ldi	r30, 0xFC	; 252
     a8c:	f3 e0       	ldi	r31, 0x03	; 3
     a8e:	ac e7       	ldi	r26, 0x7C	; 124
     a90:	b3 e0       	ldi	r27, 0x03	; 3
     a92:	01 90       	ld	r0, Z+
     a94:	0d 92       	st	X+, r0
     a96:	8a 95       	dec	r24
     a98:	e1 f7       	brne	.-8      	; 0xa92 <application_timer_tick+0x2a>
			
			radio_send(tx_buffer, sizeof(Packet), newPkt.dst);
     a9a:	40 91 fc 03 	lds	r20, 0x03FC
     a9e:	50 91 fd 03 	lds	r21, 0x03FD
     aa2:	64 e1       	ldi	r22, 0x14	; 20
     aa4:	8c e7       	ldi	r24, 0x7C	; 124
     aa6:	93 e0       	ldi	r25, 0x03	; 3
     aa8:	d9 cb       	rjmp	.-2126   	; 0x25c <radio_send>
     aaa:	08 95       	ret

00000aac <application_radio_rx_msg>:

//print out the encrypted message, show that you can't increment it
//(you know that the opening protocol is increment - if your security relies on the protocol not being known then it will eventually be broken)
//try increment it anyway, show that the response isn't the equivalent of ACKACKACK.
void application_radio_rx_msg(unsigned short dst, unsigned short src, int len, unsigned char *msgdata)
{
     aac:	6f 92       	push	r6
     aae:	7f 92       	push	r7
     ab0:	8f 92       	push	r8
     ab2:	9f 92       	push	r9
     ab4:	af 92       	push	r10
     ab6:	bf 92       	push	r11
     ab8:	cf 92       	push	r12
     aba:	df 92       	push	r13
     abc:	ef 92       	push	r14
     abe:	ff 92       	push	r15
     ac0:	0f 93       	push	r16
     ac2:	1f 93       	push	r17
     ac4:	cf 93       	push	r28
     ac6:	df 93       	push	r29
     ac8:	cd b7       	in	r28, 0x3d	; 61
     aca:	de b7       	in	r29, 0x3e	; 62
     acc:	61 97       	sbiw	r28, 0x11	; 17
     ace:	0f b6       	in	r0, 0x3f	; 63
     ad0:	f8 94       	cli
     ad2:	de bf       	out	0x3e, r29	; 62
     ad4:	0f be       	out	0x3f, r0	; 63
     ad6:	cd bf       	out	0x3d, r28	; 61
     ad8:	78 2e       	mov	r7, r24
     ada:	69 2e       	mov	r6, r25
     adc:	7b 01       	movw	r14, r22
     ade:	5a 01       	movw	r10, r20
     ae0:	49 01       	movw	r8, r18
	printf("dst: %d\r\n", dst);
     ae2:	9f 93       	push	r25
     ae4:	8f 93       	push	r24
     ae6:	89 e2       	ldi	r24, 0x29	; 41
     ae8:	92 e0       	ldi	r25, 0x02	; 2
     aea:	9f 93       	push	r25
     aec:	8f 93       	push	r24
     aee:	2a d2       	rcall	.+1108   	; 0xf44 <printf>
	printf("src: %d\r\n", src);
     af0:	ff 92       	push	r15
     af2:	ef 92       	push	r14
     af4:	83 e3       	ldi	r24, 0x33	; 51
     af6:	92 e0       	ldi	r25, 0x02	; 2
     af8:	9f 93       	push	r25
     afa:	8f 93       	push	r24
     afc:	23 d2       	rcall	.+1094   	; 0xf44 <printf>
	printf("received a message\r\n");
     afe:	8d e3       	ldi	r24, 0x3D	; 61
     b00:	92 e0       	ldi	r25, 0x02	; 2
     b02:	36 d2       	rcall	.+1132   	; 0xf70 <puts>
	char string[17];
	for(int i = 4; i<len; i++)
     b04:	0f b6       	in	r0, 0x3f	; 63
     b06:	f8 94       	cli
     b08:	de bf       	out	0x3e, r29	; 62
     b0a:	0f be       	out	0x3f, r0	; 63
     b0c:	cd bf       	out	0x3d, r28	; 61
     b0e:	95 e0       	ldi	r25, 0x05	; 5
     b10:	a9 16       	cp	r10, r25
     b12:	b1 04       	cpc	r11, r1
     b14:	bc f0       	brlt	.+46     	; 0xb44 <application_radio_rx_msg+0x98>
     b16:	64 01       	movw	r12, r8
     b18:	e4 e0       	ldi	r30, 0x04	; 4
     b1a:	ce 0e       	add	r12, r30
     b1c:	d1 1c       	adc	r13, r1
     b1e:	8e 01       	movw	r16, r28
     b20:	0f 5f       	subi	r16, 0xFF	; 255
     b22:	1f 4f       	sbci	r17, 0xFF	; 255
     b24:	8a 0c       	add	r8, r10
     b26:	9b 1c       	adc	r9, r11
     b28:	56 01       	movw	r10, r12
	{
		printf("%c", msgdata[i]);
     b2a:	f6 01       	movw	r30, r12
     b2c:	81 91       	ld	r24, Z+
     b2e:	6f 01       	movw	r12, r30
     b30:	90 e0       	ldi	r25, 0x00	; 0
     b32:	19 d2       	rcall	.+1074   	; 0xf66 <putchar>
		string[i-4] = msgdata[i];
     b34:	f5 01       	movw	r30, r10
     b36:	80 81       	ld	r24, Z
     b38:	f8 01       	movw	r30, r16
     b3a:	81 93       	st	Z+, r24
     b3c:	8f 01       	movw	r16, r30
{
	printf("dst: %d\r\n", dst);
	printf("src: %d\r\n", src);
	printf("received a message\r\n");
	char string[17];
	for(int i = 4; i<len; i++)
     b3e:	c8 14       	cp	r12, r8
     b40:	d9 04       	cpc	r13, r9
     b42:	91 f7       	brne	.-28     	; 0xb28 <application_radio_rx_msg+0x7c>
	{
		printf("%c", msgdata[i]);
		string[i-4] = msgdata[i];
	}
	string[16] = '\0';
     b44:	19 8a       	std	Y+17, r1	; 0x11

	if(!canOpen){
     b46:	80 91 24 03 	lds	r24, 0x0324
     b4a:	81 11       	cpse	r24, r1
     b4c:	aa c0       	rjmp	.+340    	; 0xca2 <application_radio_rx_msg+0x1f6>
		if(firstPacket){
     b4e:	80 91 0f 02 	lds	r24, 0x020F
     b52:	88 23       	and	r24, r24
     b54:	89 f1       	breq	.+98     	; 0xbb8 <application_radio_rx_msg+0x10c>
			printf("1\r\n");
     b56:	81 e5       	ldi	r24, 0x51	; 81
     b58:	92 e0       	ldi	r25, 0x02	; 2
     b5a:	0a d2       	rcall	.+1044   	; 0xf70 <puts>
			gate = dst;
     b5c:	70 92 45 03 	sts	0x0345, r7
     b60:	60 92 46 03 	sts	0x0346, r6
			opener = src;
     b64:	f0 92 48 03 	sts	0x0348, r15
     b68:	e0 92 47 03 	sts	0x0347, r14
			
			printf("gate: %d\r\n", gate);
     b6c:	6f 92       	push	r6
     b6e:	7f 92       	push	r7
     b70:	84 e5       	ldi	r24, 0x54	; 84
     b72:	92 e0       	ldi	r25, 0x02	; 2
     b74:	9f 93       	push	r25
     b76:	8f 93       	push	r24
     b78:	e5 d1       	rcall	.+970    	; 0xf44 <printf>
			printf("opener: %d\r\n", opener);
     b7a:	80 91 48 03 	lds	r24, 0x0348
     b7e:	8f 93       	push	r24
     b80:	80 91 47 03 	lds	r24, 0x0347
     b84:	8f 93       	push	r24
     b86:	8f e5       	ldi	r24, 0x5F	; 95
     b88:	92 e0       	ldi	r25, 0x02	; 2
     b8a:	9f 93       	push	r25
     b8c:	8f 93       	push	r24
     b8e:	da d1       	rcall	.+948    	; 0xf44 <printf>
			
			sprintf(openKeyword, string);
     b90:	ce 01       	movw	r24, r28
     b92:	01 96       	adiw	r24, 0x01	; 1
     b94:	9f 93       	push	r25
     b96:	8f 93       	push	r24
     b98:	8a e5       	ldi	r24, 0x5A	; 90
     b9a:	93 e0       	ldi	r25, 0x03	; 3
     b9c:	9f 93       	push	r25
     b9e:	8f 93       	push	r24
     ba0:	14 d2       	rcall	.+1064   	; 0xfca <sprintf>
			firstPacket = false;
     ba2:	10 92 0f 02 	sts	0x020F, r1
			secondPacket = true;
     ba6:	81 e0       	ldi	r24, 0x01	; 1
     ba8:	80 93 27 03 	sts	0x0327, r24
     bac:	0f b6       	in	r0, 0x3f	; 63
     bae:	f8 94       	cli
     bb0:	de bf       	out	0x3e, r29	; 62
     bb2:	0f be       	out	0x3f, r0	; 63
     bb4:	cd bf       	out	0x3d, r28	; 61
     bb6:	dc c0       	rjmp	.+440    	; 0xd70 <application_radio_rx_msg+0x2c4>
		}
		else if(src == gate && secondPacket){
     bb8:	80 91 45 03 	lds	r24, 0x0345
     bbc:	90 91 46 03 	lds	r25, 0x0346
     bc0:	e8 16       	cp	r14, r24
     bc2:	f9 06       	cpc	r15, r25
     bc4:	d1 f4       	brne	.+52     	; 0xbfa <application_radio_rx_msg+0x14e>
     bc6:	80 91 27 03 	lds	r24, 0x0327
     bca:	88 23       	and	r24, r24
     bcc:	b1 f0       	breq	.+44     	; 0xbfa <application_radio_rx_msg+0x14e>
			printf("2\r\n");
     bce:	8c e6       	ldi	r24, 0x6C	; 108
     bd0:	92 e0       	ldi	r25, 0x02	; 2
     bd2:	ce d1       	rcall	.+924    	; 0xf70 <puts>
			sprintf(challenge, string);
     bd4:	ce 01       	movw	r24, r28
     bd6:	01 96       	adiw	r24, 0x01	; 1
     bd8:	9f 93       	push	r25
     bda:	8f 93       	push	r24
     bdc:	8b e6       	ldi	r24, 0x6B	; 107
     bde:	93 e0       	ldi	r25, 0x03	; 3
     be0:	9f 93       	push	r25
     be2:	8f 93       	push	r24
     be4:	f2 d1       	rcall	.+996    	; 0xfca <sprintf>
			secondPacket = false;
     be6:	10 92 27 03 	sts	0x0327, r1
			thirdPacket = true;
     bea:	81 e0       	ldi	r24, 0x01	; 1
     bec:	80 93 26 03 	sts	0x0326, r24
     bf0:	0f 90       	pop	r0
     bf2:	0f 90       	pop	r0
     bf4:	0f 90       	pop	r0
     bf6:	0f 90       	pop	r0
     bf8:	bb c0       	rjmp	.+374    	; 0xd70 <application_radio_rx_msg+0x2c4>
		}
		else if(src == opener && thirdPacket){
     bfa:	80 91 47 03 	lds	r24, 0x0347
     bfe:	90 91 48 03 	lds	r25, 0x0348
     c02:	e8 16       	cp	r14, r24
     c04:	f9 06       	cpc	r15, r25
     c06:	d1 f4       	brne	.+52     	; 0xc3c <application_radio_rx_msg+0x190>
     c08:	80 91 26 03 	lds	r24, 0x0326
     c0c:	88 23       	and	r24, r24
     c0e:	b1 f0       	breq	.+44     	; 0xc3c <application_radio_rx_msg+0x190>
			printf("3\r\n");
     c10:	8f e6       	ldi	r24, 0x6F	; 111
     c12:	92 e0       	ldi	r25, 0x02	; 2
     c14:	ad d1       	rcall	.+858    	; 0xf70 <puts>
			sprintf(response,string);
     c16:	ce 01       	movw	r24, r28
     c18:	01 96       	adiw	r24, 0x01	; 1
     c1a:	9f 93       	push	r25
     c1c:	8f 93       	push	r24
     c1e:	84 e3       	ldi	r24, 0x34	; 52
     c20:	93 e0       	ldi	r25, 0x03	; 3
     c22:	9f 93       	push	r25
     c24:	8f 93       	push	r24
     c26:	d1 d1       	rcall	.+930    	; 0xfca <sprintf>
			thirdPacket = false;
     c28:	10 92 26 03 	sts	0x0326, r1
			fourthPacket = true;
     c2c:	81 e0       	ldi	r24, 0x01	; 1
     c2e:	80 93 25 03 	sts	0x0325, r24
     c32:	0f 90       	pop	r0
     c34:	0f 90       	pop	r0
     c36:	0f 90       	pop	r0
     c38:	0f 90       	pop	r0
     c3a:	9a c0       	rjmp	.+308    	; 0xd70 <application_radio_rx_msg+0x2c4>
		}
		//going to assume that the attacker will know if the attack is successful or not (ack or nack). In reality user could input into device that the opening was successful or not.
		else if(fourthPacket){
     c3c:	80 91 25 03 	lds	r24, 0x0325
     c40:	88 23       	and	r24, r24
     c42:	09 f4       	brne	.+2      	; 0xc46 <application_radio_rx_msg+0x19a>
     c44:	95 c0       	rjmp	.+298    	; 0xd70 <application_radio_rx_msg+0x2c4>
			//the opening was successful - there should be some recognisable difference between the challenge and response.
			//going to simplify and assume its an addition. Would be better to learn what the difference is.
			printf("4\r\n");
     c46:	82 e7       	ldi	r24, 0x72	; 114
     c48:	92 e0       	ldi	r25, 0x02	; 2
     c4a:	92 d1       	rcall	.+804    	; 0xf70 <puts>
			canOpen = true;
     c4c:	81 e0       	ldi	r24, 0x01	; 1
     c4e:	80 93 24 03 	sts	0x0324, r24
			difference = atol(response) - atol(challenge);
     c52:	84 e3       	ldi	r24, 0x34	; 52
     c54:	93 e0       	ldi	r25, 0x03	; 3
     c56:	32 d1       	rcall	.+612    	; 0xebc <atol>
     c58:	6b 01       	movw	r12, r22
     c5a:	7c 01       	movw	r14, r24
     c5c:	8b e6       	ldi	r24, 0x6B	; 107
     c5e:	93 e0       	ldi	r25, 0x03	; 3
     c60:	2d d1       	rcall	.+602    	; 0xebc <atol>
     c62:	c6 1a       	sub	r12, r22
     c64:	d7 0a       	sbc	r13, r23
     c66:	e8 0a       	sbc	r14, r24
     c68:	f9 0a       	sbc	r15, r25
     c6a:	c0 92 1f 03 	sts	0x031F, r12
     c6e:	d0 92 20 03 	sts	0x0320, r13
     c72:	e0 92 21 03 	sts	0x0321, r14
     c76:	f0 92 22 03 	sts	0x0322, r15
			sprintf(ackackack, string);
     c7a:	ce 01       	movw	r24, r28
     c7c:	01 96       	adiw	r24, 0x01	; 1
     c7e:	9f 93       	push	r25
     c80:	8f 93       	push	r24
     c82:	89 e4       	ldi	r24, 0x49	; 73
     c84:	93 e0       	ldi	r25, 0x03	; 3
     c86:	9f 93       	push	r25
     c88:	8f 93       	push	r24
     c8a:	9f d1       	rcall	.+830    	; 0xfca <sprintf>
			leds_off(LED_RED);
     c8c:	83 e0       	ldi	r24, 0x03	; 3
     c8e:	85 da       	rcall	.-2806   	; 0x19a <leds_off>
			leds_on(LED_ORANGE);
     c90:	82 e0       	ldi	r24, 0x02	; 2
     c92:	77 da       	rcall	.-2834   	; 0x182 <leds_on>
			leds_off(LED_GREEN);
     c94:	81 e0       	ldi	r24, 0x01	; 1
     c96:	81 da       	rcall	.-2814   	; 0x19a <leds_off>
     c98:	0f 90       	pop	r0
     c9a:	0f 90       	pop	r0
     c9c:	0f 90       	pop	r0
     c9e:	0f 90       	pop	r0
     ca0:	67 c0       	rjmp	.+206    	; 0xd70 <application_radio_rx_msg+0x2c4>
		}	
	}
	else
	{
		if(expectingAck){
     ca2:	80 91 23 03 	lds	r24, 0x0323
     ca6:	88 23       	and	r24, r24
     ca8:	b9 f0       	breq	.+46     	; 0xcd8 <application_radio_rx_msg+0x22c>
			expectingAck = false;
     caa:	10 92 23 03 	sts	0x0323, r1
			if(strcmp(string, ackackack) == 0){
     cae:	69 e4       	ldi	r22, 0x49	; 73
     cb0:	73 e0       	ldi	r23, 0x03	; 3
     cb2:	ce 01       	movw	r24, r28
     cb4:	01 96       	adiw	r24, 0x01	; 1
     cb6:	28 d1       	rcall	.+592    	; 0xf08 <strcmp>
     cb8:	89 2b       	or	r24, r25
     cba:	39 f4       	brne	.+14     	; 0xcca <application_radio_rx_msg+0x21e>
				//Yes, gate has opened!
				leds_off(LED_RED);
     cbc:	83 e0       	ldi	r24, 0x03	; 3
     cbe:	6d da       	rcall	.-2854   	; 0x19a <leds_off>
				leds_off(LED_ORANGE);
     cc0:	82 e0       	ldi	r24, 0x02	; 2
     cc2:	6b da       	rcall	.-2858   	; 0x19a <leds_off>
				leds_on(LED_GREEN);
     cc4:	81 e0       	ldi	r24, 0x01	; 1
     cc6:	5d da       	rcall	.-2886   	; 0x182 <leds_on>
     cc8:	53 c0       	rjmp	.+166    	; 0xd70 <application_radio_rx_msg+0x2c4>
			}
			else{
				//Damn.
				leds_off(LED_GREEN);
     cca:	81 e0       	ldi	r24, 0x01	; 1
     ccc:	66 da       	rcall	.-2868   	; 0x19a <leds_off>
				leds_off(LED_ORANGE);
     cce:	82 e0       	ldi	r24, 0x02	; 2
     cd0:	64 da       	rcall	.-2872   	; 0x19a <leds_off>
				leds_on(LED_RED);
     cd2:	83 e0       	ldi	r24, 0x03	; 3
     cd4:	56 da       	rcall	.-2900   	; 0x182 <leds_on>
     cd6:	4c c0       	rjmp	.+152    	; 0xd70 <application_radio_rx_msg+0x2c4>
			}
		}
		else{
			if(src == gate){
     cd8:	80 91 45 03 	lds	r24, 0x0345
     cdc:	90 91 46 03 	lds	r25, 0x0346
     ce0:	e8 16       	cp	r14, r24
     ce2:	f9 06       	cpc	r15, r25
     ce4:	09 f0       	breq	.+2      	; 0xce8 <application_radio_rx_msg+0x23c>
     ce6:	44 c0       	rjmp	.+136    	; 0xd70 <application_radio_rx_msg+0x2c4>
				long temp1 = atol(string); //its gonna try incrementing the value. But since we don't know the key for encryption, we can't do this properly.
     ce8:	ce 01       	movw	r24, r28
     cea:	01 96       	adiw	r24, 0x01	; 1
     cec:	e7 d0       	rcall	.+462    	; 0xebc <atol>
				temp1 += difference;
     cee:	00 91 1f 03 	lds	r16, 0x031F
     cf2:	10 91 20 03 	lds	r17, 0x0320
     cf6:	20 91 21 03 	lds	r18, 0x0321
     cfa:	30 91 22 03 	lds	r19, 0x0322
     cfe:	dc 01       	movw	r26, r24
     d00:	cb 01       	movw	r24, r22
     d02:	80 0f       	add	r24, r16
     d04:	91 1f       	adc	r25, r17
     d06:	a2 1f       	adc	r26, r18
     d08:	b3 1f       	adc	r27, r19

				newPkt.dst = src;
     d0a:	f0 92 fd 03 	sts	0x03FD, r15
     d0e:	e0 92 fc 03 	sts	0x03FC, r14
				if(opener != 0){
     d12:	20 91 47 03 	lds	r18, 0x0347
     d16:	30 91 48 03 	lds	r19, 0x0348
     d1a:	21 15       	cp	r18, r1
     d1c:	31 05       	cpc	r19, r1
     d1e:	29 f0       	breq	.+10     	; 0xd2a <application_radio_rx_msg+0x27e>
					newPkt.src = opener;
     d20:	30 93 ff 03 	sts	0x03FF, r19
     d24:	20 93 fe 03 	sts	0x03FE, r18
     d28:	06 c0       	rjmp	.+12     	; 0xd36 <application_radio_rx_msg+0x28a>
				}
				else{
					newPkt.src = NODE_ID;
     d2a:	23 e0       	ldi	r18, 0x03	; 3
     d2c:	30 e0       	ldi	r19, 0x00	; 0
     d2e:	30 93 ff 03 	sts	0x03FF, r19
     d32:	20 93 fe 03 	sts	0x03FE, r18
				}
				sprintf(newPkt.dt, "%lu", temp1);
     d36:	bf 93       	push	r27
     d38:	af 93       	push	r26
     d3a:	9f 93       	push	r25
     d3c:	8f 93       	push	r24
     d3e:	85 e7       	ldi	r24, 0x75	; 117
     d40:	92 e0       	ldi	r25, 0x02	; 2
     d42:	9f 93       	push	r25
     d44:	8f 93       	push	r24
     d46:	80 e0       	ldi	r24, 0x00	; 0
     d48:	94 e0       	ldi	r25, 0x04	; 4
     d4a:	9f 93       	push	r25
     d4c:	8f 93       	push	r24
     d4e:	3d d1       	rcall	.+634    	; 0xfca <sprintf>
				canSend = true;
     d50:	11 e0       	ldi	r17, 0x01	; 1
     d52:	10 93 28 03 	sts	0x0328, r17
				
				leds_off(LED_RED);
     d56:	83 e0       	ldi	r24, 0x03	; 3
     d58:	20 da       	rcall	.-3008   	; 0x19a <leds_off>
				leds_on(LED_ORANGE);
     d5a:	82 e0       	ldi	r24, 0x02	; 2
     d5c:	12 da       	rcall	.-3036   	; 0x182 <leds_on>
				leds_off(LED_GREEN);
     d5e:	81 e0       	ldi	r24, 0x01	; 1
     d60:	1c da       	rcall	.-3016   	; 0x19a <leds_off>
				
				expectingAck = true;
     d62:	10 93 23 03 	sts	0x0323, r17
     d66:	0f b6       	in	r0, 0x3f	; 63
     d68:	f8 94       	cli
     d6a:	de bf       	out	0x3e, r29	; 62
     d6c:	0f be       	out	0x3f, r0	; 63
     d6e:	cd bf       	out	0x3d, r28	; 61
			}
		}
	}
}
     d70:	61 96       	adiw	r28, 0x11	; 17
     d72:	0f b6       	in	r0, 0x3f	; 63
     d74:	f8 94       	cli
     d76:	de bf       	out	0x3e, r29	; 62
     d78:	0f be       	out	0x3f, r0	; 63
     d7a:	cd bf       	out	0x3d, r28	; 61
     d7c:	df 91       	pop	r29
     d7e:	cf 91       	pop	r28
     d80:	1f 91       	pop	r17
     d82:	0f 91       	pop	r16
     d84:	ff 90       	pop	r15
     d86:	ef 90       	pop	r14
     d88:	df 90       	pop	r13
     d8a:	cf 90       	pop	r12
     d8c:	bf 90       	pop	r11
     d8e:	af 90       	pop	r10
     d90:	9f 90       	pop	r9
     d92:	8f 90       	pop	r8
     d94:	7f 90       	pop	r7
     d96:	6f 90       	pop	r6
     d98:	08 95       	ret

00000d9a <application_radio_tx_done>:
// This function is called whenever a radio message has been transmitted
// You need to free up the transmit buffer here
//
void application_radio_tx_done()
{
	tx_buffer_inuse = false;
     d9a:	10 92 29 03 	sts	0x0329, r1
     d9e:	ec e7       	ldi	r30, 0x7C	; 124
     da0:	f3 e0       	ldi	r31, 0x03	; 3
     da2:	8c ef       	ldi	r24, 0xFC	; 252
     da4:	93 e0       	ldi	r25, 0x03	; 3
	
	//empty buffers after data has been sent
	for(int j=0; j<RADIO_MAX_LEN; j++)
	{
		tx_buffer[j] = 0x00;
     da6:	11 92       	st	Z+, r1
void application_radio_tx_done()
{
	tx_buffer_inuse = false;
	
	//empty buffers after data has been sent
	for(int j=0; j<RADIO_MAX_LEN; j++)
     da8:	e8 17       	cp	r30, r24
     daa:	f9 07       	cpc	r31, r25
     dac:	e1 f7       	brne	.-8      	; 0xda6 <application_radio_tx_done+0xc>
	{
		tx_buffer[j] = 0x00;
	}
	newPkt.dst = 0x00;
     dae:	10 92 fd 03 	sts	0x03FD, r1
     db2:	10 92 fc 03 	sts	0x03FC, r1
	newPkt.src = 0x00;
     db6:	10 92 ff 03 	sts	0x03FF, r1
     dba:	10 92 fe 03 	sts	0x03FE, r1
     dbe:	e0 e0       	ldi	r30, 0x00	; 0
     dc0:	f4 e0       	ldi	r31, 0x04	; 4
     dc2:	80 e1       	ldi	r24, 0x10	; 16
     dc4:	94 e0       	ldi	r25, 0x04	; 4
	for(int i=0;i<sizeof(newPkt.dt);i++){
		newPkt.dt[i] = 0;
     dc6:	11 92       	st	Z+, r1
	{
		tx_buffer[j] = 0x00;
	}
	newPkt.dst = 0x00;
	newPkt.src = 0x00;
	for(int i=0;i<sizeof(newPkt.dt);i++){
     dc8:	e8 17       	cp	r30, r24
     dca:	f9 07       	cpc	r31, r25
     dcc:	e1 f7       	brne	.-8      	; 0xdc6 <application_radio_tx_done+0x2c>
		newPkt.dt[i] = 0;
	}
}
     dce:	08 95       	ret

00000dd0 <application_button_pressed>:

void application_button_pressed()
{
	if(canOpen){
     dd0:	80 91 24 03 	lds	r24, 0x0324
     dd4:	88 23       	and	r24, r24
     dd6:	31 f1       	breq	.+76     	; 0xe24 <application_button_pressed+0x54>
		newPkt.dst = gate;
     dd8:	80 91 45 03 	lds	r24, 0x0345
     ddc:	90 91 46 03 	lds	r25, 0x0346
     de0:	90 93 fd 03 	sts	0x03FD, r25
     de4:	80 93 fc 03 	sts	0x03FC, r24
		newPkt.src = opener; //pretend :)
     de8:	80 91 47 03 	lds	r24, 0x0347
     dec:	90 91 48 03 	lds	r25, 0x0348
     df0:	90 93 ff 03 	sts	0x03FF, r25
     df4:	80 93 fe 03 	sts	0x03FE, r24
		sprintf(newPkt.dt, openKeyword);
     df8:	8a e5       	ldi	r24, 0x5A	; 90
     dfa:	93 e0       	ldi	r25, 0x03	; 3
     dfc:	9f 93       	push	r25
     dfe:	8f 93       	push	r24
     e00:	80 e0       	ldi	r24, 0x00	; 0
     e02:	94 e0       	ldi	r25, 0x04	; 4
     e04:	9f 93       	push	r25
     e06:	8f 93       	push	r24
     e08:	e0 d0       	rcall	.+448    	; 0xfca <sprintf>
		canSend = true;
     e0a:	81 e0       	ldi	r24, 0x01	; 1
     e0c:	80 93 28 03 	sts	0x0328, r24
		
		leds_off(LED_RED);
     e10:	83 e0       	ldi	r24, 0x03	; 3
     e12:	c3 d9       	rcall	.-3194   	; 0x19a <leds_off>
		leds_on(LED_ORANGE);
     e14:	82 e0       	ldi	r24, 0x02	; 2
     e16:	b5 d9       	rcall	.-3222   	; 0x182 <leds_on>
		leds_on(LED_GREEN);
     e18:	81 e0       	ldi	r24, 0x01	; 1
     e1a:	b3 d9       	rcall	.-3226   	; 0x182 <leds_on>
     e1c:	0f 90       	pop	r0
     e1e:	0f 90       	pop	r0
     e20:	0f 90       	pop	r0
     e22:	0f 90       	pop	r0
     e24:	08 95       	ret

00000e26 <application_button_released>:
	}
}

void application_button_released()
{
     e26:	08 95       	ret

00000e28 <__mulsi3>:
     e28:	db 01       	movw	r26, r22
     e2a:	8f 93       	push	r24
     e2c:	9f 93       	push	r25
     e2e:	2d d0       	rcall	.+90     	; 0xe8a <__muluhisi3>
     e30:	bf 91       	pop	r27
     e32:	af 91       	pop	r26
     e34:	a2 9f       	mul	r26, r18
     e36:	80 0d       	add	r24, r0
     e38:	91 1d       	adc	r25, r1
     e3a:	a3 9f       	mul	r26, r19
     e3c:	90 0d       	add	r25, r0
     e3e:	b2 9f       	mul	r27, r18
     e40:	90 0d       	add	r25, r0
     e42:	11 24       	eor	r1, r1
     e44:	08 95       	ret

00000e46 <__udivmodsi4>:
     e46:	a1 e2       	ldi	r26, 0x21	; 33
     e48:	1a 2e       	mov	r1, r26
     e4a:	aa 1b       	sub	r26, r26
     e4c:	bb 1b       	sub	r27, r27
     e4e:	fd 01       	movw	r30, r26
     e50:	0d c0       	rjmp	.+26     	; 0xe6c <__udivmodsi4_ep>

00000e52 <__udivmodsi4_loop>:
     e52:	aa 1f       	adc	r26, r26
     e54:	bb 1f       	adc	r27, r27
     e56:	ee 1f       	adc	r30, r30
     e58:	ff 1f       	adc	r31, r31
     e5a:	a2 17       	cp	r26, r18
     e5c:	b3 07       	cpc	r27, r19
     e5e:	e4 07       	cpc	r30, r20
     e60:	f5 07       	cpc	r31, r21
     e62:	20 f0       	brcs	.+8      	; 0xe6c <__udivmodsi4_ep>
     e64:	a2 1b       	sub	r26, r18
     e66:	b3 0b       	sbc	r27, r19
     e68:	e4 0b       	sbc	r30, r20
     e6a:	f5 0b       	sbc	r31, r21

00000e6c <__udivmodsi4_ep>:
     e6c:	66 1f       	adc	r22, r22
     e6e:	77 1f       	adc	r23, r23
     e70:	88 1f       	adc	r24, r24
     e72:	99 1f       	adc	r25, r25
     e74:	1a 94       	dec	r1
     e76:	69 f7       	brne	.-38     	; 0xe52 <__udivmodsi4_loop>
     e78:	60 95       	com	r22
     e7a:	70 95       	com	r23
     e7c:	80 95       	com	r24
     e7e:	90 95       	com	r25
     e80:	9b 01       	movw	r18, r22
     e82:	ac 01       	movw	r20, r24
     e84:	bd 01       	movw	r22, r26
     e86:	cf 01       	movw	r24, r30
     e88:	08 95       	ret

00000e8a <__muluhisi3>:
     e8a:	09 d0       	rcall	.+18     	; 0xe9e <__umulhisi3>
     e8c:	a5 9f       	mul	r26, r21
     e8e:	90 0d       	add	r25, r0
     e90:	b4 9f       	mul	r27, r20
     e92:	90 0d       	add	r25, r0
     e94:	a4 9f       	mul	r26, r20
     e96:	80 0d       	add	r24, r0
     e98:	91 1d       	adc	r25, r1
     e9a:	11 24       	eor	r1, r1
     e9c:	08 95       	ret

00000e9e <__umulhisi3>:
     e9e:	a2 9f       	mul	r26, r18
     ea0:	b0 01       	movw	r22, r0
     ea2:	b3 9f       	mul	r27, r19
     ea4:	c0 01       	movw	r24, r0
     ea6:	a3 9f       	mul	r26, r19
     ea8:	70 0d       	add	r23, r0
     eaa:	81 1d       	adc	r24, r1
     eac:	11 24       	eor	r1, r1
     eae:	91 1d       	adc	r25, r1
     eb0:	b2 9f       	mul	r27, r18
     eb2:	70 0d       	add	r23, r0
     eb4:	81 1d       	adc	r24, r1
     eb6:	11 24       	eor	r1, r1
     eb8:	91 1d       	adc	r25, r1
     eba:	08 95       	ret

00000ebc <atol>:
     ebc:	1f 93       	push	r17
     ebe:	fc 01       	movw	r30, r24
     ec0:	99 27       	eor	r25, r25
     ec2:	88 27       	eor	r24, r24
     ec4:	bc 01       	movw	r22, r24
     ec6:	e8 94       	clt
     ec8:	11 91       	ld	r17, Z+
     eca:	10 32       	cpi	r17, 0x20	; 32
     ecc:	e9 f3       	breq	.-6      	; 0xec8 <atol+0xc>
     ece:	19 30       	cpi	r17, 0x09	; 9
     ed0:	10 f0       	brcs	.+4      	; 0xed6 <atol+0x1a>
     ed2:	1e 30       	cpi	r17, 0x0E	; 14
     ed4:	c8 f3       	brcs	.-14     	; 0xec8 <atol+0xc>
     ed6:	1b 32       	cpi	r17, 0x2B	; 43
     ed8:	49 f0       	breq	.+18     	; 0xeec <atol+0x30>
     eda:	1d 32       	cpi	r17, 0x2D	; 45
     edc:	41 f4       	brne	.+16     	; 0xeee <atol+0x32>
     ede:	68 94       	set
     ee0:	05 c0       	rjmp	.+10     	; 0xeec <atol+0x30>
     ee2:	1b d0       	rcall	.+54     	; 0xf1a <__mulsi_const_10>
     ee4:	61 0f       	add	r22, r17
     ee6:	71 1d       	adc	r23, r1
     ee8:	81 1d       	adc	r24, r1
     eea:	91 1d       	adc	r25, r1
     eec:	11 91       	ld	r17, Z+
     eee:	10 53       	subi	r17, 0x30	; 48
     ef0:	1a 30       	cpi	r17, 0x0A	; 10
     ef2:	b8 f3       	brcs	.-18     	; 0xee2 <atol+0x26>
     ef4:	3e f4       	brtc	.+14     	; 0xf04 <atol+0x48>
     ef6:	90 95       	com	r25
     ef8:	80 95       	com	r24
     efa:	70 95       	com	r23
     efc:	61 95       	neg	r22
     efe:	7f 4f       	sbci	r23, 0xFF	; 255
     f00:	8f 4f       	sbci	r24, 0xFF	; 255
     f02:	9f 4f       	sbci	r25, 0xFF	; 255
     f04:	1f 91       	pop	r17
     f06:	08 95       	ret

00000f08 <strcmp>:
     f08:	fb 01       	movw	r30, r22
     f0a:	dc 01       	movw	r26, r24
     f0c:	8d 91       	ld	r24, X+
     f0e:	01 90       	ld	r0, Z+
     f10:	80 19       	sub	r24, r0
     f12:	01 10       	cpse	r0, r1
     f14:	d9 f3       	breq	.-10     	; 0xf0c <strcmp+0x4>
     f16:	99 0b       	sbc	r25, r25
     f18:	08 95       	ret

00000f1a <__mulsi_const_10>:
     f1a:	59 2f       	mov	r21, r25
     f1c:	48 2f       	mov	r20, r24
     f1e:	37 2f       	mov	r19, r23
     f20:	26 2f       	mov	r18, r22
     f22:	66 0f       	add	r22, r22
     f24:	77 1f       	adc	r23, r23
     f26:	88 1f       	adc	r24, r24
     f28:	99 1f       	adc	r25, r25
     f2a:	66 0f       	add	r22, r22
     f2c:	77 1f       	adc	r23, r23
     f2e:	88 1f       	adc	r24, r24
     f30:	99 1f       	adc	r25, r25
     f32:	62 0f       	add	r22, r18
     f34:	73 1f       	adc	r23, r19
     f36:	84 1f       	adc	r24, r20
     f38:	95 1f       	adc	r25, r21
     f3a:	66 0f       	add	r22, r22
     f3c:	77 1f       	adc	r23, r23
     f3e:	88 1f       	adc	r24, r24
     f40:	99 1f       	adc	r25, r25
     f42:	08 95       	ret

00000f44 <printf>:
     f44:	cf 93       	push	r28
     f46:	df 93       	push	r29
     f48:	cd b7       	in	r28, 0x3d	; 61
     f4a:	de b7       	in	r29, 0x3e	; 62
     f4c:	fe 01       	movw	r30, r28
     f4e:	35 96       	adiw	r30, 0x05	; 5
     f50:	61 91       	ld	r22, Z+
     f52:	71 91       	ld	r23, Z+
     f54:	af 01       	movw	r20, r30
     f56:	80 91 12 04 	lds	r24, 0x0412
     f5a:	90 91 13 04 	lds	r25, 0x0413
     f5e:	63 d0       	rcall	.+198    	; 0x1026 <vfprintf>
     f60:	df 91       	pop	r29
     f62:	cf 91       	pop	r28
     f64:	08 95       	ret

00000f66 <putchar>:
     f66:	60 91 12 04 	lds	r22, 0x0412
     f6a:	70 91 13 04 	lds	r23, 0x0413
     f6e:	5f c2       	rjmp	.+1214   	; 0x142e <fputc>

00000f70 <puts>:
     f70:	0f 93       	push	r16
     f72:	1f 93       	push	r17
     f74:	cf 93       	push	r28
     f76:	df 93       	push	r29
     f78:	e0 91 12 04 	lds	r30, 0x0412
     f7c:	f0 91 13 04 	lds	r31, 0x0413
     f80:	23 81       	ldd	r18, Z+3	; 0x03
     f82:	21 ff       	sbrs	r18, 1
     f84:	1b c0       	rjmp	.+54     	; 0xfbc <puts+0x4c>
     f86:	ec 01       	movw	r28, r24
     f88:	00 e0       	ldi	r16, 0x00	; 0
     f8a:	10 e0       	ldi	r17, 0x00	; 0
     f8c:	89 91       	ld	r24, Y+
     f8e:	60 91 12 04 	lds	r22, 0x0412
     f92:	70 91 13 04 	lds	r23, 0x0413
     f96:	db 01       	movw	r26, r22
     f98:	18 96       	adiw	r26, 0x08	; 8
     f9a:	ed 91       	ld	r30, X+
     f9c:	fc 91       	ld	r31, X
     f9e:	19 97       	sbiw	r26, 0x09	; 9
     fa0:	88 23       	and	r24, r24
     fa2:	31 f0       	breq	.+12     	; 0xfb0 <puts+0x40>
     fa4:	09 95       	icall
     fa6:	89 2b       	or	r24, r25
     fa8:	89 f3       	breq	.-30     	; 0xf8c <puts+0x1c>
     faa:	0f ef       	ldi	r16, 0xFF	; 255
     fac:	1f ef       	ldi	r17, 0xFF	; 255
     fae:	ee cf       	rjmp	.-36     	; 0xf8c <puts+0x1c>
     fb0:	8a e0       	ldi	r24, 0x0A	; 10
     fb2:	09 95       	icall
     fb4:	89 2b       	or	r24, r25
     fb6:	11 f4       	brne	.+4      	; 0xfbc <puts+0x4c>
     fb8:	c8 01       	movw	r24, r16
     fba:	02 c0       	rjmp	.+4      	; 0xfc0 <puts+0x50>
     fbc:	8f ef       	ldi	r24, 0xFF	; 255
     fbe:	9f ef       	ldi	r25, 0xFF	; 255
     fc0:	df 91       	pop	r29
     fc2:	cf 91       	pop	r28
     fc4:	1f 91       	pop	r17
     fc6:	0f 91       	pop	r16
     fc8:	08 95       	ret

00000fca <sprintf>:
     fca:	0f 93       	push	r16
     fcc:	1f 93       	push	r17
     fce:	cf 93       	push	r28
     fd0:	df 93       	push	r29
     fd2:	cd b7       	in	r28, 0x3d	; 61
     fd4:	de b7       	in	r29, 0x3e	; 62
     fd6:	2e 97       	sbiw	r28, 0x0e	; 14
     fd8:	0f b6       	in	r0, 0x3f	; 63
     fda:	f8 94       	cli
     fdc:	de bf       	out	0x3e, r29	; 62
     fde:	0f be       	out	0x3f, r0	; 63
     fe0:	cd bf       	out	0x3d, r28	; 61
     fe2:	0d 89       	ldd	r16, Y+21	; 0x15
     fe4:	1e 89       	ldd	r17, Y+22	; 0x16
     fe6:	86 e0       	ldi	r24, 0x06	; 6
     fe8:	8c 83       	std	Y+4, r24	; 0x04
     fea:	1a 83       	std	Y+2, r17	; 0x02
     fec:	09 83       	std	Y+1, r16	; 0x01
     fee:	8f ef       	ldi	r24, 0xFF	; 255
     ff0:	9f e7       	ldi	r25, 0x7F	; 127
     ff2:	9e 83       	std	Y+6, r25	; 0x06
     ff4:	8d 83       	std	Y+5, r24	; 0x05
     ff6:	ae 01       	movw	r20, r28
     ff8:	47 5e       	subi	r20, 0xE7	; 231
     ffa:	5f 4f       	sbci	r21, 0xFF	; 255
     ffc:	6f 89       	ldd	r22, Y+23	; 0x17
     ffe:	78 8d       	ldd	r23, Y+24	; 0x18
    1000:	ce 01       	movw	r24, r28
    1002:	01 96       	adiw	r24, 0x01	; 1
    1004:	10 d0       	rcall	.+32     	; 0x1026 <vfprintf>
    1006:	ef 81       	ldd	r30, Y+7	; 0x07
    1008:	f8 85       	ldd	r31, Y+8	; 0x08
    100a:	e0 0f       	add	r30, r16
    100c:	f1 1f       	adc	r31, r17
    100e:	10 82       	st	Z, r1
    1010:	2e 96       	adiw	r28, 0x0e	; 14
    1012:	0f b6       	in	r0, 0x3f	; 63
    1014:	f8 94       	cli
    1016:	de bf       	out	0x3e, r29	; 62
    1018:	0f be       	out	0x3f, r0	; 63
    101a:	cd bf       	out	0x3d, r28	; 61
    101c:	df 91       	pop	r29
    101e:	cf 91       	pop	r28
    1020:	1f 91       	pop	r17
    1022:	0f 91       	pop	r16
    1024:	08 95       	ret

00001026 <vfprintf>:
    1026:	2f 92       	push	r2
    1028:	3f 92       	push	r3
    102a:	4f 92       	push	r4
    102c:	5f 92       	push	r5
    102e:	6f 92       	push	r6
    1030:	7f 92       	push	r7
    1032:	8f 92       	push	r8
    1034:	9f 92       	push	r9
    1036:	af 92       	push	r10
    1038:	bf 92       	push	r11
    103a:	cf 92       	push	r12
    103c:	df 92       	push	r13
    103e:	ef 92       	push	r14
    1040:	ff 92       	push	r15
    1042:	0f 93       	push	r16
    1044:	1f 93       	push	r17
    1046:	cf 93       	push	r28
    1048:	df 93       	push	r29
    104a:	cd b7       	in	r28, 0x3d	; 61
    104c:	de b7       	in	r29, 0x3e	; 62
    104e:	2c 97       	sbiw	r28, 0x0c	; 12
    1050:	0f b6       	in	r0, 0x3f	; 63
    1052:	f8 94       	cli
    1054:	de bf       	out	0x3e, r29	; 62
    1056:	0f be       	out	0x3f, r0	; 63
    1058:	cd bf       	out	0x3d, r28	; 61
    105a:	7c 01       	movw	r14, r24
    105c:	6b 01       	movw	r12, r22
    105e:	8a 01       	movw	r16, r20
    1060:	fc 01       	movw	r30, r24
    1062:	17 82       	std	Z+7, r1	; 0x07
    1064:	16 82       	std	Z+6, r1	; 0x06
    1066:	83 81       	ldd	r24, Z+3	; 0x03
    1068:	81 ff       	sbrs	r24, 1
    106a:	b0 c1       	rjmp	.+864    	; 0x13cc <vfprintf+0x3a6>
    106c:	ce 01       	movw	r24, r28
    106e:	01 96       	adiw	r24, 0x01	; 1
    1070:	4c 01       	movw	r8, r24
    1072:	f7 01       	movw	r30, r14
    1074:	93 81       	ldd	r25, Z+3	; 0x03
    1076:	f6 01       	movw	r30, r12
    1078:	93 fd       	sbrc	r25, 3
    107a:	85 91       	lpm	r24, Z+
    107c:	93 ff       	sbrs	r25, 3
    107e:	81 91       	ld	r24, Z+
    1080:	6f 01       	movw	r12, r30
    1082:	88 23       	and	r24, r24
    1084:	09 f4       	brne	.+2      	; 0x1088 <vfprintf+0x62>
    1086:	9e c1       	rjmp	.+828    	; 0x13c4 <vfprintf+0x39e>
    1088:	85 32       	cpi	r24, 0x25	; 37
    108a:	39 f4       	brne	.+14     	; 0x109a <vfprintf+0x74>
    108c:	93 fd       	sbrc	r25, 3
    108e:	85 91       	lpm	r24, Z+
    1090:	93 ff       	sbrs	r25, 3
    1092:	81 91       	ld	r24, Z+
    1094:	6f 01       	movw	r12, r30
    1096:	85 32       	cpi	r24, 0x25	; 37
    1098:	21 f4       	brne	.+8      	; 0x10a2 <vfprintf+0x7c>
    109a:	b7 01       	movw	r22, r14
    109c:	90 e0       	ldi	r25, 0x00	; 0
    109e:	c7 d1       	rcall	.+910    	; 0x142e <fputc>
    10a0:	e8 cf       	rjmp	.-48     	; 0x1072 <vfprintf+0x4c>
    10a2:	51 2c       	mov	r5, r1
    10a4:	31 2c       	mov	r3, r1
    10a6:	20 e0       	ldi	r18, 0x00	; 0
    10a8:	20 32       	cpi	r18, 0x20	; 32
    10aa:	a0 f4       	brcc	.+40     	; 0x10d4 <vfprintf+0xae>
    10ac:	8b 32       	cpi	r24, 0x2B	; 43
    10ae:	69 f0       	breq	.+26     	; 0x10ca <vfprintf+0xa4>
    10b0:	30 f4       	brcc	.+12     	; 0x10be <vfprintf+0x98>
    10b2:	80 32       	cpi	r24, 0x20	; 32
    10b4:	59 f0       	breq	.+22     	; 0x10cc <vfprintf+0xa6>
    10b6:	83 32       	cpi	r24, 0x23	; 35
    10b8:	69 f4       	brne	.+26     	; 0x10d4 <vfprintf+0xae>
    10ba:	20 61       	ori	r18, 0x10	; 16
    10bc:	2c c0       	rjmp	.+88     	; 0x1116 <vfprintf+0xf0>
    10be:	8d 32       	cpi	r24, 0x2D	; 45
    10c0:	39 f0       	breq	.+14     	; 0x10d0 <vfprintf+0xaa>
    10c2:	80 33       	cpi	r24, 0x30	; 48
    10c4:	39 f4       	brne	.+14     	; 0x10d4 <vfprintf+0xae>
    10c6:	21 60       	ori	r18, 0x01	; 1
    10c8:	26 c0       	rjmp	.+76     	; 0x1116 <vfprintf+0xf0>
    10ca:	22 60       	ori	r18, 0x02	; 2
    10cc:	24 60       	ori	r18, 0x04	; 4
    10ce:	23 c0       	rjmp	.+70     	; 0x1116 <vfprintf+0xf0>
    10d0:	28 60       	ori	r18, 0x08	; 8
    10d2:	21 c0       	rjmp	.+66     	; 0x1116 <vfprintf+0xf0>
    10d4:	27 fd       	sbrc	r18, 7
    10d6:	27 c0       	rjmp	.+78     	; 0x1126 <vfprintf+0x100>
    10d8:	30 ed       	ldi	r19, 0xD0	; 208
    10da:	38 0f       	add	r19, r24
    10dc:	3a 30       	cpi	r19, 0x0A	; 10
    10de:	78 f4       	brcc	.+30     	; 0x10fe <vfprintf+0xd8>
    10e0:	26 ff       	sbrs	r18, 6
    10e2:	06 c0       	rjmp	.+12     	; 0x10f0 <vfprintf+0xca>
    10e4:	fa e0       	ldi	r31, 0x0A	; 10
    10e6:	5f 9e       	mul	r5, r31
    10e8:	30 0d       	add	r19, r0
    10ea:	11 24       	eor	r1, r1
    10ec:	53 2e       	mov	r5, r19
    10ee:	13 c0       	rjmp	.+38     	; 0x1116 <vfprintf+0xf0>
    10f0:	8a e0       	ldi	r24, 0x0A	; 10
    10f2:	38 9e       	mul	r3, r24
    10f4:	30 0d       	add	r19, r0
    10f6:	11 24       	eor	r1, r1
    10f8:	33 2e       	mov	r3, r19
    10fa:	20 62       	ori	r18, 0x20	; 32
    10fc:	0c c0       	rjmp	.+24     	; 0x1116 <vfprintf+0xf0>
    10fe:	8e 32       	cpi	r24, 0x2E	; 46
    1100:	21 f4       	brne	.+8      	; 0x110a <vfprintf+0xe4>
    1102:	26 fd       	sbrc	r18, 6
    1104:	5f c1       	rjmp	.+702    	; 0x13c4 <vfprintf+0x39e>
    1106:	20 64       	ori	r18, 0x40	; 64
    1108:	06 c0       	rjmp	.+12     	; 0x1116 <vfprintf+0xf0>
    110a:	8c 36       	cpi	r24, 0x6C	; 108
    110c:	11 f4       	brne	.+4      	; 0x1112 <vfprintf+0xec>
    110e:	20 68       	ori	r18, 0x80	; 128
    1110:	02 c0       	rjmp	.+4      	; 0x1116 <vfprintf+0xf0>
    1112:	88 36       	cpi	r24, 0x68	; 104
    1114:	41 f4       	brne	.+16     	; 0x1126 <vfprintf+0x100>
    1116:	f6 01       	movw	r30, r12
    1118:	93 fd       	sbrc	r25, 3
    111a:	85 91       	lpm	r24, Z+
    111c:	93 ff       	sbrs	r25, 3
    111e:	81 91       	ld	r24, Z+
    1120:	6f 01       	movw	r12, r30
    1122:	81 11       	cpse	r24, r1
    1124:	c1 cf       	rjmp	.-126    	; 0x10a8 <vfprintf+0x82>
    1126:	98 2f       	mov	r25, r24
    1128:	9f 7d       	andi	r25, 0xDF	; 223
    112a:	95 54       	subi	r25, 0x45	; 69
    112c:	93 30       	cpi	r25, 0x03	; 3
    112e:	28 f4       	brcc	.+10     	; 0x113a <vfprintf+0x114>
    1130:	0c 5f       	subi	r16, 0xFC	; 252
    1132:	1f 4f       	sbci	r17, 0xFF	; 255
    1134:	ff e3       	ldi	r31, 0x3F	; 63
    1136:	f9 83       	std	Y+1, r31	; 0x01
    1138:	0d c0       	rjmp	.+26     	; 0x1154 <vfprintf+0x12e>
    113a:	83 36       	cpi	r24, 0x63	; 99
    113c:	31 f0       	breq	.+12     	; 0x114a <vfprintf+0x124>
    113e:	83 37       	cpi	r24, 0x73	; 115
    1140:	71 f0       	breq	.+28     	; 0x115e <vfprintf+0x138>
    1142:	83 35       	cpi	r24, 0x53	; 83
    1144:	09 f0       	breq	.+2      	; 0x1148 <vfprintf+0x122>
    1146:	57 c0       	rjmp	.+174    	; 0x11f6 <vfprintf+0x1d0>
    1148:	21 c0       	rjmp	.+66     	; 0x118c <vfprintf+0x166>
    114a:	f8 01       	movw	r30, r16
    114c:	80 81       	ld	r24, Z
    114e:	89 83       	std	Y+1, r24	; 0x01
    1150:	0e 5f       	subi	r16, 0xFE	; 254
    1152:	1f 4f       	sbci	r17, 0xFF	; 255
    1154:	44 24       	eor	r4, r4
    1156:	43 94       	inc	r4
    1158:	51 2c       	mov	r5, r1
    115a:	54 01       	movw	r10, r8
    115c:	14 c0       	rjmp	.+40     	; 0x1186 <vfprintf+0x160>
    115e:	38 01       	movw	r6, r16
    1160:	f2 e0       	ldi	r31, 0x02	; 2
    1162:	6f 0e       	add	r6, r31
    1164:	71 1c       	adc	r7, r1
    1166:	f8 01       	movw	r30, r16
    1168:	a0 80       	ld	r10, Z
    116a:	b1 80       	ldd	r11, Z+1	; 0x01
    116c:	26 ff       	sbrs	r18, 6
    116e:	03 c0       	rjmp	.+6      	; 0x1176 <vfprintf+0x150>
    1170:	65 2d       	mov	r22, r5
    1172:	70 e0       	ldi	r23, 0x00	; 0
    1174:	02 c0       	rjmp	.+4      	; 0x117a <vfprintf+0x154>
    1176:	6f ef       	ldi	r22, 0xFF	; 255
    1178:	7f ef       	ldi	r23, 0xFF	; 255
    117a:	c5 01       	movw	r24, r10
    117c:	2c 87       	std	Y+12, r18	; 0x0c
    117e:	4c d1       	rcall	.+664    	; 0x1418 <strnlen>
    1180:	2c 01       	movw	r4, r24
    1182:	83 01       	movw	r16, r6
    1184:	2c 85       	ldd	r18, Y+12	; 0x0c
    1186:	2f 77       	andi	r18, 0x7F	; 127
    1188:	22 2e       	mov	r2, r18
    118a:	16 c0       	rjmp	.+44     	; 0x11b8 <vfprintf+0x192>
    118c:	38 01       	movw	r6, r16
    118e:	f2 e0       	ldi	r31, 0x02	; 2
    1190:	6f 0e       	add	r6, r31
    1192:	71 1c       	adc	r7, r1
    1194:	f8 01       	movw	r30, r16
    1196:	a0 80       	ld	r10, Z
    1198:	b1 80       	ldd	r11, Z+1	; 0x01
    119a:	26 ff       	sbrs	r18, 6
    119c:	03 c0       	rjmp	.+6      	; 0x11a4 <vfprintf+0x17e>
    119e:	65 2d       	mov	r22, r5
    11a0:	70 e0       	ldi	r23, 0x00	; 0
    11a2:	02 c0       	rjmp	.+4      	; 0x11a8 <vfprintf+0x182>
    11a4:	6f ef       	ldi	r22, 0xFF	; 255
    11a6:	7f ef       	ldi	r23, 0xFF	; 255
    11a8:	c5 01       	movw	r24, r10
    11aa:	2c 87       	std	Y+12, r18	; 0x0c
    11ac:	2a d1       	rcall	.+596    	; 0x1402 <strnlen_P>
    11ae:	2c 01       	movw	r4, r24
    11b0:	2c 85       	ldd	r18, Y+12	; 0x0c
    11b2:	20 68       	ori	r18, 0x80	; 128
    11b4:	22 2e       	mov	r2, r18
    11b6:	83 01       	movw	r16, r6
    11b8:	23 fc       	sbrc	r2, 3
    11ba:	19 c0       	rjmp	.+50     	; 0x11ee <vfprintf+0x1c8>
    11bc:	83 2d       	mov	r24, r3
    11be:	90 e0       	ldi	r25, 0x00	; 0
    11c0:	48 16       	cp	r4, r24
    11c2:	59 06       	cpc	r5, r25
    11c4:	a0 f4       	brcc	.+40     	; 0x11ee <vfprintf+0x1c8>
    11c6:	b7 01       	movw	r22, r14
    11c8:	80 e2       	ldi	r24, 0x20	; 32
    11ca:	90 e0       	ldi	r25, 0x00	; 0
    11cc:	30 d1       	rcall	.+608    	; 0x142e <fputc>
    11ce:	3a 94       	dec	r3
    11d0:	f5 cf       	rjmp	.-22     	; 0x11bc <vfprintf+0x196>
    11d2:	f5 01       	movw	r30, r10
    11d4:	27 fc       	sbrc	r2, 7
    11d6:	85 91       	lpm	r24, Z+
    11d8:	27 fe       	sbrs	r2, 7
    11da:	81 91       	ld	r24, Z+
    11dc:	5f 01       	movw	r10, r30
    11de:	b7 01       	movw	r22, r14
    11e0:	90 e0       	ldi	r25, 0x00	; 0
    11e2:	25 d1       	rcall	.+586    	; 0x142e <fputc>
    11e4:	31 10       	cpse	r3, r1
    11e6:	3a 94       	dec	r3
    11e8:	f1 e0       	ldi	r31, 0x01	; 1
    11ea:	4f 1a       	sub	r4, r31
    11ec:	51 08       	sbc	r5, r1
    11ee:	41 14       	cp	r4, r1
    11f0:	51 04       	cpc	r5, r1
    11f2:	79 f7       	brne	.-34     	; 0x11d2 <vfprintf+0x1ac>
    11f4:	de c0       	rjmp	.+444    	; 0x13b2 <vfprintf+0x38c>
    11f6:	84 36       	cpi	r24, 0x64	; 100
    11f8:	11 f0       	breq	.+4      	; 0x11fe <vfprintf+0x1d8>
    11fa:	89 36       	cpi	r24, 0x69	; 105
    11fc:	31 f5       	brne	.+76     	; 0x124a <vfprintf+0x224>
    11fe:	f8 01       	movw	r30, r16
    1200:	27 ff       	sbrs	r18, 7
    1202:	07 c0       	rjmp	.+14     	; 0x1212 <vfprintf+0x1ec>
    1204:	60 81       	ld	r22, Z
    1206:	71 81       	ldd	r23, Z+1	; 0x01
    1208:	82 81       	ldd	r24, Z+2	; 0x02
    120a:	93 81       	ldd	r25, Z+3	; 0x03
    120c:	0c 5f       	subi	r16, 0xFC	; 252
    120e:	1f 4f       	sbci	r17, 0xFF	; 255
    1210:	08 c0       	rjmp	.+16     	; 0x1222 <vfprintf+0x1fc>
    1212:	60 81       	ld	r22, Z
    1214:	71 81       	ldd	r23, Z+1	; 0x01
    1216:	88 27       	eor	r24, r24
    1218:	77 fd       	sbrc	r23, 7
    121a:	80 95       	com	r24
    121c:	98 2f       	mov	r25, r24
    121e:	0e 5f       	subi	r16, 0xFE	; 254
    1220:	1f 4f       	sbci	r17, 0xFF	; 255
    1222:	2f 76       	andi	r18, 0x6F	; 111
    1224:	b2 2e       	mov	r11, r18
    1226:	97 ff       	sbrs	r25, 7
    1228:	09 c0       	rjmp	.+18     	; 0x123c <vfprintf+0x216>
    122a:	90 95       	com	r25
    122c:	80 95       	com	r24
    122e:	70 95       	com	r23
    1230:	61 95       	neg	r22
    1232:	7f 4f       	sbci	r23, 0xFF	; 255
    1234:	8f 4f       	sbci	r24, 0xFF	; 255
    1236:	9f 4f       	sbci	r25, 0xFF	; 255
    1238:	20 68       	ori	r18, 0x80	; 128
    123a:	b2 2e       	mov	r11, r18
    123c:	2a e0       	ldi	r18, 0x0A	; 10
    123e:	30 e0       	ldi	r19, 0x00	; 0
    1240:	a4 01       	movw	r20, r8
    1242:	27 d1       	rcall	.+590    	; 0x1492 <__ultoa_invert>
    1244:	a8 2e       	mov	r10, r24
    1246:	a8 18       	sub	r10, r8
    1248:	43 c0       	rjmp	.+134    	; 0x12d0 <vfprintf+0x2aa>
    124a:	85 37       	cpi	r24, 0x75	; 117
    124c:	29 f4       	brne	.+10     	; 0x1258 <vfprintf+0x232>
    124e:	2f 7e       	andi	r18, 0xEF	; 239
    1250:	b2 2e       	mov	r11, r18
    1252:	2a e0       	ldi	r18, 0x0A	; 10
    1254:	30 e0       	ldi	r19, 0x00	; 0
    1256:	25 c0       	rjmp	.+74     	; 0x12a2 <vfprintf+0x27c>
    1258:	f2 2f       	mov	r31, r18
    125a:	f9 7f       	andi	r31, 0xF9	; 249
    125c:	bf 2e       	mov	r11, r31
    125e:	8f 36       	cpi	r24, 0x6F	; 111
    1260:	c1 f0       	breq	.+48     	; 0x1292 <vfprintf+0x26c>
    1262:	18 f4       	brcc	.+6      	; 0x126a <vfprintf+0x244>
    1264:	88 35       	cpi	r24, 0x58	; 88
    1266:	79 f0       	breq	.+30     	; 0x1286 <vfprintf+0x260>
    1268:	ad c0       	rjmp	.+346    	; 0x13c4 <vfprintf+0x39e>
    126a:	80 37       	cpi	r24, 0x70	; 112
    126c:	19 f0       	breq	.+6      	; 0x1274 <vfprintf+0x24e>
    126e:	88 37       	cpi	r24, 0x78	; 120
    1270:	21 f0       	breq	.+8      	; 0x127a <vfprintf+0x254>
    1272:	a8 c0       	rjmp	.+336    	; 0x13c4 <vfprintf+0x39e>
    1274:	2f 2f       	mov	r18, r31
    1276:	20 61       	ori	r18, 0x10	; 16
    1278:	b2 2e       	mov	r11, r18
    127a:	b4 fe       	sbrs	r11, 4
    127c:	0d c0       	rjmp	.+26     	; 0x1298 <vfprintf+0x272>
    127e:	8b 2d       	mov	r24, r11
    1280:	84 60       	ori	r24, 0x04	; 4
    1282:	b8 2e       	mov	r11, r24
    1284:	09 c0       	rjmp	.+18     	; 0x1298 <vfprintf+0x272>
    1286:	24 ff       	sbrs	r18, 4
    1288:	0a c0       	rjmp	.+20     	; 0x129e <vfprintf+0x278>
    128a:	9f 2f       	mov	r25, r31
    128c:	96 60       	ori	r25, 0x06	; 6
    128e:	b9 2e       	mov	r11, r25
    1290:	06 c0       	rjmp	.+12     	; 0x129e <vfprintf+0x278>
    1292:	28 e0       	ldi	r18, 0x08	; 8
    1294:	30 e0       	ldi	r19, 0x00	; 0
    1296:	05 c0       	rjmp	.+10     	; 0x12a2 <vfprintf+0x27c>
    1298:	20 e1       	ldi	r18, 0x10	; 16
    129a:	30 e0       	ldi	r19, 0x00	; 0
    129c:	02 c0       	rjmp	.+4      	; 0x12a2 <vfprintf+0x27c>
    129e:	20 e1       	ldi	r18, 0x10	; 16
    12a0:	32 e0       	ldi	r19, 0x02	; 2
    12a2:	f8 01       	movw	r30, r16
    12a4:	b7 fe       	sbrs	r11, 7
    12a6:	07 c0       	rjmp	.+14     	; 0x12b6 <vfprintf+0x290>
    12a8:	60 81       	ld	r22, Z
    12aa:	71 81       	ldd	r23, Z+1	; 0x01
    12ac:	82 81       	ldd	r24, Z+2	; 0x02
    12ae:	93 81       	ldd	r25, Z+3	; 0x03
    12b0:	0c 5f       	subi	r16, 0xFC	; 252
    12b2:	1f 4f       	sbci	r17, 0xFF	; 255
    12b4:	06 c0       	rjmp	.+12     	; 0x12c2 <vfprintf+0x29c>
    12b6:	60 81       	ld	r22, Z
    12b8:	71 81       	ldd	r23, Z+1	; 0x01
    12ba:	80 e0       	ldi	r24, 0x00	; 0
    12bc:	90 e0       	ldi	r25, 0x00	; 0
    12be:	0e 5f       	subi	r16, 0xFE	; 254
    12c0:	1f 4f       	sbci	r17, 0xFF	; 255
    12c2:	a4 01       	movw	r20, r8
    12c4:	e6 d0       	rcall	.+460    	; 0x1492 <__ultoa_invert>
    12c6:	a8 2e       	mov	r10, r24
    12c8:	a8 18       	sub	r10, r8
    12ca:	fb 2d       	mov	r31, r11
    12cc:	ff 77       	andi	r31, 0x7F	; 127
    12ce:	bf 2e       	mov	r11, r31
    12d0:	b6 fe       	sbrs	r11, 6
    12d2:	0b c0       	rjmp	.+22     	; 0x12ea <vfprintf+0x2c4>
    12d4:	2b 2d       	mov	r18, r11
    12d6:	2e 7f       	andi	r18, 0xFE	; 254
    12d8:	a5 14       	cp	r10, r5
    12da:	50 f4       	brcc	.+20     	; 0x12f0 <vfprintf+0x2ca>
    12dc:	b4 fe       	sbrs	r11, 4
    12de:	0a c0       	rjmp	.+20     	; 0x12f4 <vfprintf+0x2ce>
    12e0:	b2 fc       	sbrc	r11, 2
    12e2:	08 c0       	rjmp	.+16     	; 0x12f4 <vfprintf+0x2ce>
    12e4:	2b 2d       	mov	r18, r11
    12e6:	2e 7e       	andi	r18, 0xEE	; 238
    12e8:	05 c0       	rjmp	.+10     	; 0x12f4 <vfprintf+0x2ce>
    12ea:	7a 2c       	mov	r7, r10
    12ec:	2b 2d       	mov	r18, r11
    12ee:	03 c0       	rjmp	.+6      	; 0x12f6 <vfprintf+0x2d0>
    12f0:	7a 2c       	mov	r7, r10
    12f2:	01 c0       	rjmp	.+2      	; 0x12f6 <vfprintf+0x2d0>
    12f4:	75 2c       	mov	r7, r5
    12f6:	24 ff       	sbrs	r18, 4
    12f8:	0d c0       	rjmp	.+26     	; 0x1314 <vfprintf+0x2ee>
    12fa:	fe 01       	movw	r30, r28
    12fc:	ea 0d       	add	r30, r10
    12fe:	f1 1d       	adc	r31, r1
    1300:	80 81       	ld	r24, Z
    1302:	80 33       	cpi	r24, 0x30	; 48
    1304:	11 f4       	brne	.+4      	; 0x130a <vfprintf+0x2e4>
    1306:	29 7e       	andi	r18, 0xE9	; 233
    1308:	09 c0       	rjmp	.+18     	; 0x131c <vfprintf+0x2f6>
    130a:	22 ff       	sbrs	r18, 2
    130c:	06 c0       	rjmp	.+12     	; 0x131a <vfprintf+0x2f4>
    130e:	73 94       	inc	r7
    1310:	73 94       	inc	r7
    1312:	04 c0       	rjmp	.+8      	; 0x131c <vfprintf+0x2f6>
    1314:	82 2f       	mov	r24, r18
    1316:	86 78       	andi	r24, 0x86	; 134
    1318:	09 f0       	breq	.+2      	; 0x131c <vfprintf+0x2f6>
    131a:	73 94       	inc	r7
    131c:	23 fd       	sbrc	r18, 3
    131e:	12 c0       	rjmp	.+36     	; 0x1344 <vfprintf+0x31e>
    1320:	20 ff       	sbrs	r18, 0
    1322:	06 c0       	rjmp	.+12     	; 0x1330 <vfprintf+0x30a>
    1324:	5a 2c       	mov	r5, r10
    1326:	73 14       	cp	r7, r3
    1328:	18 f4       	brcc	.+6      	; 0x1330 <vfprintf+0x30a>
    132a:	53 0c       	add	r5, r3
    132c:	57 18       	sub	r5, r7
    132e:	73 2c       	mov	r7, r3
    1330:	73 14       	cp	r7, r3
    1332:	60 f4       	brcc	.+24     	; 0x134c <vfprintf+0x326>
    1334:	b7 01       	movw	r22, r14
    1336:	80 e2       	ldi	r24, 0x20	; 32
    1338:	90 e0       	ldi	r25, 0x00	; 0
    133a:	2c 87       	std	Y+12, r18	; 0x0c
    133c:	78 d0       	rcall	.+240    	; 0x142e <fputc>
    133e:	73 94       	inc	r7
    1340:	2c 85       	ldd	r18, Y+12	; 0x0c
    1342:	f6 cf       	rjmp	.-20     	; 0x1330 <vfprintf+0x30a>
    1344:	73 14       	cp	r7, r3
    1346:	10 f4       	brcc	.+4      	; 0x134c <vfprintf+0x326>
    1348:	37 18       	sub	r3, r7
    134a:	01 c0       	rjmp	.+2      	; 0x134e <vfprintf+0x328>
    134c:	31 2c       	mov	r3, r1
    134e:	24 ff       	sbrs	r18, 4
    1350:	11 c0       	rjmp	.+34     	; 0x1374 <vfprintf+0x34e>
    1352:	b7 01       	movw	r22, r14
    1354:	80 e3       	ldi	r24, 0x30	; 48
    1356:	90 e0       	ldi	r25, 0x00	; 0
    1358:	2c 87       	std	Y+12, r18	; 0x0c
    135a:	69 d0       	rcall	.+210    	; 0x142e <fputc>
    135c:	2c 85       	ldd	r18, Y+12	; 0x0c
    135e:	22 ff       	sbrs	r18, 2
    1360:	16 c0       	rjmp	.+44     	; 0x138e <vfprintf+0x368>
    1362:	21 ff       	sbrs	r18, 1
    1364:	03 c0       	rjmp	.+6      	; 0x136c <vfprintf+0x346>
    1366:	88 e5       	ldi	r24, 0x58	; 88
    1368:	90 e0       	ldi	r25, 0x00	; 0
    136a:	02 c0       	rjmp	.+4      	; 0x1370 <vfprintf+0x34a>
    136c:	88 e7       	ldi	r24, 0x78	; 120
    136e:	90 e0       	ldi	r25, 0x00	; 0
    1370:	b7 01       	movw	r22, r14
    1372:	0c c0       	rjmp	.+24     	; 0x138c <vfprintf+0x366>
    1374:	82 2f       	mov	r24, r18
    1376:	86 78       	andi	r24, 0x86	; 134
    1378:	51 f0       	breq	.+20     	; 0x138e <vfprintf+0x368>
    137a:	21 fd       	sbrc	r18, 1
    137c:	02 c0       	rjmp	.+4      	; 0x1382 <vfprintf+0x35c>
    137e:	80 e2       	ldi	r24, 0x20	; 32
    1380:	01 c0       	rjmp	.+2      	; 0x1384 <vfprintf+0x35e>
    1382:	8b e2       	ldi	r24, 0x2B	; 43
    1384:	27 fd       	sbrc	r18, 7
    1386:	8d e2       	ldi	r24, 0x2D	; 45
    1388:	b7 01       	movw	r22, r14
    138a:	90 e0       	ldi	r25, 0x00	; 0
    138c:	50 d0       	rcall	.+160    	; 0x142e <fputc>
    138e:	a5 14       	cp	r10, r5
    1390:	30 f4       	brcc	.+12     	; 0x139e <vfprintf+0x378>
    1392:	b7 01       	movw	r22, r14
    1394:	80 e3       	ldi	r24, 0x30	; 48
    1396:	90 e0       	ldi	r25, 0x00	; 0
    1398:	4a d0       	rcall	.+148    	; 0x142e <fputc>
    139a:	5a 94       	dec	r5
    139c:	f8 cf       	rjmp	.-16     	; 0x138e <vfprintf+0x368>
    139e:	aa 94       	dec	r10
    13a0:	f4 01       	movw	r30, r8
    13a2:	ea 0d       	add	r30, r10
    13a4:	f1 1d       	adc	r31, r1
    13a6:	80 81       	ld	r24, Z
    13a8:	b7 01       	movw	r22, r14
    13aa:	90 e0       	ldi	r25, 0x00	; 0
    13ac:	40 d0       	rcall	.+128    	; 0x142e <fputc>
    13ae:	a1 10       	cpse	r10, r1
    13b0:	f6 cf       	rjmp	.-20     	; 0x139e <vfprintf+0x378>
    13b2:	33 20       	and	r3, r3
    13b4:	09 f4       	brne	.+2      	; 0x13b8 <vfprintf+0x392>
    13b6:	5d ce       	rjmp	.-838    	; 0x1072 <vfprintf+0x4c>
    13b8:	b7 01       	movw	r22, r14
    13ba:	80 e2       	ldi	r24, 0x20	; 32
    13bc:	90 e0       	ldi	r25, 0x00	; 0
    13be:	37 d0       	rcall	.+110    	; 0x142e <fputc>
    13c0:	3a 94       	dec	r3
    13c2:	f7 cf       	rjmp	.-18     	; 0x13b2 <vfprintf+0x38c>
    13c4:	f7 01       	movw	r30, r14
    13c6:	86 81       	ldd	r24, Z+6	; 0x06
    13c8:	97 81       	ldd	r25, Z+7	; 0x07
    13ca:	02 c0       	rjmp	.+4      	; 0x13d0 <vfprintf+0x3aa>
    13cc:	8f ef       	ldi	r24, 0xFF	; 255
    13ce:	9f ef       	ldi	r25, 0xFF	; 255
    13d0:	2c 96       	adiw	r28, 0x0c	; 12
    13d2:	0f b6       	in	r0, 0x3f	; 63
    13d4:	f8 94       	cli
    13d6:	de bf       	out	0x3e, r29	; 62
    13d8:	0f be       	out	0x3f, r0	; 63
    13da:	cd bf       	out	0x3d, r28	; 61
    13dc:	df 91       	pop	r29
    13de:	cf 91       	pop	r28
    13e0:	1f 91       	pop	r17
    13e2:	0f 91       	pop	r16
    13e4:	ff 90       	pop	r15
    13e6:	ef 90       	pop	r14
    13e8:	df 90       	pop	r13
    13ea:	cf 90       	pop	r12
    13ec:	bf 90       	pop	r11
    13ee:	af 90       	pop	r10
    13f0:	9f 90       	pop	r9
    13f2:	8f 90       	pop	r8
    13f4:	7f 90       	pop	r7
    13f6:	6f 90       	pop	r6
    13f8:	5f 90       	pop	r5
    13fa:	4f 90       	pop	r4
    13fc:	3f 90       	pop	r3
    13fe:	2f 90       	pop	r2
    1400:	08 95       	ret

00001402 <strnlen_P>:
    1402:	fc 01       	movw	r30, r24
    1404:	05 90       	lpm	r0, Z+
    1406:	61 50       	subi	r22, 0x01	; 1
    1408:	70 40       	sbci	r23, 0x00	; 0
    140a:	01 10       	cpse	r0, r1
    140c:	d8 f7       	brcc	.-10     	; 0x1404 <strnlen_P+0x2>
    140e:	80 95       	com	r24
    1410:	90 95       	com	r25
    1412:	8e 0f       	add	r24, r30
    1414:	9f 1f       	adc	r25, r31
    1416:	08 95       	ret

00001418 <strnlen>:
    1418:	fc 01       	movw	r30, r24
    141a:	61 50       	subi	r22, 0x01	; 1
    141c:	70 40       	sbci	r23, 0x00	; 0
    141e:	01 90       	ld	r0, Z+
    1420:	01 10       	cpse	r0, r1
    1422:	d8 f7       	brcc	.-10     	; 0x141a <strnlen+0x2>
    1424:	80 95       	com	r24
    1426:	90 95       	com	r25
    1428:	8e 0f       	add	r24, r30
    142a:	9f 1f       	adc	r25, r31
    142c:	08 95       	ret

0000142e <fputc>:
    142e:	0f 93       	push	r16
    1430:	1f 93       	push	r17
    1432:	cf 93       	push	r28
    1434:	df 93       	push	r29
    1436:	18 2f       	mov	r17, r24
    1438:	09 2f       	mov	r16, r25
    143a:	eb 01       	movw	r28, r22
    143c:	8b 81       	ldd	r24, Y+3	; 0x03
    143e:	81 fd       	sbrc	r24, 1
    1440:	03 c0       	rjmp	.+6      	; 0x1448 <fputc+0x1a>
    1442:	8f ef       	ldi	r24, 0xFF	; 255
    1444:	9f ef       	ldi	r25, 0xFF	; 255
    1446:	20 c0       	rjmp	.+64     	; 0x1488 <fputc+0x5a>
    1448:	82 ff       	sbrs	r24, 2
    144a:	10 c0       	rjmp	.+32     	; 0x146c <fputc+0x3e>
    144c:	4e 81       	ldd	r20, Y+6	; 0x06
    144e:	5f 81       	ldd	r21, Y+7	; 0x07
    1450:	2c 81       	ldd	r18, Y+4	; 0x04
    1452:	3d 81       	ldd	r19, Y+5	; 0x05
    1454:	42 17       	cp	r20, r18
    1456:	53 07       	cpc	r21, r19
    1458:	7c f4       	brge	.+30     	; 0x1478 <fputc+0x4a>
    145a:	e8 81       	ld	r30, Y
    145c:	f9 81       	ldd	r31, Y+1	; 0x01
    145e:	9f 01       	movw	r18, r30
    1460:	2f 5f       	subi	r18, 0xFF	; 255
    1462:	3f 4f       	sbci	r19, 0xFF	; 255
    1464:	39 83       	std	Y+1, r19	; 0x01
    1466:	28 83       	st	Y, r18
    1468:	10 83       	st	Z, r17
    146a:	06 c0       	rjmp	.+12     	; 0x1478 <fputc+0x4a>
    146c:	e8 85       	ldd	r30, Y+8	; 0x08
    146e:	f9 85       	ldd	r31, Y+9	; 0x09
    1470:	81 2f       	mov	r24, r17
    1472:	09 95       	icall
    1474:	89 2b       	or	r24, r25
    1476:	29 f7       	brne	.-54     	; 0x1442 <fputc+0x14>
    1478:	2e 81       	ldd	r18, Y+6	; 0x06
    147a:	3f 81       	ldd	r19, Y+7	; 0x07
    147c:	2f 5f       	subi	r18, 0xFF	; 255
    147e:	3f 4f       	sbci	r19, 0xFF	; 255
    1480:	3f 83       	std	Y+7, r19	; 0x07
    1482:	2e 83       	std	Y+6, r18	; 0x06
    1484:	81 2f       	mov	r24, r17
    1486:	90 2f       	mov	r25, r16
    1488:	df 91       	pop	r29
    148a:	cf 91       	pop	r28
    148c:	1f 91       	pop	r17
    148e:	0f 91       	pop	r16
    1490:	08 95       	ret

00001492 <__ultoa_invert>:
    1492:	fa 01       	movw	r30, r20
    1494:	aa 27       	eor	r26, r26
    1496:	28 30       	cpi	r18, 0x08	; 8
    1498:	51 f1       	breq	.+84     	; 0x14ee <__ultoa_invert+0x5c>
    149a:	20 31       	cpi	r18, 0x10	; 16
    149c:	81 f1       	breq	.+96     	; 0x14fe <__ultoa_invert+0x6c>
    149e:	e8 94       	clt
    14a0:	6f 93       	push	r22
    14a2:	6e 7f       	andi	r22, 0xFE	; 254
    14a4:	6e 5f       	subi	r22, 0xFE	; 254
    14a6:	7f 4f       	sbci	r23, 0xFF	; 255
    14a8:	8f 4f       	sbci	r24, 0xFF	; 255
    14aa:	9f 4f       	sbci	r25, 0xFF	; 255
    14ac:	af 4f       	sbci	r26, 0xFF	; 255
    14ae:	b1 e0       	ldi	r27, 0x01	; 1
    14b0:	3e d0       	rcall	.+124    	; 0x152e <__ultoa_invert+0x9c>
    14b2:	b4 e0       	ldi	r27, 0x04	; 4
    14b4:	3c d0       	rcall	.+120    	; 0x152e <__ultoa_invert+0x9c>
    14b6:	67 0f       	add	r22, r23
    14b8:	78 1f       	adc	r23, r24
    14ba:	89 1f       	adc	r24, r25
    14bc:	9a 1f       	adc	r25, r26
    14be:	a1 1d       	adc	r26, r1
    14c0:	68 0f       	add	r22, r24
    14c2:	79 1f       	adc	r23, r25
    14c4:	8a 1f       	adc	r24, r26
    14c6:	91 1d       	adc	r25, r1
    14c8:	a1 1d       	adc	r26, r1
    14ca:	6a 0f       	add	r22, r26
    14cc:	71 1d       	adc	r23, r1
    14ce:	81 1d       	adc	r24, r1
    14d0:	91 1d       	adc	r25, r1
    14d2:	a1 1d       	adc	r26, r1
    14d4:	20 d0       	rcall	.+64     	; 0x1516 <__ultoa_invert+0x84>
    14d6:	09 f4       	brne	.+2      	; 0x14da <__ultoa_invert+0x48>
    14d8:	68 94       	set
    14da:	3f 91       	pop	r19
    14dc:	2a e0       	ldi	r18, 0x0A	; 10
    14de:	26 9f       	mul	r18, r22
    14e0:	11 24       	eor	r1, r1
    14e2:	30 19       	sub	r19, r0
    14e4:	30 5d       	subi	r19, 0xD0	; 208
    14e6:	31 93       	st	Z+, r19
    14e8:	de f6       	brtc	.-74     	; 0x14a0 <__ultoa_invert+0xe>
    14ea:	cf 01       	movw	r24, r30
    14ec:	08 95       	ret
    14ee:	46 2f       	mov	r20, r22
    14f0:	47 70       	andi	r20, 0x07	; 7
    14f2:	40 5d       	subi	r20, 0xD0	; 208
    14f4:	41 93       	st	Z+, r20
    14f6:	b3 e0       	ldi	r27, 0x03	; 3
    14f8:	0f d0       	rcall	.+30     	; 0x1518 <__ultoa_invert+0x86>
    14fa:	c9 f7       	brne	.-14     	; 0x14ee <__ultoa_invert+0x5c>
    14fc:	f6 cf       	rjmp	.-20     	; 0x14ea <__ultoa_invert+0x58>
    14fe:	46 2f       	mov	r20, r22
    1500:	4f 70       	andi	r20, 0x0F	; 15
    1502:	40 5d       	subi	r20, 0xD0	; 208
    1504:	4a 33       	cpi	r20, 0x3A	; 58
    1506:	18 f0       	brcs	.+6      	; 0x150e <__ultoa_invert+0x7c>
    1508:	49 5d       	subi	r20, 0xD9	; 217
    150a:	31 fd       	sbrc	r19, 1
    150c:	40 52       	subi	r20, 0x20	; 32
    150e:	41 93       	st	Z+, r20
    1510:	02 d0       	rcall	.+4      	; 0x1516 <__ultoa_invert+0x84>
    1512:	a9 f7       	brne	.-22     	; 0x14fe <__ultoa_invert+0x6c>
    1514:	ea cf       	rjmp	.-44     	; 0x14ea <__ultoa_invert+0x58>
    1516:	b4 e0       	ldi	r27, 0x04	; 4
    1518:	a6 95       	lsr	r26
    151a:	97 95       	ror	r25
    151c:	87 95       	ror	r24
    151e:	77 95       	ror	r23
    1520:	67 95       	ror	r22
    1522:	ba 95       	dec	r27
    1524:	c9 f7       	brne	.-14     	; 0x1518 <__ultoa_invert+0x86>
    1526:	00 97       	sbiw	r24, 0x00	; 0
    1528:	61 05       	cpc	r22, r1
    152a:	71 05       	cpc	r23, r1
    152c:	08 95       	ret
    152e:	9b 01       	movw	r18, r22
    1530:	ac 01       	movw	r20, r24
    1532:	0a 2e       	mov	r0, r26
    1534:	06 94       	lsr	r0
    1536:	57 95       	ror	r21
    1538:	47 95       	ror	r20
    153a:	37 95       	ror	r19
    153c:	27 95       	ror	r18
    153e:	ba 95       	dec	r27
    1540:	c9 f7       	brne	.-14     	; 0x1534 <__ultoa_invert+0xa2>
    1542:	62 0f       	add	r22, r18
    1544:	73 1f       	adc	r23, r19
    1546:	84 1f       	adc	r24, r20
    1548:	95 1f       	adc	r25, r21
    154a:	a0 1d       	adc	r26, r0
    154c:	08 95       	ret

0000154e <_exit>:
    154e:	f8 94       	cli

00001550 <__stop_program>:
    1550:	ff cf       	rjmp	.-2      	; 0x1550 <__stop_program>
