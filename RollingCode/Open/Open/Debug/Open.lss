
Open.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000000c6  00800200  0000169a  0000172e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000169a  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000151  008002c6  008002c6  000017f4  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  000017f4  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 00000118  00000000  00000000  00001850  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000016d5  00000000  00000000  00001968  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000934  00000000  00000000  0000303d  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000c2b  00000000  00000000  00003971  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000500  00000000  00000000  0000459c  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000006c1  00000000  00000000  00004a9c  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000e79  00000000  00000000  0000515d  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000060  00000000  00000000  00005fd6  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	8f c0       	rjmp	.+286    	; 0x120 <__ctors_end>
       2:	00 00       	nop
       4:	ab c0       	rjmp	.+342    	; 0x15c <__bad_interrupt>
       6:	00 00       	nop
       8:	a9 c0       	rjmp	.+338    	; 0x15c <__bad_interrupt>
       a:	00 00       	nop
       c:	a7 c0       	rjmp	.+334    	; 0x15c <__bad_interrupt>
       e:	00 00       	nop
      10:	a5 c0       	rjmp	.+330    	; 0x15c <__bad_interrupt>
      12:	00 00       	nop
      14:	a3 c0       	rjmp	.+326    	; 0x15c <__bad_interrupt>
      16:	00 00       	nop
      18:	a1 c0       	rjmp	.+322    	; 0x15c <__bad_interrupt>
      1a:	00 00       	nop
      1c:	9f c0       	rjmp	.+318    	; 0x15c <__bad_interrupt>
      1e:	00 00       	nop
      20:	9d c0       	rjmp	.+314    	; 0x15c <__bad_interrupt>
      22:	00 00       	nop
      24:	9b c0       	rjmp	.+310    	; 0x15c <__bad_interrupt>
      26:	00 00       	nop
      28:	99 c0       	rjmp	.+306    	; 0x15c <__bad_interrupt>
      2a:	00 00       	nop
      2c:	97 c0       	rjmp	.+302    	; 0x15c <__bad_interrupt>
      2e:	00 00       	nop
      30:	95 c0       	rjmp	.+298    	; 0x15c <__bad_interrupt>
      32:	00 00       	nop
      34:	93 c0       	rjmp	.+294    	; 0x15c <__bad_interrupt>
      36:	00 00       	nop
      38:	91 c0       	rjmp	.+290    	; 0x15c <__bad_interrupt>
      3a:	00 00       	nop
      3c:	8f c0       	rjmp	.+286    	; 0x15c <__bad_interrupt>
      3e:	00 00       	nop
      40:	8d c0       	rjmp	.+282    	; 0x15c <__bad_interrupt>
      42:	00 00       	nop
      44:	8b c0       	rjmp	.+278    	; 0x15c <__bad_interrupt>
      46:	00 00       	nop
      48:	89 c0       	rjmp	.+274    	; 0x15c <__bad_interrupt>
      4a:	00 00       	nop
      4c:	87 c0       	rjmp	.+270    	; 0x15c <__bad_interrupt>
      4e:	00 00       	nop
      50:	85 c0       	rjmp	.+266    	; 0x15c <__bad_interrupt>
      52:	00 00       	nop
      54:	83 c0       	rjmp	.+262    	; 0x15c <__bad_interrupt>
      56:	00 00       	nop
      58:	81 c0       	rjmp	.+258    	; 0x15c <__bad_interrupt>
      5a:	00 00       	nop
      5c:	7f c0       	rjmp	.+254    	; 0x15c <__bad_interrupt>
      5e:	00 00       	nop
      60:	7d c0       	rjmp	.+250    	; 0x15c <__bad_interrupt>
      62:	00 00       	nop
      64:	7b c0       	rjmp	.+246    	; 0x15c <__bad_interrupt>
      66:	00 00       	nop
      68:	79 c0       	rjmp	.+242    	; 0x15c <__bad_interrupt>
      6a:	00 00       	nop
      6c:	77 c0       	rjmp	.+238    	; 0x15c <__bad_interrupt>
      6e:	00 00       	nop
      70:	75 c0       	rjmp	.+234    	; 0x15c <__bad_interrupt>
      72:	00 00       	nop
      74:	73 c0       	rjmp	.+230    	; 0x15c <__bad_interrupt>
      76:	00 00       	nop
      78:	71 c0       	rjmp	.+226    	; 0x15c <__bad_interrupt>
      7a:	00 00       	nop
      7c:	6f c0       	rjmp	.+222    	; 0x15c <__bad_interrupt>
      7e:	00 00       	nop
      80:	6d c0       	rjmp	.+218    	; 0x15c <__bad_interrupt>
      82:	00 00       	nop
      84:	6b c0       	rjmp	.+214    	; 0x15c <__bad_interrupt>
      86:	00 00       	nop
      88:	69 c0       	rjmp	.+210    	; 0x15c <__bad_interrupt>
      8a:	00 00       	nop
      8c:	67 c0       	rjmp	.+206    	; 0x15c <__bad_interrupt>
      8e:	00 00       	nop
      90:	65 c0       	rjmp	.+202    	; 0x15c <__bad_interrupt>
      92:	00 00       	nop
      94:	63 c0       	rjmp	.+198    	; 0x15c <__bad_interrupt>
      96:	00 00       	nop
      98:	61 c0       	rjmp	.+194    	; 0x15c <__bad_interrupt>
      9a:	00 00       	nop
      9c:	5f c0       	rjmp	.+190    	; 0x15c <__bad_interrupt>
      9e:	00 00       	nop
      a0:	5d c0       	rjmp	.+186    	; 0x15c <__bad_interrupt>
      a2:	00 00       	nop
      a4:	5b c0       	rjmp	.+182    	; 0x15c <__bad_interrupt>
      a6:	00 00       	nop
      a8:	59 c0       	rjmp	.+178    	; 0x15c <__bad_interrupt>
      aa:	00 00       	nop
      ac:	57 c0       	rjmp	.+174    	; 0x15c <__bad_interrupt>
      ae:	00 00       	nop
      b0:	55 c0       	rjmp	.+170    	; 0x15c <__bad_interrupt>
      b2:	00 00       	nop
      b4:	53 c0       	rjmp	.+166    	; 0x15c <__bad_interrupt>
      b6:	00 00       	nop
      b8:	51 c0       	rjmp	.+162    	; 0x15c <__bad_interrupt>
      ba:	00 00       	nop
      bc:	4f c0       	rjmp	.+158    	; 0x15c <__bad_interrupt>
      be:	00 00       	nop
      c0:	4d c0       	rjmp	.+154    	; 0x15c <__bad_interrupt>
      c2:	00 00       	nop
      c4:	4b c0       	rjmp	.+150    	; 0x15c <__bad_interrupt>
      c6:	00 00       	nop
      c8:	49 c0       	rjmp	.+146    	; 0x15c <__bad_interrupt>
      ca:	00 00       	nop
      cc:	47 c0       	rjmp	.+142    	; 0x15c <__bad_interrupt>
      ce:	00 00       	nop
      d0:	45 c0       	rjmp	.+138    	; 0x15c <__bad_interrupt>
      d2:	00 00       	nop
      d4:	43 c0       	rjmp	.+134    	; 0x15c <__bad_interrupt>
      d6:	00 00       	nop
      d8:	41 c0       	rjmp	.+130    	; 0x15c <__bad_interrupt>
      da:	00 00       	nop
      dc:	3f c0       	rjmp	.+126    	; 0x15c <__bad_interrupt>
      de:	00 00       	nop
      e0:	3d c0       	rjmp	.+122    	; 0x15c <__bad_interrupt>
      e2:	00 00       	nop
      e4:	3b c0       	rjmp	.+118    	; 0x15c <__bad_interrupt>
      e6:	00 00       	nop
      e8:	39 c0       	rjmp	.+114    	; 0x15c <__bad_interrupt>
      ea:	00 00       	nop
      ec:	37 c0       	rjmp	.+110    	; 0x15c <__bad_interrupt>
      ee:	00 00       	nop
      f0:	35 c0       	rjmp	.+106    	; 0x15c <__bad_interrupt>
      f2:	00 00       	nop
      f4:	33 c0       	rjmp	.+102    	; 0x15c <__bad_interrupt>
      f6:	00 00       	nop
      f8:	31 c0       	rjmp	.+98     	; 0x15c <__bad_interrupt>
      fa:	00 00       	nop
      fc:	2f c0       	rjmp	.+94     	; 0x15c <__bad_interrupt>
      fe:	00 00       	nop
     100:	2d c0       	rjmp	.+90     	; 0x15c <__bad_interrupt>
     102:	00 00       	nop
     104:	2b c0       	rjmp	.+86     	; 0x15c <__bad_interrupt>
     106:	00 00       	nop
     108:	29 c0       	rjmp	.+82     	; 0x15c <__bad_interrupt>
     10a:	00 00       	nop
     10c:	27 c0       	rjmp	.+78     	; 0x15c <__bad_interrupt>
     10e:	00 00       	nop
     110:	25 c0       	rjmp	.+74     	; 0x15c <__bad_interrupt>
     112:	00 00       	nop
     114:	23 c0       	rjmp	.+70     	; 0x15c <__bad_interrupt>
     116:	00 00       	nop
     118:	21 c0       	rjmp	.+66     	; 0x15c <__bad_interrupt>
     11a:	00 00       	nop
     11c:	1f c0       	rjmp	.+62     	; 0x15c <__bad_interrupt>
	...

00000120 <__ctors_end>:
     120:	11 24       	eor	r1, r1
     122:	1f be       	out	0x3f, r1	; 63
     124:	cf ef       	ldi	r28, 0xFF	; 255
     126:	d1 e4       	ldi	r29, 0x41	; 65
     128:	de bf       	out	0x3e, r29	; 62
     12a:	cd bf       	out	0x3d, r28	; 61

0000012c <__do_copy_data>:
     12c:	12 e0       	ldi	r17, 0x02	; 2
     12e:	a0 e0       	ldi	r26, 0x00	; 0
     130:	b2 e0       	ldi	r27, 0x02	; 2
     132:	ea e9       	ldi	r30, 0x9A	; 154
     134:	f6 e1       	ldi	r31, 0x16	; 22
     136:	00 e0       	ldi	r16, 0x00	; 0
     138:	0b bf       	out	0x3b, r16	; 59
     13a:	02 c0       	rjmp	.+4      	; 0x140 <__do_copy_data+0x14>
     13c:	07 90       	elpm	r0, Z+
     13e:	0d 92       	st	X+, r0
     140:	a6 3c       	cpi	r26, 0xC6	; 198
     142:	b1 07       	cpc	r27, r17
     144:	d9 f7       	brne	.-10     	; 0x13c <__do_copy_data+0x10>

00000146 <__do_clear_bss>:
     146:	24 e0       	ldi	r18, 0x04	; 4
     148:	a6 ec       	ldi	r26, 0xC6	; 198
     14a:	b2 e0       	ldi	r27, 0x02	; 2
     14c:	01 c0       	rjmp	.+2      	; 0x150 <.do_clear_bss_start>

0000014e <.do_clear_bss_loop>:
     14e:	1d 92       	st	X+, r1

00000150 <.do_clear_bss_start>:
     150:	a7 31       	cpi	r26, 0x17	; 23
     152:	b2 07       	cpc	r27, r18
     154:	e1 f7       	brne	.-8      	; 0x14e <.do_clear_bss_loop>
     156:	b9 d2       	rcall	.+1394   	; 0x6ca <main>
     158:	0c 94 4b 0b 	jmp	0x1696	; 0x1696 <_exit>

0000015c <__bad_interrupt>:
     15c:	51 cf       	rjmp	.-350    	; 0x0 <__vectors>

0000015e <button_init>:
     15e:	6d 98       	cbi	0x0d, 5	; 13
     160:	75 9a       	sbi	0x0e, 5	; 14
     162:	08 95       	ret

00000164 <button_pressed>:
     164:	81 e0       	ldi	r24, 0x01	; 1
     166:	65 99       	sbic	0x0c, 5	; 12
     168:	80 e0       	ldi	r24, 0x00	; 0
     16a:	08 95       	ret

0000016c <button_released>:
     16c:	fb df       	rcall	.-10     	; 0x164 <button_pressed>
     16e:	91 e0       	ldi	r25, 0x01	; 1
     170:	89 27       	eor	r24, r25
     172:	08 95       	ret

00000174 <leds_init>:
     174:	6a 9a       	sbi	0x0d, 2	; 13
     176:	6b 9a       	sbi	0x0d, 3	; 13
     178:	6c 9a       	sbi	0x0d, 4	; 13
     17a:	72 9a       	sbi	0x0e, 2	; 14
     17c:	73 9a       	sbi	0x0e, 3	; 14
     17e:	74 9a       	sbi	0x0e, 4	; 14
     180:	08 95       	ret

00000182 <leds_on>:
     182:	81 30       	cpi	r24, 0x01	; 1
     184:	11 f4       	brne	.+4      	; 0x18a <leds_on+0x8>
     186:	72 98       	cbi	0x0e, 2	; 14
     188:	08 95       	ret
     18a:	82 30       	cpi	r24, 0x02	; 2
     18c:	11 f4       	brne	.+4      	; 0x192 <leds_on+0x10>
     18e:	73 98       	cbi	0x0e, 3	; 14
     190:	08 95       	ret
     192:	83 30       	cpi	r24, 0x03	; 3
     194:	09 f4       	brne	.+2      	; 0x198 <leds_on+0x16>
     196:	74 98       	cbi	0x0e, 4	; 14
     198:	08 95       	ret

0000019a <leds_off>:
     19a:	81 30       	cpi	r24, 0x01	; 1
     19c:	11 f4       	brne	.+4      	; 0x1a2 <leds_off+0x8>
     19e:	72 9a       	sbi	0x0e, 2	; 14
     1a0:	08 95       	ret
     1a2:	82 30       	cpi	r24, 0x02	; 2
     1a4:	11 f4       	brne	.+4      	; 0x1aa <leds_off+0x10>
     1a6:	73 9a       	sbi	0x0e, 3	; 14
     1a8:	08 95       	ret
     1aa:	83 30       	cpi	r24, 0x03	; 3
     1ac:	09 f4       	brne	.+2      	; 0x1b0 <leds_off+0x16>
     1ae:	74 9a       	sbi	0x0e, 4	; 14
     1b0:	08 95       	ret

000001b2 <radio_init>:
     1b2:	ff 92       	push	r15
     1b4:	0f 93       	push	r16
     1b6:	1f 93       	push	r17
     1b8:	cf 93       	push	r28
     1ba:	df 93       	push	r29
     1bc:	08 2f       	mov	r16, r24
     1be:	19 2f       	mov	r17, r25
     1c0:	f6 2e       	mov	r15, r22
     1c2:	c9 e3       	ldi	r28, 0x39	; 57
     1c4:	d1 e0       	ldi	r29, 0x01	; 1
     1c6:	18 82       	st	Y, r1
     1c8:	86 e0       	ldi	r24, 0x06	; 6
     1ca:	90 e0       	ldi	r25, 0x00	; 0
     1cc:	be d3       	rcall	.+1916   	; 0x94a <hw_timer_wait_micro>
     1ce:	81 e0       	ldi	r24, 0x01	; 1
     1d0:	88 83       	st	Y, r24
     1d2:	80 91 41 01 	lds	r24, 0x0141
     1d6:	80 93 c6 02 	sts	0x02C6, r24
     1da:	88 23       	and	r24, r24
     1dc:	51 f4       	brne	.+20     	; 0x1f2 <radio_init+0x40>
     1de:	88 e0       	ldi	r24, 0x08	; 8
     1e0:	80 93 42 01 	sts	0x0142, r24
     1e4:	8e ef       	ldi	r24, 0xFE	; 254
     1e6:	91 e0       	ldi	r25, 0x01	; 1
     1e8:	b0 d3       	rcall	.+1888   	; 0x94a <hw_timer_wait_micro>
     1ea:	80 91 41 01 	lds	r24, 0x0141
     1ee:	80 93 c6 02 	sts	0x02C6, r24
     1f2:	8b e0       	ldi	r24, 0x0B	; 11
     1f4:	80 93 48 01 	sts	0x0148, r24
     1f8:	8f ef       	ldi	r24, 0xFF	; 255
     1fa:	80 93 4f 01 	sts	0x014F, r24
     1fe:	00 93 c7 02 	sts	0x02C7, r16
     202:	10 93 c8 02 	sts	0x02C8, r17
     206:	00 93 60 01 	sts	0x0160, r16
     20a:	10 93 61 01 	sts	0x0161, r17
     20e:	10 92 62 01 	sts	0x0162, r1
     212:	10 92 63 01 	sts	0x0163, r1
     216:	80 91 41 01 	lds	r24, 0x0141
     21a:	80 93 c6 02 	sts	0x02C6, r24
     21e:	f0 92 c9 02 	sts	0x02C9, r15
     222:	df 91       	pop	r29
     224:	cf 91       	pop	r28
     226:	1f 91       	pop	r17
     228:	0f 91       	pop	r16
     22a:	ff 90       	pop	r15
     22c:	08 95       	ret

0000022e <radio_start>:
     22e:	8f ef       	ldi	r24, 0xFF	; 255
     230:	80 93 4f 01 	sts	0x014F, r24
     234:	86 e0       	ldi	r24, 0x06	; 6
     236:	80 93 42 01 	sts	0x0142, r24
     23a:	e1 e4       	ldi	r30, 0x41	; 65
     23c:	f1 e0       	ldi	r31, 0x01	; 1
     23e:	80 81       	ld	r24, Z
     240:	8f 71       	andi	r24, 0x1F	; 31
     242:	86 30       	cpi	r24, 0x06	; 6
     244:	e1 f7       	brne	.-8      	; 0x23e <radio_start+0x10>
     246:	ec e4       	ldi	r30, 0x4C	; 76
     248:	f1 e0       	ldi	r31, 0x01	; 1
     24a:	80 81       	ld	r24, Z
     24c:	80 68       	ori	r24, 0x80	; 128
     24e:	80 83       	st	Z, r24
     250:	08 95       	ret

00000252 <radio_tx_done>:
     252:	80 91 ca 02 	lds	r24, 0x02CA
     256:	10 92 ca 02 	sts	0x02CA, r1
     25a:	08 95       	ret

0000025c <radio_send>:
     25c:	2f ef       	ldi	r18, 0xFF	; 255
     25e:	20 93 4f 01 	sts	0x014F, r18
     262:	20 91 41 01 	lds	r18, 0x0141
     266:	2f 71       	andi	r18, 0x1F	; 31
     268:	29 30       	cpi	r18, 0x09	; 9
     26a:	41 f0       	breq	.+16     	; 0x27c <radio_send+0x20>
     26c:	29 e0       	ldi	r18, 0x09	; 9
     26e:	20 93 42 01 	sts	0x0142, r18
     272:	e1 e4       	ldi	r30, 0x41	; 65
     274:	f1 e0       	ldi	r31, 0x01	; 1
     276:	20 81       	ld	r18, Z
     278:	29 30       	cpi	r18, 0x09	; 9
     27a:	e9 f7       	brne	.-6      	; 0x276 <radio_send+0x1a>
     27c:	26 2f       	mov	r18, r22
     27e:	23 5f       	subi	r18, 0xF3	; 243
     280:	20 93 80 01 	sts	0x0180, r18
     284:	20 e2       	ldi	r18, 0x20	; 32
     286:	20 93 81 01 	sts	0x0181, r18
     28a:	22 e2       	ldi	r18, 0x22	; 34
     28c:	20 93 82 01 	sts	0x0182, r18
     290:	21 e0       	ldi	r18, 0x01	; 1
     292:	20 93 83 01 	sts	0x0183, r18
     296:	10 92 84 01 	sts	0x0184, r1
     29a:	10 92 85 01 	sts	0x0185, r1
     29e:	50 93 86 01 	sts	0x0186, r21
     2a2:	40 93 87 01 	sts	0x0187, r20
     2a6:	10 92 88 01 	sts	0x0188, r1
     2aa:	10 92 89 01 	sts	0x0189, r1
     2ae:	20 91 c8 02 	lds	r18, 0x02C8
     2b2:	20 93 8a 01 	sts	0x018A, r18
     2b6:	20 91 c7 02 	lds	r18, 0x02C7
     2ba:	20 93 8b 01 	sts	0x018B, r18
     2be:	66 23       	and	r22, r22
     2c0:	91 f0       	breq	.+36     	; 0x2e6 <radio_send+0x8a>
     2c2:	a8 2f       	mov	r26, r24
     2c4:	b9 2f       	mov	r27, r25
     2c6:	61 50       	subi	r22, 0x01	; 1
     2c8:	70 e0       	ldi	r23, 0x00	; 0
     2ca:	cb 01       	movw	r24, r22
     2cc:	83 57       	subi	r24, 0x73	; 115
     2ce:	9e 4f       	sbci	r25, 0xFE	; 254
     2d0:	ec e8       	ldi	r30, 0x8C	; 140
     2d2:	f1 e0       	ldi	r31, 0x01	; 1
     2d4:	2d 91       	ld	r18, X+
     2d6:	21 93       	st	Z+, r18
     2d8:	e8 17       	cp	r30, r24
     2da:	f9 07       	cpc	r31, r25
     2dc:	d9 f7       	brne	.-10     	; 0x2d4 <radio_send+0x78>
     2de:	fb 01       	movw	r30, r22
     2e0:	e3 57       	subi	r30, 0x73	; 115
     2e2:	fe 4f       	sbci	r31, 0xFE	; 254
     2e4:	02 c0       	rjmp	.+4      	; 0x2ea <radio_send+0x8e>
     2e6:	ec e8       	ldi	r30, 0x8C	; 140
     2e8:	f1 e0       	ldi	r31, 0x01	; 1
     2ea:	10 82       	st	Z, r1
     2ec:	11 82       	std	Z+1, r1	; 0x01
     2ee:	82 e0       	ldi	r24, 0x02	; 2
     2f0:	80 93 42 01 	sts	0x0142, r24
     2f4:	ef e4       	ldi	r30, 0x4F	; 79
     2f6:	f1 e0       	ldi	r31, 0x01	; 1
     2f8:	80 81       	ld	r24, Z
     2fa:	86 ff       	sbrs	r24, 6
     2fc:	fd cf       	rjmp	.-6      	; 0x2f8 <radio_send+0x9c>
     2fe:	8f ef       	ldi	r24, 0xFF	; 255
     300:	80 93 4f 01 	sts	0x014F, r24
     304:	86 e0       	ldi	r24, 0x06	; 6
     306:	80 93 42 01 	sts	0x0142, r24
     30a:	e1 e4       	ldi	r30, 0x41	; 65
     30c:	f1 e0       	ldi	r31, 0x01	; 1
     30e:	80 81       	ld	r24, Z
     310:	8f 71       	andi	r24, 0x1F	; 31
     312:	86 30       	cpi	r24, 0x06	; 6
     314:	e1 f7       	brne	.-8      	; 0x30e <radio_send+0xb2>
     316:	81 e0       	ldi	r24, 0x01	; 1
     318:	80 93 ca 02 	sts	0x02CA, r24
     31c:	80 91 41 01 	lds	r24, 0x0141
     320:	80 93 c6 02 	sts	0x02C6, r24
     324:	08 95       	ret

00000326 <radio_rxed>:
     326:	90 91 4f 01 	lds	r25, 0x014F
     32a:	81 e0       	ldi	r24, 0x01	; 1
     32c:	93 ff       	sbrs	r25, 3
     32e:	80 e0       	ldi	r24, 0x00	; 0
     330:	08 95       	ret

00000332 <radio_recv>:
     332:	8f 92       	push	r8
     334:	9f 92       	push	r9
     336:	af 92       	push	r10
     338:	bf 92       	push	r11
     33a:	cf 92       	push	r12
     33c:	df 92       	push	r13
     33e:	ef 92       	push	r14
     340:	ff 92       	push	r15
     342:	0f 93       	push	r16
     344:	1f 93       	push	r17
     346:	cf 93       	push	r28
     348:	78 2f       	mov	r23, r24
     34a:	c9 2f       	mov	r28, r25
     34c:	5a 01       	movw	r10, r20
     34e:	49 01       	movw	r8, r18
     350:	40 91 7b 01 	lds	r20, 0x017B
     354:	8f ef       	ldi	r24, 0xFF	; 255
     356:	80 93 00 02 	sts	0x0200, r24
     35a:	ef e4       	ldi	r30, 0x4F	; 79
     35c:	f1 e0       	ldi	r31, 0x01	; 1
     35e:	80 81       	ld	r24, Z
     360:	82 ff       	sbrs	r24, 2
     362:	fd cf       	rjmp	.-6      	; 0x35e <radio_recv+0x2c>
     364:	0c c0       	rjmp	.+24     	; 0x37e <radio_recv+0x4c>
     366:	80 81       	ld	r24, Z
     368:	90 e0       	ldi	r25, 0x00	; 0
     36a:	8f 71       	andi	r24, 0x1F	; 31
     36c:	90 70       	andi	r25, 0x00	; 0
     36e:	28 17       	cp	r18, r24
     370:	39 07       	cpc	r19, r25
     372:	64 f4       	brge	.+24     	; 0x38c <radio_recv+0x5a>
     374:	80 81       	ld	r24, Z
     376:	8f 71       	andi	r24, 0x1F	; 31
     378:	80 93 00 02 	sts	0x0200, r24
     37c:	04 c0       	rjmp	.+8      	; 0x386 <radio_recv+0x54>
     37e:	af e4       	ldi	r26, 0x4F	; 79
     380:	b1 e0       	ldi	r27, 0x01	; 1
     382:	e6 e4       	ldi	r30, 0x46	; 70
     384:	f1 e0       	ldi	r31, 0x01	; 1
     386:	20 91 00 02 	lds	r18, 0x0200
     38a:	30 e0       	ldi	r19, 0x00	; 0
     38c:	8c 91       	ld	r24, X
     38e:	83 ff       	sbrs	r24, 3
     390:	ea cf       	rjmp	.-44     	; 0x366 <radio_recv+0x34>
     392:	84 2f       	mov	r24, r20
     394:	8b 50       	subi	r24, 0x0B	; 11
     396:	46 2f       	mov	r20, r22
     398:	86 17       	cp	r24, r22
     39a:	08 f4       	brcc	.+2      	; 0x39e <radio_recv+0x6c>
     39c:	48 2f       	mov	r20, r24
     39e:	30 91 85 01 	lds	r19, 0x0185
     3a2:	20 e0       	ldi	r18, 0x00	; 0
     3a4:	80 91 86 01 	lds	r24, 0x0186
     3a8:	90 e0       	ldi	r25, 0x00	; 0
     3aa:	82 2b       	or	r24, r18
     3ac:	93 2b       	or	r25, r19
     3ae:	f5 01       	movw	r30, r10
     3b0:	91 83       	std	Z+1, r25	; 0x01
     3b2:	80 83       	st	Z, r24
     3b4:	30 91 89 01 	lds	r19, 0x0189
     3b8:	20 e0       	ldi	r18, 0x00	; 0
     3ba:	80 91 8a 01 	lds	r24, 0x018A
     3be:	90 e0       	ldi	r25, 0x00	; 0
     3c0:	82 2b       	or	r24, r18
     3c2:	93 2b       	or	r25, r19
     3c4:	f4 01       	movw	r30, r8
     3c6:	91 83       	std	Z+1, r25	; 0x01
     3c8:	80 83       	st	Z, r24
     3ca:	44 23       	and	r20, r20
     3cc:	99 f0       	breq	.+38     	; 0x3f4 <radio_recv+0xc2>
     3ce:	a7 2f       	mov	r26, r23
     3d0:	bc 2f       	mov	r27, r28
     3d2:	24 2f       	mov	r18, r20
     3d4:	21 50       	subi	r18, 0x01	; 1
     3d6:	30 e0       	ldi	r19, 0x00	; 0
     3d8:	c9 01       	movw	r24, r18
     3da:	84 57       	subi	r24, 0x74	; 116
     3dc:	9e 4f       	sbci	r25, 0xFE	; 254
     3de:	eb e8       	ldi	r30, 0x8B	; 139
     3e0:	f1 e0       	ldi	r31, 0x01	; 1
     3e2:	51 91       	ld	r21, Z+
     3e4:	5d 93       	st	X+, r21
     3e6:	e8 17       	cp	r30, r24
     3e8:	f9 07       	cpc	r31, r25
     3ea:	d9 f7       	brne	.-10     	; 0x3e2 <radio_recv+0xb0>
     3ec:	f9 01       	movw	r30, r18
     3ee:	e4 57       	subi	r30, 0x74	; 116
     3f0:	fe 4f       	sbci	r31, 0xFE	; 254
     3f2:	02 c0       	rjmp	.+4      	; 0x3f8 <radio_recv+0xc6>
     3f4:	eb e8       	ldi	r30, 0x8B	; 139
     3f6:	f1 e0       	ldi	r31, 0x01	; 1
     3f8:	80 81       	ld	r24, Z
     3fa:	80 93 cb 02 	sts	0x02CB, r24
     3fe:	f6 01       	movw	r30, r12
     400:	80 83       	st	Z, r24
     402:	80 91 47 01 	lds	r24, 0x0147
     406:	80 93 cc 02 	sts	0x02CC, r24
     40a:	f7 01       	movw	r30, r14
     40c:	80 83       	st	Z, r24
     40e:	80 91 46 01 	lds	r24, 0x0146
     412:	88 1f       	adc	r24, r24
     414:	88 27       	eor	r24, r24
     416:	88 1f       	adc	r24, r24
     418:	f8 01       	movw	r30, r16
     41a:	80 83       	st	Z, r24
     41c:	e1 e4       	ldi	r30, 0x41	; 65
     41e:	f1 e0       	ldi	r31, 0x01	; 1
     420:	80 81       	ld	r24, Z
     422:	8f 71       	andi	r24, 0x1F	; 31
     424:	86 30       	cpi	r24, 0x06	; 6
     426:	e1 f7       	brne	.-8      	; 0x420 <radio_recv+0xee>
     428:	ec e4       	ldi	r30, 0x4C	; 76
     42a:	f1 e0       	ldi	r31, 0x01	; 1
     42c:	80 81       	ld	r24, Z
     42e:	8f 77       	andi	r24, 0x7F	; 127
     430:	80 83       	st	Z, r24
     432:	80 81       	ld	r24, Z
     434:	80 68       	ori	r24, 0x80	; 128
     436:	80 83       	st	Z, r24
     438:	8f ef       	ldi	r24, 0xFF	; 255
     43a:	80 93 4f 01 	sts	0x014F, r24
     43e:	80 91 41 01 	lds	r24, 0x0141
     442:	80 93 c6 02 	sts	0x02C6, r24
     446:	84 2f       	mov	r24, r20
     448:	82 50       	subi	r24, 0x02	; 2
     44a:	cf 91       	pop	r28
     44c:	1f 91       	pop	r17
     44e:	0f 91       	pop	r16
     450:	ff 90       	pop	r15
     452:	ef 90       	pop	r14
     454:	df 90       	pop	r13
     456:	cf 90       	pop	r12
     458:	bf 90       	pop	r11
     45a:	af 90       	pop	r10
     45c:	9f 90       	pop	r9
     45e:	8f 90       	pop	r8
     460:	08 95       	ret

00000462 <radio_set_power>:
     462:	e5 e4       	ldi	r30, 0x45	; 69
     464:	f1 e0       	ldi	r31, 0x01	; 1
     466:	90 81       	ld	r25, Z
     468:	8f 70       	andi	r24, 0x0F	; 15
     46a:	90 7f       	andi	r25, 0xF0	; 240
     46c:	98 2b       	or	r25, r24
     46e:	90 83       	st	Z, r25
     470:	08 95       	ret

00000472 <radio_rssi>:
     472:	80 91 46 01 	lds	r24, 0x0146
     476:	8f 71       	andi	r24, 0x1F	; 31
     478:	90 91 00 02 	lds	r25, 0x0200
     47c:	98 17       	cp	r25, r24
     47e:	10 f4       	brcc	.+4      	; 0x484 <radio_rssi+0x12>
     480:	80 93 00 02 	sts	0x0200, r24
     484:	08 95       	ret

00000486 <radio_max_rssi>:
     486:	80 91 00 02 	lds	r24, 0x0200
     48a:	10 92 00 02 	sts	0x0200, r1
     48e:	08 95       	ret

00000490 <radio_latest_energy>:
     490:	80 91 cc 02 	lds	r24, 0x02CC
     494:	08 95       	ret

00000496 <radio_latest_lqi>:
     496:	80 91 cb 02 	lds	r24, 0x02CB
     49a:	08 95       	ret

0000049c <radio_rx_all>:
     49c:	80 91 c9 02 	lds	r24, 0x02C9
     4a0:	08 95       	ret

000004a2 <radio_getid>:
     4a2:	80 91 c7 02 	lds	r24, 0x02C7
     4a6:	90 91 c8 02 	lds	r25, 0x02C8
     4aa:	08 95       	ret

000004ac <serial_init>:
     4ac:	4f 92       	push	r4
     4ae:	5f 92       	push	r5
     4b0:	6f 92       	push	r6
     4b2:	7f 92       	push	r7
     4b4:	8f 92       	push	r8
     4b6:	9f 92       	push	r9
     4b8:	af 92       	push	r10
     4ba:	bf 92       	push	r11
     4bc:	cf 92       	push	r12
     4be:	df 92       	push	r13
     4c0:	ef 92       	push	r14
     4c2:	ff 92       	push	r15
     4c4:	4b 01       	movw	r8, r22
     4c6:	5c 01       	movw	r10, r24
     4c8:	d9 d1       	rcall	.+946    	; 0x87c <hw_timer_cpuf>
     4ca:	2b 01       	movw	r4, r22
     4cc:	3c 01       	movw	r6, r24
     4ce:	68 94       	set
     4d0:	13 f8       	bld	r1, 3
     4d2:	76 94       	lsr	r7
     4d4:	67 94       	ror	r6
     4d6:	57 94       	ror	r5
     4d8:	47 94       	ror	r4
     4da:	16 94       	lsr	r1
     4dc:	d1 f7       	brne	.-12     	; 0x4d2 <serial_init+0x26>
     4de:	0f 2e       	mov	r0, r31
     4e0:	fa e0       	ldi	r31, 0x0A	; 10
     4e2:	cf 2e       	mov	r12, r31
     4e4:	f0 e0       	ldi	r31, 0x00	; 0
     4e6:	df 2e       	mov	r13, r31
     4e8:	f0 e0       	ldi	r31, 0x00	; 0
     4ea:	ef 2e       	mov	r14, r31
     4ec:	f0 e0       	ldi	r31, 0x00	; 0
     4ee:	ff 2e       	mov	r15, r31
     4f0:	f0 2d       	mov	r31, r0
     4f2:	c5 01       	movw	r24, r10
     4f4:	b4 01       	movw	r22, r8
     4f6:	a7 01       	movw	r20, r14
     4f8:	96 01       	movw	r18, r12
     4fa:	4e d5       	rcall	.+2716   	; 0xf98 <__udivmodsi4>
     4fc:	c3 01       	movw	r24, r6
     4fe:	b2 01       	movw	r22, r4
     500:	4b d5       	rcall	.+2710   	; 0xf98 <__udivmodsi4>
     502:	ca 01       	movw	r24, r20
     504:	b9 01       	movw	r22, r18
     506:	6b 5f       	subi	r22, 0xFB	; 251
     508:	7f 4f       	sbci	r23, 0xFF	; 255
     50a:	8f 4f       	sbci	r24, 0xFF	; 255
     50c:	9f 4f       	sbci	r25, 0xFF	; 255
     50e:	a7 01       	movw	r20, r14
     510:	96 01       	movw	r18, r12
     512:	42 d5       	rcall	.+2692   	; 0xf98 <__udivmodsi4>
     514:	da 01       	movw	r26, r20
     516:	c9 01       	movw	r24, r18
     518:	01 97       	sbiw	r24, 0x01	; 1
     51a:	a1 09       	sbc	r26, r1
     51c:	b1 09       	sbc	r27, r1
     51e:	e1 ec       	ldi	r30, 0xC1	; 193
     520:	f0 e0       	ldi	r31, 0x00	; 0
     522:	10 82       	st	Z, r1
     524:	10 92 c0 00 	sts	0x00C0, r1
     528:	26 e0       	ldi	r18, 0x06	; 6
     52a:	20 93 c2 00 	sts	0x00C2, r18
     52e:	29 2f       	mov	r18, r25
     530:	2f 70       	andi	r18, 0x0F	; 15
     532:	20 93 c5 00 	sts	0x00C5, r18
     536:	80 93 c4 00 	sts	0x00C4, r24
     53a:	88 e1       	ldi	r24, 0x18	; 24
     53c:	80 83       	st	Z, r24
     53e:	81 e0       	ldi	r24, 0x01	; 1
     540:	92 e0       	ldi	r25, 0x02	; 2
     542:	90 93 14 04 	sts	0x0414, r25
     546:	80 93 13 04 	sts	0x0413, r24
     54a:	e3 e1       	ldi	r30, 0x13	; 19
     54c:	f4 e0       	ldi	r31, 0x04	; 4
     54e:	92 93       	st	-Z, r25
     550:	82 93       	st	-Z, r24
     552:	95 83       	std	Z+5, r25	; 0x05
     554:	84 83       	std	Z+4, r24	; 0x04
     556:	81 e0       	ldi	r24, 0x01	; 1
     558:	80 93 cd 02 	sts	0x02CD, r24
     55c:	ff 90       	pop	r15
     55e:	ef 90       	pop	r14
     560:	df 90       	pop	r13
     562:	cf 90       	pop	r12
     564:	bf 90       	pop	r11
     566:	af 90       	pop	r10
     568:	9f 90       	pop	r9
     56a:	8f 90       	pop	r8
     56c:	7f 90       	pop	r7
     56e:	6f 90       	pop	r6
     570:	5f 90       	pop	r5
     572:	4f 90       	pop	r4
     574:	08 95       	ret

00000576 <serial_is_init>:
     576:	80 91 cd 02 	lds	r24, 0x02CD
     57a:	08 95       	ret

0000057c <serial_put>:
     57c:	e0 ec       	ldi	r30, 0xC0	; 192
     57e:	f0 e0       	ldi	r31, 0x00	; 0
     580:	90 81       	ld	r25, Z
     582:	95 ff       	sbrs	r25, 5
     584:	fd cf       	rjmp	.-6      	; 0x580 <serial_put+0x4>
     586:	80 93 c6 00 	sts	0x00C6, r24
     58a:	08 95       	ret

0000058c <write>:
     58c:	cf 93       	push	r28
     58e:	c8 2f       	mov	r28, r24
     590:	f5 df       	rcall	.-22     	; 0x57c <serial_put>
     592:	8c 2f       	mov	r24, r28
     594:	90 e0       	ldi	r25, 0x00	; 0
     596:	cf 91       	pop	r28
     598:	08 95       	ret

0000059a <serial_puts>:
     59a:	cf 93       	push	r28
     59c:	df 93       	push	r29
     59e:	ec 01       	movw	r28, r24
     5a0:	88 81       	ld	r24, Y
     5a2:	88 23       	and	r24, r24
     5a4:	29 f0       	breq	.+10     	; 0x5b0 <serial_puts+0x16>
     5a6:	21 96       	adiw	r28, 0x01	; 1
     5a8:	e9 df       	rcall	.-46     	; 0x57c <serial_put>
     5aa:	89 91       	ld	r24, Y+
     5ac:	88 23       	and	r24, r24
     5ae:	e1 f7       	brne	.-8      	; 0x5a8 <serial_puts+0xe>
     5b0:	df 91       	pop	r29
     5b2:	cf 91       	pop	r28
     5b4:	08 95       	ret

000005b6 <serial_ready>:
     5b6:	80 91 c0 00 	lds	r24, 0x00C0
     5ba:	88 1f       	adc	r24, r24
     5bc:	88 27       	eor	r24, r24
     5be:	88 1f       	adc	r24, r24
     5c0:	08 95       	ret

000005c2 <serial_get>:
     5c2:	f9 df       	rcall	.-14     	; 0x5b6 <serial_ready>
     5c4:	88 23       	and	r24, r24
     5c6:	e9 f3       	breq	.-6      	; 0x5c2 <serial_get>
     5c8:	80 91 c6 00 	lds	r24, 0x00C6
     5cc:	08 95       	ret

000005ce <read>:
     5ce:	cf 93       	push	r28
     5d0:	f8 df       	rcall	.-16     	; 0x5c2 <serial_get>
     5d2:	c8 2f       	mov	r28, r24
     5d4:	d3 df       	rcall	.-90     	; 0x57c <serial_put>
     5d6:	8c 2f       	mov	r24, r28
     5d8:	90 e0       	ldi	r25, 0x00	; 0
     5da:	cf 91       	pop	r28
     5dc:	08 95       	ret

000005de <os_timer_add>:
     5de:	bc 01       	movw	r22, r24
     5e0:	40 91 d3 02 	lds	r20, 0x02D3
     5e4:	50 91 d4 02 	lds	r21, 0x02D4
     5e8:	48 17       	cp	r20, r24
     5ea:	59 07       	cpc	r21, r25
     5ec:	41 f1       	breq	.+80     	; 0x63e <os_timer_add+0x60>
     5ee:	a5 ed       	ldi	r26, 0xD5	; 213
     5f0:	b2 e0       	ldi	r27, 0x02	; 2
     5f2:	9d 01       	movw	r18, r26
     5f4:	2e 5e       	subi	r18, 0xEE	; 238
     5f6:	3f 4f       	sbci	r19, 0xFF	; 255
     5f8:	fd 01       	movw	r30, r26
     5fa:	81 91       	ld	r24, Z+
     5fc:	91 91       	ld	r25, Z+
     5fe:	86 17       	cp	r24, r22
     600:	97 07       	cpc	r25, r23
     602:	e9 f0       	breq	.+58     	; 0x63e <os_timer_add+0x60>
     604:	e2 17       	cp	r30, r18
     606:	f3 07       	cpc	r31, r19
     608:	c1 f7       	brne	.-16     	; 0x5fa <os_timer_add+0x1c>
     60a:	41 15       	cp	r20, r1
     60c:	51 05       	cpc	r21, r1
     60e:	41 f0       	breq	.+16     	; 0x620 <os_timer_add+0x42>
     610:	21 e0       	ldi	r18, 0x01	; 1
     612:	30 e0       	ldi	r19, 0x00	; 0
     614:	a9 01       	movw	r20, r18
     616:	8d 91       	ld	r24, X+
     618:	9d 91       	ld	r25, X+
     61a:	00 97       	sbiw	r24, 0x00	; 0
     61c:	59 f4       	brne	.+22     	; 0x634 <os_timer_add+0x56>
     61e:	02 c0       	rjmp	.+4      	; 0x624 <os_timer_add+0x46>
     620:	40 e0       	ldi	r20, 0x00	; 0
     622:	50 e0       	ldi	r21, 0x00	; 0
     624:	fa 01       	movw	r30, r20
     626:	ee 0f       	add	r30, r30
     628:	ff 1f       	adc	r31, r31
     62a:	ed 52       	subi	r30, 0x2D	; 45
     62c:	fd 4f       	sbci	r31, 0xFD	; 253
     62e:	71 83       	std	Z+1, r23	; 0x01
     630:	60 83       	st	Z, r22
     632:	08 95       	ret
     634:	2f 5f       	subi	r18, 0xFF	; 255
     636:	3f 4f       	sbci	r19, 0xFF	; 255
     638:	2a 30       	cpi	r18, 0x0A	; 10
     63a:	31 05       	cpc	r19, r1
     63c:	59 f7       	brne	.-42     	; 0x614 <os_timer_add+0x36>
     63e:	08 95       	ret

00000640 <os_timer_tick>:
     640:	fc 01       	movw	r30, r24
     642:	00 97       	sbiw	r24, 0x00	; 0
     644:	29 f1       	breq	.+74     	; 0x690 <os_timer_tick+0x50>
     646:	80 81       	ld	r24, Z
     648:	88 23       	and	r24, r24
     64a:	11 f1       	breq	.+68     	; 0x690 <os_timer_tick+0x50>
     64c:	80 85       	ldd	r24, Z+8	; 0x08
     64e:	91 85       	ldd	r25, Z+9	; 0x09
     650:	00 97       	sbiw	r24, 0x00	; 0
     652:	f1 f0       	breq	.+60     	; 0x690 <os_timer_tick+0x50>
     654:	66 23       	and	r22, r22
     656:	39 f0       	breq	.+14     	; 0x666 <os_timer_tick+0x26>
     658:	22 81       	ldd	r18, Z+2	; 0x02
     65a:	21 30       	cpi	r18, 0x01	; 1
     65c:	c9 f4       	brne	.+50     	; 0x690 <os_timer_tick+0x50>
     65e:	01 97       	sbiw	r24, 0x01	; 1
     660:	91 87       	std	Z+9, r25	; 0x09
     662:	80 87       	std	Z+8, r24	; 0x08
     664:	06 c0       	rjmp	.+12     	; 0x672 <os_timer_tick+0x32>
     666:	22 81       	ldd	r18, Z+2	; 0x02
     668:	22 23       	and	r18, r18
     66a:	91 f4       	brne	.+36     	; 0x690 <os_timer_tick+0x50>
     66c:	01 97       	sbiw	r24, 0x01	; 1
     66e:	91 87       	std	Z+9, r25	; 0x09
     670:	80 87       	std	Z+8, r24	; 0x08
     672:	80 85       	ldd	r24, Z+8	; 0x08
     674:	91 85       	ldd	r25, Z+9	; 0x09
     676:	00 97       	sbiw	r24, 0x00	; 0
     678:	59 f4       	brne	.+22     	; 0x690 <os_timer_tick+0x50>
     67a:	81 e0       	ldi	r24, 0x01	; 1
     67c:	83 83       	std	Z+3, r24	; 0x03
     67e:	86 81       	ldd	r24, Z+6	; 0x06
     680:	97 81       	ldd	r25, Z+7	; 0x07
     682:	00 97       	sbiw	r24, 0x00	; 0
     684:	19 f0       	breq	.+6      	; 0x68c <os_timer_tick+0x4c>
     686:	81 e0       	ldi	r24, 0x01	; 1
     688:	81 83       	std	Z+1, r24	; 0x01
     68a:	01 c0       	rjmp	.+2      	; 0x68e <os_timer_tick+0x4e>
     68c:	11 82       	std	Z+1, r1	; 0x01
     68e:	10 82       	st	Z, r1
     690:	08 95       	ret

00000692 <timer_init>:
     692:	fc 01       	movw	r30, r24
     694:	10 82       	st	Z, r1
     696:	11 82       	std	Z+1, r1	; 0x01
     698:	62 83       	std	Z+2, r22	; 0x02
     69a:	13 82       	std	Z+3, r1	; 0x03
     69c:	55 83       	std	Z+5, r21	; 0x05
     69e:	44 83       	std	Z+4, r20	; 0x04
     6a0:	37 83       	std	Z+7, r19	; 0x07
     6a2:	26 83       	std	Z+6, r18	; 0x06
     6a4:	9c cf       	rjmp	.-200    	; 0x5de <os_timer_add>

000006a6 <timer_start>:
     6a6:	fc 01       	movw	r30, r24
     6a8:	80 81       	ld	r24, Z
     6aa:	88 23       	and	r24, r24
     6ac:	41 f4       	brne	.+16     	; 0x6be <timer_start+0x18>
     6ae:	81 e0       	ldi	r24, 0x01	; 1
     6b0:	80 83       	st	Z, r24
     6b2:	11 82       	std	Z+1, r1	; 0x01
     6b4:	13 82       	std	Z+3, r1	; 0x03
     6b6:	84 81       	ldd	r24, Z+4	; 0x04
     6b8:	95 81       	ldd	r25, Z+5	; 0x05
     6ba:	91 87       	std	Z+9, r25	; 0x09
     6bc:	80 87       	std	Z+8, r24	; 0x08
     6be:	cf 01       	movw	r24, r30
     6c0:	8e cf       	rjmp	.-228    	; 0x5de <os_timer_add>

000006c2 <timer_stop>:
     6c2:	fc 01       	movw	r30, r24
     6c4:	10 82       	st	Z, r1
     6c6:	11 82       	std	Z+1, r1	; 0x01
     6c8:	08 95       	ret

000006ca <main>:
     6ca:	cf 93       	push	r28
     6cc:	df 93       	push	r29
     6ce:	cd b7       	in	r28, 0x3d	; 61
     6d0:	de b7       	in	r29, 0x3e	; 62
     6d2:	27 97       	sbiw	r28, 0x07	; 7
     6d4:	0f b6       	in	r0, 0x3f	; 63
     6d6:	f8 94       	cli
     6d8:	de bf       	out	0x3e, r29	; 62
     6da:	0f be       	out	0x3f, r0	; 63
     6dc:	cd bf       	out	0x3d, r28	; 61
     6de:	03 ed       	ldi	r16, 0xD3	; 211
     6e0:	12 e0       	ldi	r17, 0x02	; 2
     6e2:	0f 2e       	mov	r0, r31
     6e4:	f4 e1       	ldi	r31, 0x14	; 20
     6e6:	af 2e       	mov	r10, r31
     6e8:	bb 24       	eor	r11, r11
     6ea:	f0 2d       	mov	r31, r0
     6ec:	a0 0e       	add	r10, r16
     6ee:	b1 1e       	adc	r11, r17
     6f0:	f8 01       	movw	r30, r16
     6f2:	11 92       	st	Z+, r1
     6f4:	11 92       	st	Z+, r1
     6f6:	ea 15       	cp	r30, r10
     6f8:	fb 05       	cpc	r31, r11
     6fa:	d9 f7       	brne	.-10     	; 0x6f2 <main+0x28>
     6fc:	c4 d0       	rcall	.+392    	; 0x886 <hw_timer_init>
     6fe:	63 d2       	rcall	.+1222   	; 0xbc6 <application_start>
     700:	44 24       	eor	r4, r4
     702:	55 24       	eor	r5, r5
     704:	33 24       	eor	r3, r3
     706:	70 2e       	mov	r7, r16
     708:	61 2e       	mov	r6, r17
     70a:	0f 2e       	mov	r0, r31
     70c:	f3 ed       	ldi	r31, 0xD3	; 211
     70e:	8f 2e       	mov	r8, r31
     710:	f2 e0       	ldi	r31, 0x02	; 2
     712:	9f 2e       	mov	r9, r31
     714:	f0 2d       	mov	r31, r0
     716:	9d dd       	rcall	.-1222   	; 0x252 <radio_tx_done>
     718:	88 23       	and	r24, r24
     71a:	09 f0       	breq	.+2      	; 0x71e <main+0x54>
     71c:	90 d3       	rcall	.+1824   	; 0xe3e <application_radio_tx_done>
     71e:	03 de       	rcall	.-1018   	; 0x326 <radio_rxed>
     720:	88 23       	and	r24, r24
     722:	89 f1       	breq	.+98     	; 0x786 <main+0xbc>
     724:	87 ee       	ldi	r24, 0xE7	; 231
     726:	92 e0       	ldi	r25, 0x02	; 2
     728:	60 e8       	ldi	r22, 0x80	; 128
     72a:	ae 01       	movw	r20, r28
     72c:	4a 5f       	subi	r20, 0xFA	; 250
     72e:	5f 4f       	sbci	r21, 0xFF	; 255
     730:	9e 01       	movw	r18, r28
     732:	2c 5f       	subi	r18, 0xFC	; 252
     734:	3f 4f       	sbci	r19, 0xFF	; 255
     736:	8e 01       	movw	r16, r28
     738:	0d 5f       	subi	r16, 0xFD	; 253
     73a:	1f 4f       	sbci	r17, 0xFF	; 255
     73c:	ee 24       	eor	r14, r14
     73e:	ff 24       	eor	r15, r15
     740:	68 94       	set
     742:	e1 f8       	bld	r14, 1
     744:	ec 0e       	add	r14, r28
     746:	fd 1e       	adc	r15, r29
     748:	6e 01       	movw	r12, r28
     74a:	08 94       	sec
     74c:	c1 1c       	adc	r12, r1
     74e:	d1 1c       	adc	r13, r1
     750:	f0 dd       	rcall	.-1056   	; 0x332 <radio_recv>
     752:	08 2f       	mov	r16, r24
     754:	8b 81       	ldd	r24, Y+3	; 0x03
     756:	88 23       	and	r24, r24
     758:	b1 f0       	breq	.+44     	; 0x786 <main+0xbc>
     75a:	a3 de       	rcall	.-698    	; 0x4a2 <radio_getid>
     75c:	2e 81       	ldd	r18, Y+6	; 0x06
     75e:	3f 81       	ldd	r19, Y+7	; 0x07
     760:	82 17       	cp	r24, r18
     762:	93 07       	cpc	r25, r19
     764:	39 f0       	breq	.+14     	; 0x774 <main+0xaa>
     766:	8f ef       	ldi	r24, 0xFF	; 255
     768:	2f 3f       	cpi	r18, 0xFF	; 255
     76a:	38 07       	cpc	r19, r24
     76c:	19 f0       	breq	.+6      	; 0x774 <main+0xaa>
     76e:	96 de       	rcall	.-724    	; 0x49c <radio_rx_all>
     770:	88 23       	and	r24, r24
     772:	49 f0       	breq	.+18     	; 0x786 <main+0xbc>
     774:	6c 81       	ldd	r22, Y+4	; 0x04
     776:	7d 81       	ldd	r23, Y+5	; 0x05
     778:	8e 81       	ldd	r24, Y+6	; 0x06
     77a:	9f 81       	ldd	r25, Y+7	; 0x07
     77c:	40 2f       	mov	r20, r16
     77e:	50 e0       	ldi	r21, 0x00	; 0
     780:	27 ee       	ldi	r18, 0xE7	; 231
     782:	32 e0       	ldi	r19, 0x02	; 2
     784:	5c d2       	rcall	.+1208   	; 0xc3e <application_radio_rx_msg>
     786:	a5 d0       	rcall	.+330    	; 0x8d2 <hw_timer_now_us>
     788:	dc 01       	movw	r26, r24
     78a:	cb 01       	movw	r24, r22
     78c:	40 91 ce 02 	lds	r20, 0x02CE
     790:	50 91 cf 02 	lds	r21, 0x02CF
     794:	60 91 d0 02 	lds	r22, 0x02D0
     798:	70 91 d1 02 	lds	r23, 0x02D1
     79c:	48 17       	cp	r20, r24
     79e:	59 07       	cpc	r21, r25
     7a0:	6a 07       	cpc	r22, r26
     7a2:	7b 07       	cpc	r23, r27
     7a4:	78 f5       	brcc	.+94     	; 0x804 <main+0x13a>
     7a6:	95 d0       	rcall	.+298    	; 0x8d2 <hw_timer_now_us>
     7a8:	dc 01       	movw	r26, r24
     7aa:	cb 01       	movw	r24, r22
     7ac:	88 51       	subi	r24, 0x18	; 24
     7ae:	9c 4f       	sbci	r25, 0xFC	; 252
     7b0:	af 4f       	sbci	r26, 0xFF	; 255
     7b2:	bf 4f       	sbci	r27, 0xFF	; 255
     7b4:	80 93 ce 02 	sts	0x02CE, r24
     7b8:	90 93 cf 02 	sts	0x02CF, r25
     7bc:	a0 93 d0 02 	sts	0x02D0, r26
     7c0:	b0 93 d1 02 	sts	0x02D1, r27
     7c4:	07 2d       	mov	r16, r7
     7c6:	16 2d       	mov	r17, r6
     7c8:	d8 01       	movw	r26, r16
     7ca:	8d 91       	ld	r24, X+
     7cc:	9d 91       	ld	r25, X+
     7ce:	8d 01       	movw	r16, r26
     7d0:	61 e0       	ldi	r22, 0x01	; 1
     7d2:	36 df       	rcall	.-404    	; 0x640 <os_timer_tick>
     7d4:	0a 15       	cp	r16, r10
     7d6:	1b 05       	cpc	r17, r11
     7d8:	b9 f7       	brne	.-18     	; 0x7c8 <main+0xfe>
     7da:	08 94       	sec
     7dc:	41 1c       	adc	r4, r1
     7de:	51 1c       	adc	r5, r1
     7e0:	b8 ee       	ldi	r27, 0xE8	; 232
     7e2:	4b 16       	cp	r4, r27
     7e4:	b3 e0       	ldi	r27, 0x03	; 3
     7e6:	5b 06       	cpc	r5, r27
     7e8:	68 f0       	brcs	.+26     	; 0x804 <main+0x13a>
     7ea:	07 2d       	mov	r16, r7
     7ec:	16 2d       	mov	r17, r6
     7ee:	f8 01       	movw	r30, r16
     7f0:	81 91       	ld	r24, Z+
     7f2:	91 91       	ld	r25, Z+
     7f4:	8f 01       	movw	r16, r30
     7f6:	60 e0       	ldi	r22, 0x00	; 0
     7f8:	23 df       	rcall	.-442    	; 0x640 <os_timer_tick>
     7fa:	a0 16       	cp	r10, r16
     7fc:	b1 06       	cpc	r11, r17
     7fe:	b9 f7       	brne	.-18     	; 0x7ee <main+0x124>
     800:	44 24       	eor	r4, r4
     802:	55 24       	eor	r5, r5
     804:	a7 2d       	mov	r26, r7
     806:	b6 2d       	mov	r27, r6
     808:	00 e0       	ldi	r16, 0x00	; 0
     80a:	10 e0       	ldi	r17, 0x00	; 0
     80c:	ed 91       	ld	r30, X+
     80e:	fd 91       	ld	r31, X+
     810:	30 97       	sbiw	r30, 0x00	; 0
     812:	71 f1       	breq	.+92     	; 0x870 <main+0x1a6>
     814:	83 81       	ldd	r24, Z+3	; 0x03
     816:	88 23       	and	r24, r24
     818:	59 f1       	breq	.+86     	; 0x870 <main+0x1a6>
     81a:	cf 01       	movw	r24, r30
     81c:	f1 d1       	rcall	.+994    	; 0xc00 <application_timer_tick>
     81e:	c8 01       	movw	r24, r16
     820:	88 0f       	add	r24, r24
     822:	99 1f       	adc	r25, r25
     824:	88 0d       	add	r24, r8
     826:	99 1d       	adc	r25, r9
     828:	dc 01       	movw	r26, r24
     82a:	ed 91       	ld	r30, X+
     82c:	fc 91       	ld	r31, X
     82e:	11 97       	sbiw	r26, 0x01	; 1
     830:	13 82       	std	Z+3, r1	; 0x03
     832:	81 81       	ldd	r24, Z+1	; 0x01
     834:	88 23       	and	r24, r24
     836:	41 f0       	breq	.+16     	; 0x848 <main+0x17e>
     838:	86 81       	ldd	r24, Z+6	; 0x06
     83a:	97 81       	ldd	r25, Z+7	; 0x07
     83c:	00 97       	sbiw	r24, 0x00	; 0
     83e:	21 f0       	breq	.+8      	; 0x848 <main+0x17e>
     840:	91 87       	std	Z+9, r25	; 0x09
     842:	80 87       	std	Z+8, r24	; 0x08
     844:	81 e0       	ldi	r24, 0x01	; 1
     846:	80 83       	st	Z, r24
     848:	11 82       	std	Z+1, r1	; 0x01
     84a:	8c dc       	rcall	.-1768   	; 0x164 <button_pressed>
     84c:	88 23       	and	r24, r24
     84e:	31 f0       	breq	.+12     	; 0x85c <main+0x192>
     850:	33 20       	and	r3, r3
     852:	21 f4       	brne	.+8      	; 0x85c <main+0x192>
     854:	27 d3       	rcall	.+1614   	; 0xea4 <application_button_pressed>
     856:	33 24       	eor	r3, r3
     858:	33 94       	inc	r3
     85a:	5d cf       	rjmp	.-326    	; 0x716 <main+0x4c>
     85c:	87 dc       	rcall	.-1778   	; 0x16c <button_released>
     85e:	88 23       	and	r24, r24
     860:	09 f4       	brne	.+2      	; 0x864 <main+0x19a>
     862:	59 cf       	rjmp	.-334    	; 0x716 <main+0x4c>
     864:	33 20       	and	r3, r3
     866:	09 f4       	brne	.+2      	; 0x86a <main+0x1a0>
     868:	56 cf       	rjmp	.-340    	; 0x716 <main+0x4c>
     86a:	86 d3       	rcall	.+1804   	; 0xf78 <application_button_released>
     86c:	33 24       	eor	r3, r3
     86e:	53 cf       	rjmp	.-346    	; 0x716 <main+0x4c>
     870:	0f 5f       	subi	r16, 0xFF	; 255
     872:	1f 4f       	sbci	r17, 0xFF	; 255
     874:	0a 30       	cpi	r16, 0x0A	; 10
     876:	11 05       	cpc	r17, r1
     878:	49 f6       	brne	.-110    	; 0x80c <main+0x142>
     87a:	e7 cf       	rjmp	.-50     	; 0x84a <main+0x180>

0000087c <hw_timer_cpuf>:
     87c:	60 e0       	ldi	r22, 0x00	; 0
     87e:	72 e1       	ldi	r23, 0x12	; 18
     880:	8a e7       	ldi	r24, 0x7A	; 122
     882:	90 e0       	ldi	r25, 0x00	; 0
     884:	08 95       	ret

00000886 <hw_timer_init>:
     886:	10 92 80 00 	sts	0x0080, r1
     88a:	81 e0       	ldi	r24, 0x01	; 1
     88c:	80 93 81 00 	sts	0x0081, r24
     890:	10 92 82 00 	sts	0x0082, r1
     894:	10 92 85 00 	sts	0x0085, r1
     898:	10 92 84 00 	sts	0x0084, r1
     89c:	10 92 6f 00 	sts	0x006F, r1
     8a0:	08 95       	ret

000008a2 <hw_timer_start>:
     8a2:	cf 93       	push	r28
     8a4:	df 93       	push	r29
     8a6:	ec 01       	movw	r28, r24
     8a8:	ee df       	rcall	.-36     	; 0x886 <hw_timer_init>
     8aa:	d0 93 85 00 	sts	0x0085, r29
     8ae:	c0 93 84 00 	sts	0x0084, r28
     8b2:	df 91       	pop	r29
     8b4:	cf 91       	pop	r28
     8b6:	08 95       	ret

000008b8 <hw_timer_overflow>:
     8b8:	81 e0       	ldi	r24, 0x01	; 1
     8ba:	b0 9b       	sbis	0x16, 0	; 22
     8bc:	80 e0       	ldi	r24, 0x00	; 0
     8be:	88 23       	and	r24, r24
     8c0:	11 f0       	breq	.+4      	; 0x8c6 <hw_timer_overflow+0xe>
     8c2:	91 e0       	ldi	r25, 0x01	; 1
     8c4:	96 bb       	out	0x16, r25	; 22
     8c6:	08 95       	ret

000008c8 <hw_timer_now>:
     8c8:	80 91 84 00 	lds	r24, 0x0084
     8cc:	90 91 85 00 	lds	r25, 0x0085
     8d0:	08 95       	ret

000008d2 <hw_timer_now_us>:
     8d2:	cf 92       	push	r12
     8d4:	df 92       	push	r13
     8d6:	ef 92       	push	r14
     8d8:	ff 92       	push	r15
     8da:	c0 90 84 00 	lds	r12, 0x0084
     8de:	d0 90 85 00 	lds	r13, 0x0085
     8e2:	d6 94       	lsr	r13
     8e4:	c7 94       	ror	r12
     8e6:	d6 94       	lsr	r13
     8e8:	c7 94       	ror	r12
     8ea:	d6 94       	lsr	r13
     8ec:	c7 94       	ror	r12
     8ee:	ee 24       	eor	r14, r14
     8f0:	ff 24       	eor	r15, r15
     8f2:	e2 df       	rcall	.-60     	; 0x8b8 <hw_timer_overflow>
     8f4:	88 23       	and	r24, r24
     8f6:	a1 f0       	breq	.+40     	; 0x920 <hw_timer_now_us+0x4e>
     8f8:	80 91 67 03 	lds	r24, 0x0367
     8fc:	90 91 68 03 	lds	r25, 0x0368
     900:	a0 91 69 03 	lds	r26, 0x0369
     904:	b0 91 6a 03 	lds	r27, 0x036A
     908:	80 50       	subi	r24, 0x00	; 0
     90a:	90 4e       	sbci	r25, 0xE0	; 224
     90c:	af 4f       	sbci	r26, 0xFF	; 255
     90e:	bf 4f       	sbci	r27, 0xFF	; 255
     910:	80 93 67 03 	sts	0x0367, r24
     914:	90 93 68 03 	sts	0x0368, r25
     918:	a0 93 69 03 	sts	0x0369, r26
     91c:	b0 93 6a 03 	sts	0x036A, r27
     920:	80 91 67 03 	lds	r24, 0x0367
     924:	90 91 68 03 	lds	r25, 0x0368
     928:	a0 91 69 03 	lds	r26, 0x0369
     92c:	b0 91 6a 03 	lds	r27, 0x036A
     930:	c8 0e       	add	r12, r24
     932:	d9 1e       	adc	r13, r25
     934:	ea 1e       	adc	r14, r26
     936:	fb 1e       	adc	r15, r27
     938:	6c 2d       	mov	r22, r12
     93a:	7d 2d       	mov	r23, r13
     93c:	8e 2d       	mov	r24, r14
     93e:	9f 2d       	mov	r25, r15
     940:	ff 90       	pop	r15
     942:	ef 90       	pop	r14
     944:	df 90       	pop	r13
     946:	cf 90       	pop	r12
     948:	08 95       	ret

0000094a <hw_timer_wait_micro>:
     94a:	8f 92       	push	r8
     94c:	9f 92       	push	r9
     94e:	af 92       	push	r10
     950:	bf 92       	push	r11
     952:	cf 92       	push	r12
     954:	df 92       	push	r13
     956:	ef 92       	push	r14
     958:	ff 92       	push	r15
     95a:	4c 01       	movw	r8, r24
     95c:	aa 24       	eor	r10, r10
     95e:	bb 24       	eor	r11, r11
     960:	88 0c       	add	r8, r8
     962:	99 1c       	adc	r9, r9
     964:	aa 1c       	adc	r10, r10
     966:	bb 1c       	adc	r11, r11
     968:	88 0c       	add	r8, r8
     96a:	99 1c       	adc	r9, r9
     96c:	aa 1c       	adc	r10, r10
     96e:	bb 1c       	adc	r11, r11
     970:	88 0c       	add	r8, r8
     972:	99 1c       	adc	r9, r9
     974:	aa 1c       	adc	r10, r10
     976:	bb 1c       	adc	r11, r11
     978:	80 e0       	ldi	r24, 0x00	; 0
     97a:	88 16       	cp	r8, r24
     97c:	80 e0       	ldi	r24, 0x00	; 0
     97e:	98 06       	cpc	r9, r24
     980:	81 e0       	ldi	r24, 0x01	; 1
     982:	a8 06       	cpc	r10, r24
     984:	80 e0       	ldi	r24, 0x00	; 0
     986:	b8 06       	cpc	r11, r24
     988:	78 f1       	brcs	.+94     	; 0x9e8 <hw_timer_wait_micro+0x9e>
     98a:	75 01       	movw	r14, r10
     98c:	64 01       	movw	r12, r8
     98e:	80 e0       	ldi	r24, 0x00	; 0
     990:	90 e0       	ldi	r25, 0x00	; 0
     992:	87 df       	rcall	.-242    	; 0x8a2 <hw_timer_start>
     994:	80 e0       	ldi	r24, 0x00	; 0
     996:	90 e0       	ldi	r25, 0x00	; 0
     998:	af ef       	ldi	r26, 0xFF	; 255
     99a:	bf ef       	ldi	r27, 0xFF	; 255
     99c:	c8 0e       	add	r12, r24
     99e:	d9 1e       	adc	r13, r25
     9a0:	ea 1e       	adc	r14, r26
     9a2:	fb 1e       	adc	r15, r27
     9a4:	89 df       	rcall	.-238    	; 0x8b8 <hw_timer_overflow>
     9a6:	88 23       	and	r24, r24
     9a8:	e9 f3       	breq	.-6      	; 0x9a4 <hw_timer_wait_micro+0x5a>
     9aa:	90 e0       	ldi	r25, 0x00	; 0
     9ac:	c9 16       	cp	r12, r25
     9ae:	90 e0       	ldi	r25, 0x00	; 0
     9b0:	d9 06       	cpc	r13, r25
     9b2:	91 e0       	ldi	r25, 0x01	; 1
     9b4:	e9 06       	cpc	r14, r25
     9b6:	90 e0       	ldi	r25, 0x00	; 0
     9b8:	f9 06       	cpc	r15, r25
     9ba:	48 f7       	brcc	.-46     	; 0x98e <hw_timer_wait_micro+0x44>
     9bc:	80 e0       	ldi	r24, 0x00	; 0
     9be:	90 e0       	ldi	r25, 0x00	; 0
     9c0:	af ef       	ldi	r26, 0xFF	; 255
     9c2:	bf ef       	ldi	r27, 0xFF	; 255
     9c4:	88 0e       	add	r8, r24
     9c6:	99 1e       	adc	r9, r25
     9c8:	aa 1e       	adc	r10, r26
     9ca:	bb 1e       	adc	r11, r27
     9cc:	b5 01       	movw	r22, r10
     9ce:	88 27       	eor	r24, r24
     9d0:	99 27       	eor	r25, r25
     9d2:	20 e0       	ldi	r18, 0x00	; 0
     9d4:	30 e0       	ldi	r19, 0x00	; 0
     9d6:	4f ef       	ldi	r20, 0xFF	; 255
     9d8:	5f ef       	ldi	r21, 0xFF	; 255
     9da:	cf d2       	rcall	.+1438   	; 0xf7a <__mulsi3>
     9dc:	dc 01       	movw	r26, r24
     9de:	cb 01       	movw	r24, r22
     9e0:	88 0e       	add	r8, r24
     9e2:	99 1e       	adc	r9, r25
     9e4:	aa 1e       	adc	r10, r26
     9e6:	bb 1e       	adc	r11, r27
     9e8:	c4 01       	movw	r24, r8
     9ea:	80 95       	com	r24
     9ec:	90 95       	com	r25
     9ee:	59 df       	rcall	.-334    	; 0x8a2 <hw_timer_start>
     9f0:	63 df       	rcall	.-314    	; 0x8b8 <hw_timer_overflow>
     9f2:	88 23       	and	r24, r24
     9f4:	e9 f3       	breq	.-6      	; 0x9f0 <hw_timer_wait_micro+0xa6>
     9f6:	ff 90       	pop	r15
     9f8:	ef 90       	pop	r14
     9fa:	df 90       	pop	r13
     9fc:	cf 90       	pop	r12
     9fe:	bf 90       	pop	r11
     a00:	af 90       	pop	r10
     a02:	9f 90       	pop	r9
     a04:	8f 90       	pop	r8
     a06:	08 95       	ret

00000a08 <hw_timer_wait_milli>:
     a08:	cf 93       	push	r28
     a0a:	df 93       	push	r29
     a0c:	ec 01       	movw	r28, r24
     a0e:	82 34       	cpi	r24, 0x42	; 66
     a10:	91 05       	cpc	r25, r1
     a12:	40 f0       	brcs	.+16     	; 0xa24 <hw_timer_wait_milli+0x1c>
     a14:	88 ee       	ldi	r24, 0xE8	; 232
     a16:	9d ef       	ldi	r25, 0xFD	; 253
     a18:	98 df       	rcall	.-208    	; 0x94a <hw_timer_wait_micro>
     a1a:	c1 54       	subi	r28, 0x41	; 65
     a1c:	d0 40       	sbci	r29, 0x00	; 0
     a1e:	c2 34       	cpi	r28, 0x42	; 66
     a20:	d1 05       	cpc	r29, r1
     a22:	c0 f7       	brcc	.-16     	; 0xa14 <hw_timer_wait_milli+0xc>
     a24:	ce 01       	movw	r24, r28
     a26:	91 df       	rcall	.-222    	; 0x94a <hw_timer_wait_micro>
     a28:	df 91       	pop	r29
     a2a:	cf 91       	pop	r28
     a2c:	08 95       	ret

00000a2e <encrypt>:
     a2e:	80 91 3c 01 	lds	r24, 0x013C
     a32:	80 93 79 03 	sts	0x0379, r24
     a36:	10 92 fb 03 	sts	0x03FB, r1
     a3a:	10 92 fa 03 	sts	0x03FA, r1
     a3e:	80 e0       	ldi	r24, 0x00	; 0

void encrypt(){
	// reset AES pointers
	temp=AES_CTRL;

	for (i=0; i<16; i++)
     a40:	90 e0       	ldi	r25, 0x00	; 0
	AES_KEY = aesKey[i];
     a42:	ef e3       	ldi	r30, 0x3F	; 63
     a44:	f1 e0       	ldi	r31, 0x01	; 1
     a46:	dc 01       	movw	r26, r24
     a48:	a1 5f       	subi	r26, 0xF1	; 241
     a4a:	bd 4f       	sbci	r27, 0xFD	; 253
     a4c:	8c 91       	ld	r24, X
     a4e:	80 83       	st	Z, r24

void encrypt(){
	// reset AES pointers
	temp=AES_CTRL;

	for (i=0; i<16; i++)
     a50:	80 91 fa 03 	lds	r24, 0x03FA
     a54:	90 91 fb 03 	lds	r25, 0x03FB
     a58:	01 96       	adiw	r24, 0x01	; 1
     a5a:	90 93 fb 03 	sts	0x03FB, r25
     a5e:	80 93 fa 03 	sts	0x03FA, r24
     a62:	80 31       	cpi	r24, 0x10	; 16
     a64:	91 05       	cpc	r25, r1
     a66:	78 f3       	brcs	.-34     	; 0xa46 <encrypt+0x18>
	AES_KEY = aesKey[i];

	// set mode=encrypt
	AES_CTRL = 0;
     a68:	10 92 3c 01 	sts	0x013C, r1

	// write data - must be 16 bytes
	for (i=0; i<16; i++)
     a6c:	10 92 fb 03 	sts	0x03FB, r1
     a70:	10 92 fa 03 	sts	0x03FA, r1
     a74:	e0 e0       	ldi	r30, 0x00	; 0
     a76:	f0 e0       	ldi	r31, 0x00	; 0
	AES_STATE = plaintext[i];
     a78:	ae e3       	ldi	r26, 0x3E	; 62
     a7a:	b1 e0       	ldi	r27, 0x01	; 1
     a7c:	ef 5b       	subi	r30, 0xBF	; 191
     a7e:	fd 4f       	sbci	r31, 0xFD	; 253
     a80:	80 81       	ld	r24, Z
     a82:	8c 93       	st	X, r24

	// set mode=encrypt
	AES_CTRL = 0;

	// write data - must be 16 bytes
	for (i=0; i<16; i++)
     a84:	80 91 fa 03 	lds	r24, 0x03FA
     a88:	90 91 fb 03 	lds	r25, 0x03FB
     a8c:	01 96       	adiw	r24, 0x01	; 1
     a8e:	90 93 fb 03 	sts	0x03FB, r25
     a92:	80 93 fa 03 	sts	0x03FA, r24
     a96:	80 31       	cpi	r24, 0x10	; 16
     a98:	91 05       	cpc	r25, r1
     a9a:	10 f4       	brcc	.+4      	; 0xaa0 <encrypt+0x72>
     a9c:	fc 01       	movw	r30, r24
     a9e:	ee cf       	rjmp	.-36     	; 0xa7c <encrypt+0x4e>
	AES_STATE = plaintext[i];

	// start operation - with ECB encrypt no interrupts
	AES_CTRL = (1<<AES_REQUEST);
     aa0:	80 e8       	ldi	r24, 0x80	; 128
     aa2:	80 93 3c 01 	sts	0x013C, r24

	// poll for completion
	unsigned char c0=0;
	while (!AES_STATUS_struct.aes_done) c0++;
     aa6:	ed e3       	ldi	r30, 0x3D	; 61
     aa8:	f1 e0       	ldi	r31, 0x01	; 1
     aaa:	80 81       	ld	r24, Z
     aac:	80 ff       	sbrs	r24, 0
     aae:	fd cf       	rjmp	.-6      	; 0xaaa <encrypt+0x7c>
	//printf("   Loops to done=%d\n\r", c0);

	// read data
	for (i=0; i<16; i++)
     ab0:	10 92 fb 03 	sts	0x03FB, r1
     ab4:	10 92 fa 03 	sts	0x03FA, r1
     ab8:	ef e1       	ldi	r30, 0x1F	; 31
     aba:	f2 e0       	ldi	r31, 0x02	; 2
     abc:	af 01       	movw	r20, r30
     abe:	2f e2       	ldi	r18, 0x2F	; 47
     ac0:	32 e0       	ldi	r19, 0x02	; 2
	crypto[i] = AES_STATE;
     ac2:	ae e3       	ldi	r26, 0x3E	; 62
     ac4:	b1 e0       	ldi	r27, 0x01	; 1
     ac6:	8c 91       	ld	r24, X
     ac8:	81 93       	st	Z+, r24
     aca:	cf 01       	movw	r24, r30
     acc:	84 1b       	sub	r24, r20
     ace:	95 0b       	sbc	r25, r21
	unsigned char c0=0;
	while (!AES_STATUS_struct.aes_done) c0++;
	//printf("   Loops to done=%d\n\r", c0);

	// read data
	for (i=0; i<16; i++)
     ad0:	90 93 fb 03 	sts	0x03FB, r25
     ad4:	80 93 fa 03 	sts	0x03FA, r24
     ad8:	e2 17       	cp	r30, r18
     ada:	f3 07       	cpc	r31, r19
     adc:	a1 f7       	brne	.-24     	; 0xac6 <encrypt+0x98>
	crypto[i] = AES_STATE;
	
	// read key for decryption
	for (i=0; i<16; i++)
     ade:	10 92 fb 03 	sts	0x03FB, r1
     ae2:	10 92 fa 03 	sts	0x03FA, r1
     ae6:	ef e0       	ldi	r30, 0x0F	; 15
     ae8:	f2 e0       	ldi	r31, 0x02	; 2
     aea:	af 01       	movw	r20, r30
     aec:	2f e1       	ldi	r18, 0x1F	; 31
     aee:	32 e0       	ldi	r19, 0x02	; 2
	aesKey[i] = AES_KEY;
     af0:	af e3       	ldi	r26, 0x3F	; 63
     af2:	b1 e0       	ldi	r27, 0x01	; 1
     af4:	8c 91       	ld	r24, X
     af6:	81 93       	st	Z+, r24
     af8:	cf 01       	movw	r24, r30
     afa:	84 1b       	sub	r24, r20
     afc:	95 0b       	sbc	r25, r21
	// read data
	for (i=0; i<16; i++)
	crypto[i] = AES_STATE;
	
	// read key for decryption
	for (i=0; i<16; i++)
     afe:	90 93 fb 03 	sts	0x03FB, r25
     b02:	80 93 fa 03 	sts	0x03FA, r24
     b06:	e2 17       	cp	r30, r18
     b08:	f3 07       	cpc	r31, r19
     b0a:	a1 f7       	brne	.-24     	; 0xaf4 <encrypt+0xc6>

	// print encrypted text
	/*printf("   cryptotext=");
	for (i=0; i<16; i++) printf(" %02x", crypto[i]);
	printf("\n\r");*/
	crypto[16] = '\0';
     b0c:	10 92 2f 02 	sts	0x022F, r1
     b10:	08 95       	ret

00000b12 <decryptMeth>:
}

void decryptMeth(){
	// read ctrl to reset pointers
	temp=AES_CTRL;
     b12:	80 91 3c 01 	lds	r24, 0x013C
     b16:	80 93 79 03 	sts	0x0379, r24

	// rewrite key
	for (i=0; i<16; i++)
     b1a:	10 92 fb 03 	sts	0x03FB, r1
     b1e:	10 92 fa 03 	sts	0x03FA, r1
     b22:	80 e0       	ldi	r24, 0x00	; 0
     b24:	90 e0       	ldi	r25, 0x00	; 0
	AES_KEY = aesKey[i];
     b26:	ef e3       	ldi	r30, 0x3F	; 63
     b28:	f1 e0       	ldi	r31, 0x01	; 1
     b2a:	dc 01       	movw	r26, r24
     b2c:	a1 5f       	subi	r26, 0xF1	; 241
     b2e:	bd 4f       	sbci	r27, 0xFD	; 253
     b30:	8c 91       	ld	r24, X
     b32:	80 83       	st	Z, r24
void decryptMeth(){
	// read ctrl to reset pointers
	temp=AES_CTRL;

	// rewrite key
	for (i=0; i<16; i++)
     b34:	80 91 fa 03 	lds	r24, 0x03FA
     b38:	90 91 fb 03 	lds	r25, 0x03FB
     b3c:	01 96       	adiw	r24, 0x01	; 1
     b3e:	90 93 fb 03 	sts	0x03FB, r25
     b42:	80 93 fa 03 	sts	0x03FA, r24
     b46:	80 31       	cpi	r24, 0x10	; 16
     b48:	91 05       	cpc	r25, r1
     b4a:	78 f3       	brcs	.-34     	; 0xb2a <decryptMeth+0x18>
	AES_KEY = aesKey[i];

	// set mode=decrypt
	AES_CTRL = (1<<AES_DIR);
     b4c:	88 e0       	ldi	r24, 0x08	; 8
     b4e:	80 93 3c 01 	sts	0x013C, r24

	// write crypto text
	for (i=0; i<16; i++)
     b52:	10 92 fb 03 	sts	0x03FB, r1
     b56:	10 92 fa 03 	sts	0x03FA, r1
     b5a:	e0 e0       	ldi	r30, 0x00	; 0
     b5c:	f0 e0       	ldi	r31, 0x00	; 0
	AES_STATE = crypto[i];
     b5e:	ae e3       	ldi	r26, 0x3E	; 62
     b60:	b1 e0       	ldi	r27, 0x01	; 1
     b62:	e1 5e       	subi	r30, 0xE1	; 225
     b64:	fd 4f       	sbci	r31, 0xFD	; 253
     b66:	80 81       	ld	r24, Z
     b68:	8c 93       	st	X, r24

	// set mode=decrypt
	AES_CTRL = (1<<AES_DIR);

	// write crypto text
	for (i=0; i<16; i++)
     b6a:	80 91 fa 03 	lds	r24, 0x03FA
     b6e:	90 91 fb 03 	lds	r25, 0x03FB
     b72:	01 96       	adiw	r24, 0x01	; 1
     b74:	90 93 fb 03 	sts	0x03FB, r25
     b78:	80 93 fa 03 	sts	0x03FA, r24
     b7c:	80 31       	cpi	r24, 0x10	; 16
     b7e:	91 05       	cpc	r25, r1
     b80:	10 f4       	brcc	.+4      	; 0xb86 <decryptMeth+0x74>
     b82:	fc 01       	movw	r30, r24
     b84:	ee cf       	rjmp	.-36     	; 0xb62 <decryptMeth+0x50>
	AES_STATE = crypto[i];

	// start operation - ECB decrypt with no interrupts
	AES_CTRL = (1<<AES_REQUEST) | (1<<AES_DIR);
     b86:	88 e8       	ldi	r24, 0x88	; 136
     b88:	80 93 3c 01 	sts	0x013C, r24

	// poll for completion
	while (!AES_STATUS_struct.aes_done);
     b8c:	ed e3       	ldi	r30, 0x3D	; 61
     b8e:	f1 e0       	ldi	r31, 0x01	; 1
     b90:	80 81       	ld	r24, Z
     b92:	80 ff       	sbrs	r24, 0
     b94:	fd cf       	rjmp	.-6      	; 0xb90 <decryptMeth+0x7e>

	// read data
	for (i=0; i<16; i++)
     b96:	10 92 fb 03 	sts	0x03FB, r1
     b9a:	10 92 fa 03 	sts	0x03FA, r1
     b9e:	e0 e3       	ldi	r30, 0x30	; 48
     ba0:	f2 e0       	ldi	r31, 0x02	; 2
     ba2:	af 01       	movw	r20, r30
     ba4:	20 e4       	ldi	r18, 0x40	; 64
     ba6:	32 e0       	ldi	r19, 0x02	; 2
	decrypt[i] = AES_STATE;
     ba8:	ae e3       	ldi	r26, 0x3E	; 62
     baa:	b1 e0       	ldi	r27, 0x01	; 1
     bac:	8c 91       	ld	r24, X
     bae:	81 93       	st	Z+, r24
     bb0:	cf 01       	movw	r24, r30
     bb2:	84 1b       	sub	r24, r20
     bb4:	95 0b       	sbc	r25, r21

	// poll for completion
	while (!AES_STATUS_struct.aes_done);

	// read data
	for (i=0; i<16; i++)
     bb6:	90 93 fb 03 	sts	0x03FB, r25
     bba:	80 93 fa 03 	sts	0x03FA, r24
     bbe:	e2 17       	cp	r30, r18
     bc0:	f3 07       	cpc	r31, r19
     bc2:	a1 f7       	brne	.-24     	; 0xbac <decryptMeth+0x9a>
	decrypt[i] = AES_STATE;
	
	// and printout
	//printf("   Decrypted plaintext=\"%s\"\n\r", decrypt);
}
     bc4:	08 95       	ret

00000bc6 <application_start>:

void application_start()
{
	leds_init();
     bc6:	d6 da       	rcall	.-2644   	; 0x174 <leds_init>
	button_init();
     bc8:	ca da       	rcall	.-2668   	; 0x15e <button_init>
	radio_init(NODE_ID, false);
     bca:	60 e0       	ldi	r22, 0x00	; 0
     bcc:	81 e0       	ldi	r24, 0x01	; 1
     bce:	90 e0       	ldi	r25, 0x00	; 0
     bd0:	f0 da       	rcall	.-2592   	; 0x1b2 <radio_init>
	radio_set_power(1);
     bd2:	81 e0       	ldi	r24, 0x01	; 1
     bd4:	46 dc       	rcall	.-1908   	; 0x462 <radio_set_power>
	radio_start();
     bd6:	2b db       	rcall	.-2474   	; 0x22e <radio_start>
	serial_init(9600);
     bd8:	60 e8       	ldi	r22, 0x80	; 128
     bda:	75 e2       	ldi	r23, 0x25	; 37
     bdc:	80 e0       	ldi	r24, 0x00	; 0
     bde:	90 e0       	ldi	r25, 0x00	; 0
     be0:	65 dc       	rcall	.-1846   	; 0x4ac <serial_init>
	printf("test\r\n");
     be2:	84 e5       	ldi	r24, 0x54	; 84
     be4:	92 e0       	ldi	r25, 0x02	; 2
     be6:	68 d2       	rcall	.+1232   	; 0x10b8 <puts>
	
	timer_init(&timer1, TIMER_MILLISECONDS, 1000, 100);
     be8:	24 e6       	ldi	r18, 0x64	; 100
     bea:	30 e0       	ldi	r19, 0x00	; 0
     bec:	48 ee       	ldi	r20, 0xE8	; 232
     bee:	53 e0       	ldi	r21, 0x03	; 3
     bf0:	61 e0       	ldi	r22, 0x01	; 1
     bf2:	8d e6       	ldi	r24, 0x6D	; 109
     bf4:	93 e0       	ldi	r25, 0x03	; 3
     bf6:	4d dd       	rcall	.-1382   	; 0x692 <timer_init>
	timer_start(&timer1);
     bf8:	8d e6       	ldi	r24, 0x6D	; 109
     bfa:	93 e0       	ldi	r25, 0x03	; 3
     bfc:	54 cd       	rjmp	.-1368   	; 0x6a6 <timer_start>
     bfe:	08 95       	ret

00000c00 <application_timer_tick>:
// Timer tick handler
//
void application_timer_tick(timer *t)
{
	//printf("in timer\r\n");
	if(canSend){
     c00:	80 91 6b 03 	lds	r24, 0x036B
     c04:	88 23       	and	r24, r24
     c06:	d1 f0       	breq	.+52     	; 0xc3c <application_timer_tick+0x3c>
		if(tx_buffer_inuse == false)
     c08:	80 91 6c 03 	lds	r24, 0x036C
     c0c:	81 11       	cpse	r24, r1
     c0e:	16 c0       	rjmp	.+44     	; 0xc3c <application_timer_tick+0x3c>
		{
			tx_buffer_inuse = true;
     c10:	81 e0       	ldi	r24, 0x01	; 1
     c12:	80 93 6c 03 	sts	0x036C, r24
			canSend = false;
     c16:	10 92 6b 03 	sts	0x036B, r1
			
			memcpy(&tx_buffer, &newPkt, sizeof(Packet));
     c1a:	85 e1       	ldi	r24, 0x15	; 21
     c1c:	ec ef       	ldi	r30, 0xFC	; 252
     c1e:	f3 e0       	ldi	r31, 0x03	; 3
     c20:	aa e7       	ldi	r26, 0x7A	; 122
     c22:	b3 e0       	ldi	r27, 0x03	; 3
     c24:	01 90       	ld	r0, Z+
     c26:	0d 92       	st	X+, r0
     c28:	8a 95       	dec	r24
     c2a:	e1 f7       	brne	.-8      	; 0xc24 <application_timer_tick+0x24>
			//printf("Data: %s\r\n", newPkt.dt);
			radio_send(tx_buffer, sizeof(Packet), newPkt.dst);
     c2c:	40 91 fc 03 	lds	r20, 0x03FC
     c30:	50 91 fd 03 	lds	r21, 0x03FD
     c34:	65 e1       	ldi	r22, 0x15	; 21
     c36:	8a e7       	ldi	r24, 0x7A	; 122
     c38:	93 e0       	ldi	r25, 0x03	; 3
     c3a:	10 cb       	rjmp	.-2528   	; 0x25c <radio_send>
     c3c:	08 95       	ret

00000c3e <application_radio_rx_msg>:
//
// This function is called whenever a radio message is received
// You must copy any data you need out of the packet - as 'msgdata' will be overwritten by the next message
//
void application_radio_rx_msg(unsigned short dst, unsigned short src, int len, unsigned char *msgdata)
{
     c3e:	ef 92       	push	r14
     c40:	ff 92       	push	r15
     c42:	0f 93       	push	r16
     c44:	1f 93       	push	r17
     c46:	cf 93       	push	r28
     c48:	df 93       	push	r29
     c4a:	cd b7       	in	r28, 0x3d	; 61
     c4c:	de b7       	in	r29, 0x3e	; 62
     c4e:	61 97       	sbiw	r28, 0x11	; 17
     c50:	0f b6       	in	r0, 0x3f	; 63
     c52:	f8 94       	cli
     c54:	de bf       	out	0x3e, r29	; 62
     c56:	0f be       	out	0x3f, r0	; 63
     c58:	cd bf       	out	0x3d, r28	; 61
     c5a:	8b 01       	movw	r16, r22
	//printf("received a message\r\n");
	char string[17];
	for(int i = 4; i<len; i++)
     c5c:	45 30       	cpi	r20, 0x05	; 5
     c5e:	51 05       	cpc	r21, r1
     c60:	5c f0       	brlt	.+22     	; 0xc78 <application_radio_rx_msg+0x3a>
     c62:	f9 01       	movw	r30, r18
     c64:	34 96       	adiw	r30, 0x04	; 4
     c66:	de 01       	movw	r26, r28
     c68:	11 96       	adiw	r26, 0x01	; 1
     c6a:	24 0f       	add	r18, r20
     c6c:	35 1f       	adc	r19, r21
	{
		//printf("%c", msgdata[i]);
		string[i-4] = msgdata[i];
     c6e:	81 91       	ld	r24, Z+
     c70:	8d 93       	st	X+, r24
//
void application_radio_rx_msg(unsigned short dst, unsigned short src, int len, unsigned char *msgdata)
{
	//printf("received a message\r\n");
	char string[17];
	for(int i = 4; i<len; i++)
     c72:	e2 17       	cp	r30, r18
     c74:	f3 07       	cpc	r31, r19
     c76:	d9 f7       	brne	.-10     	; 0xc6e <application_radio_rx_msg+0x30>
	{
		//printf("%c", msgdata[i]);
		string[i-4] = msgdata[i];
	}
	string[16] = '\0';
     c78:	19 8a       	std	Y+17, r1	; 0x11

	encrypt();
     c7a:	d9 de       	rcall	.-590    	; 0xa2e <encrypt>
     c7c:	fe 01       	movw	r30, r28
     c7e:	31 96       	adiw	r30, 0x01	; 1
     c80:	ce 01       	movw	r24, r28
     c82:	42 96       	adiw	r24, 0x12	; 18
     c84:	af e1       	ldi	r26, 0x1F	; 31
     c86:	b2 e0       	ldi	r27, 0x02	; 2
	//put string into plaintext
	//sprintf(crypto, string);
	for(int i=0;i<17;i++){
		crypto[i] = string[i];
     c88:	21 91       	ld	r18, Z+
     c8a:	2d 93       	st	X+, r18
	string[16] = '\0';

	encrypt();
	//put string into plaintext
	//sprintf(crypto, string);
	for(int i=0;i<17;i++){
     c8c:	e8 17       	cp	r30, r24
     c8e:	f9 07       	cpc	r31, r25
     c90:	d9 f7       	brne	.-10     	; 0xc88 <application_radio_rx_msg+0x4a>
		crypto[i] = string[i];
	}
	//decrypt plaintext
	decryptMeth();
     c92:	3f df       	rcall	.-386    	; 0xb12 <decryptMeth>
	printf("cryptotext=");
     c94:	8a e5       	ldi	r24, 0x5A	; 90
     c96:	92 e0       	ldi	r25, 0x02	; 2
     c98:	9f 93       	push	r25
     c9a:	8f 93       	push	r24
     c9c:	fc d1       	rcall	.+1016   	; 0x1096 <printf>
	for (i=0; i<16; i++) printf(" %02x", crypto[i]);
     c9e:	10 92 fb 03 	sts	0x03FB, r1
     ca2:	10 92 fa 03 	sts	0x03FA, r1
     ca6:	0f 90       	pop	r0
     ca8:	0f 90       	pop	r0
     caa:	80 e0       	ldi	r24, 0x00	; 0
     cac:	90 e0       	ldi	r25, 0x00	; 0
     cae:	0f 2e       	mov	r0, r31
     cb0:	f6 e6       	ldi	r31, 0x66	; 102
     cb2:	ef 2e       	mov	r14, r31
     cb4:	f2 e0       	ldi	r31, 0x02	; 2
     cb6:	ff 2e       	mov	r15, r31
     cb8:	f0 2d       	mov	r31, r0
     cba:	fc 01       	movw	r30, r24
     cbc:	e1 5e       	subi	r30, 0xE1	; 225
     cbe:	fd 4f       	sbci	r31, 0xFD	; 253
     cc0:	80 81       	ld	r24, Z
     cc2:	1f 92       	push	r1
     cc4:	8f 93       	push	r24
     cc6:	ff 92       	push	r15
     cc8:	ef 92       	push	r14
     cca:	e5 d1       	rcall	.+970    	; 0x1096 <printf>
     ccc:	80 91 fa 03 	lds	r24, 0x03FA
     cd0:	90 91 fb 03 	lds	r25, 0x03FB
     cd4:	01 96       	adiw	r24, 0x01	; 1
     cd6:	90 93 fb 03 	sts	0x03FB, r25
     cda:	80 93 fa 03 	sts	0x03FA, r24
     cde:	0f 90       	pop	r0
     ce0:	0f 90       	pop	r0
     ce2:	0f 90       	pop	r0
     ce4:	0f 90       	pop	r0
     ce6:	80 31       	cpi	r24, 0x10	; 16
     ce8:	91 05       	cpc	r25, r1
     cea:	38 f3       	brcs	.-50     	; 0xcba <application_radio_rx_msg+0x7c>
	printf("\r\n");
     cec:	88 e8       	ldi	r24, 0x88	; 136
     cee:	92 e0       	ldi	r25, 0x02	; 2
     cf0:	e3 d1       	rcall	.+966    	; 0x10b8 <puts>
	printf("   Decrypted plaintext=\"%s\"\n\r", decrypt);
     cf2:	80 e3       	ldi	r24, 0x30	; 48
     cf4:	92 e0       	ldi	r25, 0x02	; 2
     cf6:	9f 93       	push	r25
     cf8:	8f 93       	push	r24
     cfa:	8c e6       	ldi	r24, 0x6C	; 108
     cfc:	92 e0       	ldi	r25, 0x02	; 2
     cfe:	9f 93       	push	r25
     d00:	8f 93       	push	r24
     d02:	c9 d1       	rcall	.+914    	; 0x1096 <printf>
	if(strcmp(decrypt, "NACKNACKNACKNACK") == 0){
     d04:	6a e8       	ldi	r22, 0x8A	; 138
     d06:	72 e0       	ldi	r23, 0x02	; 2
     d08:	80 e3       	ldi	r24, 0x30	; 48
     d0a:	92 e0       	ldi	r25, 0x02	; 2
     d0c:	a6 d1       	rcall	.+844    	; 0x105a <strcmp>
     d0e:	0f 90       	pop	r0
     d10:	0f 90       	pop	r0
     d12:	0f 90       	pop	r0
     d14:	0f 90       	pop	r0
     d16:	89 2b       	or	r24, r25
     d18:	39 f4       	brne	.+14     	; 0xd28 <application_radio_rx_msg+0xea>
		//Uh oh.
		leds_off(LED_GREEN);
     d1a:	81 e0       	ldi	r24, 0x01	; 1
     d1c:	3e da       	rcall	.-2948   	; 0x19a <leds_off>
		leds_off(LED_ORANGE);
     d1e:	82 e0       	ldi	r24, 0x02	; 2
     d20:	3c da       	rcall	.-2952   	; 0x19a <leds_off>
		leds_on(LED_RED);
     d22:	83 e0       	ldi	r24, 0x03	; 3
     d24:	2e da       	rcall	.-2980   	; 0x182 <leds_on>
     d26:	7e c0       	rjmp	.+252    	; 0xe24 <application_radio_rx_msg+0x1e6>
	}
	else if(strcmp(decrypt, "ACKACKacACKACKac") == 0){
     d28:	6b e9       	ldi	r22, 0x9B	; 155
     d2a:	72 e0       	ldi	r23, 0x02	; 2
     d2c:	80 e3       	ldi	r24, 0x30	; 48
     d2e:	92 e0       	ldi	r25, 0x02	; 2
     d30:	94 d1       	rcall	.+808    	; 0x105a <strcmp>
     d32:	89 2b       	or	r24, r25
     d34:	39 f4       	brne	.+14     	; 0xd44 <application_radio_rx_msg+0x106>
		//Gate has opened.
		leds_off(LED_RED);
     d36:	83 e0       	ldi	r24, 0x03	; 3
     d38:	30 da       	rcall	.-2976   	; 0x19a <leds_off>
		leds_off(LED_ORANGE);
     d3a:	82 e0       	ldi	r24, 0x02	; 2
     d3c:	2e da       	rcall	.-2980   	; 0x19a <leds_off>
		leds_on(LED_GREEN);
     d3e:	81 e0       	ldi	r24, 0x01	; 1
     d40:	20 da       	rcall	.-3008   	; 0x182 <leds_on>
     d42:	70 c0       	rjmp	.+224    	; 0xe24 <application_radio_rx_msg+0x1e6>
	}
	else{
		//its a number TODO: only go in here if expecting a number (having already sent one out)
		//put plaintext into temp
		long temp1 = atol(decrypt); //should be atolu?
     d44:	80 e3       	ldi	r24, 0x30	; 48
     d46:	92 e0       	ldi	r25, 0x02	; 2
     d48:	62 d1       	rcall	.+708    	; 0x100e <atol>
		temp1++;
     d4a:	dc 01       	movw	r26, r24
     d4c:	cb 01       	movw	r24, r22
     d4e:	01 96       	adiw	r24, 0x01	; 1
     d50:	a1 1d       	adc	r26, r1
     d52:	b1 1d       	adc	r27, r1
		//put temp1 back into plaintext
		//printf("%l \r\n", temp1);
		sprintf(plaintext, "%lu", temp1);
     d54:	bf 93       	push	r27
     d56:	af 93       	push	r26
     d58:	9f 93       	push	r25
     d5a:	8f 93       	push	r24
     d5c:	8c ea       	ldi	r24, 0xAC	; 172
     d5e:	92 e0       	ldi	r25, 0x02	; 2
     d60:	9f 93       	push	r25
     d62:	8f 93       	push	r24
     d64:	0f 2e       	mov	r0, r31
     d66:	f1 e4       	ldi	r31, 0x41	; 65
     d68:	ef 2e       	mov	r14, r31
     d6a:	f2 e0       	ldi	r31, 0x02	; 2
     d6c:	ff 2e       	mov	r15, r31
     d6e:	f0 2d       	mov	r31, r0
     d70:	ff 92       	push	r15
     d72:	ef 92       	push	r14
     d74:	ce d1       	rcall	.+924    	; 0x1112 <sprintf>
		//encrypt plaintext
		encrypt();
     d76:	5b de       	rcall	.-842    	; 0xa2e <encrypt>
		printf("%s\r\n",plaintext);
     d78:	ff 92       	push	r15
     d7a:	ef 92       	push	r14
     d7c:	80 eb       	ldi	r24, 0xB0	; 176
     d7e:	92 e0       	ldi	r25, 0x02	; 2
     d80:	9f 93       	push	r25
     d82:	8f 93       	push	r24
     d84:	88 d1       	rcall	.+784    	; 0x1096 <printf>
		printf("cryptotext=");
     d86:	8a e5       	ldi	r24, 0x5A	; 90
     d88:	92 e0       	ldi	r25, 0x02	; 2
     d8a:	9f 93       	push	r25
     d8c:	8f 93       	push	r24
     d8e:	83 d1       	rcall	.+774    	; 0x1096 <printf>
		for (i=0; i<16; i++) printf(" %02x", crypto[i]);
     d90:	10 92 fb 03 	sts	0x03FB, r1
     d94:	10 92 fa 03 	sts	0x03FA, r1
     d98:	0f b6       	in	r0, 0x3f	; 63
     d9a:	f8 94       	cli
     d9c:	de bf       	out	0x3e, r29	; 62
     d9e:	0f be       	out	0x3f, r0	; 63
     da0:	cd bf       	out	0x3d, r28	; 61
     da2:	80 e0       	ldi	r24, 0x00	; 0
     da4:	90 e0       	ldi	r25, 0x00	; 0
     da6:	0f 2e       	mov	r0, r31
     da8:	f6 e6       	ldi	r31, 0x66	; 102
     daa:	ef 2e       	mov	r14, r31
     dac:	f2 e0       	ldi	r31, 0x02	; 2
     dae:	ff 2e       	mov	r15, r31
     db0:	f0 2d       	mov	r31, r0
     db2:	fc 01       	movw	r30, r24
     db4:	e1 5e       	subi	r30, 0xE1	; 225
     db6:	fd 4f       	sbci	r31, 0xFD	; 253
     db8:	80 81       	ld	r24, Z
     dba:	1f 92       	push	r1
     dbc:	8f 93       	push	r24
     dbe:	ff 92       	push	r15
     dc0:	ef 92       	push	r14
     dc2:	69 d1       	rcall	.+722    	; 0x1096 <printf>
     dc4:	80 91 fa 03 	lds	r24, 0x03FA
     dc8:	90 91 fb 03 	lds	r25, 0x03FB
     dcc:	01 96       	adiw	r24, 0x01	; 1
     dce:	90 93 fb 03 	sts	0x03FB, r25
     dd2:	80 93 fa 03 	sts	0x03FA, r24
     dd6:	0f 90       	pop	r0
     dd8:	0f 90       	pop	r0
     dda:	0f 90       	pop	r0
     ddc:	0f 90       	pop	r0
     dde:	80 31       	cpi	r24, 0x10	; 16
     de0:	91 05       	cpc	r25, r1
     de2:	38 f3       	brcs	.-50     	; 0xdb2 <application_radio_rx_msg+0x174>
		printf("\n\r");
     de4:	87 e8       	ldi	r24, 0x87	; 135
     de6:	92 e0       	ldi	r25, 0x02	; 2
     de8:	9f 93       	push	r25
     dea:	8f 93       	push	r24
     dec:	54 d1       	rcall	.+680    	; 0x1096 <printf>
		newPkt.dst = src;
     dee:	10 93 fd 03 	sts	0x03FD, r17
     df2:	00 93 fc 03 	sts	0x03FC, r16
		newPkt.src = NODE_ID;
     df6:	81 e0       	ldi	r24, 0x01	; 1
     df8:	90 e0       	ldi	r25, 0x00	; 0
     dfa:	90 93 ff 03 	sts	0x03FF, r25
     dfe:	80 93 fe 03 	sts	0x03FE, r24
     e02:	a0 e0       	ldi	r26, 0x00	; 0
     e04:	b4 e0       	ldi	r27, 0x04	; 4
     e06:	80 e3       	ldi	r24, 0x30	; 48
     e08:	92 e0       	ldi	r25, 0x02	; 2
     e0a:	0f 90       	pop	r0
     e0c:	0f 90       	pop	r0
     e0e:	ef e1       	ldi	r30, 0x1F	; 31
     e10:	f2 e0       	ldi	r31, 0x02	; 2
		//sprintf(newPkt.dt, crypto);
		for(int i=0;i<17;i++){
			newPkt.dt[i] = crypto[i];
     e12:	21 91       	ld	r18, Z+
     e14:	2d 93       	st	X+, r18
		for (i=0; i<16; i++) printf(" %02x", crypto[i]);
		printf("\n\r");
		newPkt.dst = src;
		newPkt.src = NODE_ID;
		//sprintf(newPkt.dt, crypto);
		for(int i=0;i<17;i++){
     e16:	e8 17       	cp	r30, r24
     e18:	f9 07       	cpc	r31, r25
     e1a:	d9 f7       	brne	.-10     	; 0xe12 <application_radio_rx_msg+0x1d4>
			newPkt.dt[i] = crypto[i];
		}
		//printf("%s\r\n", newPkt.dt);
		decryptMeth();
     e1c:	7a de       	rcall	.-780    	; 0xb12 <decryptMeth>
		canSend = true;
     e1e:	81 e0       	ldi	r24, 0x01	; 1
     e20:	80 93 6b 03 	sts	0x036B, r24
	}
}
     e24:	61 96       	adiw	r28, 0x11	; 17
     e26:	0f b6       	in	r0, 0x3f	; 63
     e28:	f8 94       	cli
     e2a:	de bf       	out	0x3e, r29	; 62
     e2c:	0f be       	out	0x3f, r0	; 63
     e2e:	cd bf       	out	0x3d, r28	; 61
     e30:	df 91       	pop	r29
     e32:	cf 91       	pop	r28
     e34:	1f 91       	pop	r17
     e36:	0f 91       	pop	r16
     e38:	ff 90       	pop	r15
     e3a:	ef 90       	pop	r14
     e3c:	08 95       	ret

00000e3e <application_radio_tx_done>:
// This function is called whenever a radio message has been transmitted
// You need to free up the transmit buffer here
//
void application_radio_tx_done()
{
	tx_buffer_inuse = false;
     e3e:	10 92 6c 03 	sts	0x036C, r1
     e42:	ea e7       	ldi	r30, 0x7A	; 122
     e44:	f3 e0       	ldi	r31, 0x03	; 3
     e46:	8a ef       	ldi	r24, 0xFA	; 250
     e48:	93 e0       	ldi	r25, 0x03	; 3
	
	//empty buffers after data has been sent
	for(int j=0; j<RADIO_MAX_LEN; j++)
	{
		tx_buffer[j] = 0x00;
     e4a:	11 92       	st	Z+, r1
void application_radio_tx_done()
{
	tx_buffer_inuse = false;
	
	//empty buffers after data has been sent
	for(int j=0; j<RADIO_MAX_LEN; j++)
     e4c:	e8 17       	cp	r30, r24
     e4e:	f9 07       	cpc	r31, r25
     e50:	e1 f7       	brne	.-8      	; 0xe4a <application_radio_tx_done+0xc>
	{
		tx_buffer[j] = 0x00;
	}
	newPkt.dst = 0x00;
     e52:	10 92 fd 03 	sts	0x03FD, r1
     e56:	10 92 fc 03 	sts	0x03FC, r1
	newPkt.src = 0x00;
     e5a:	10 92 ff 03 	sts	0x03FF, r1
     e5e:	10 92 fe 03 	sts	0x03FE, r1
     e62:	e0 e0       	ldi	r30, 0x00	; 0
     e64:	f4 e0       	ldi	r31, 0x04	; 4
     e66:	81 e1       	ldi	r24, 0x11	; 17
     e68:	94 e0       	ldi	r25, 0x04	; 4
	for(int i=0;i<sizeof(newPkt.dt);i++){
		newPkt.dt[i] = 0;
     e6a:	11 92       	st	Z+, r1
	{
		tx_buffer[j] = 0x00;
	}
	newPkt.dst = 0x00;
	newPkt.src = 0x00;
	for(int i=0;i<sizeof(newPkt.dt);i++){
     e6c:	e8 17       	cp	r30, r24
     e6e:	f9 07       	cpc	r31, r25
     e70:	e1 f7       	brne	.-8      	; 0xe6a <application_radio_tx_done+0x2c>
     e72:	e1 e4       	ldi	r30, 0x41	; 65
     e74:	f2 e0       	ldi	r31, 0x02	; 2
     e76:	82 e5       	ldi	r24, 0x52	; 82
     e78:	92 e0       	ldi	r25, 0x02	; 2
		newPkt.dt[i] = 0;
	}
	for(int i=0;i<sizeof(plaintext);i++){
		plaintext[i]= 0;
     e7a:	11 92       	st	Z+, r1
	newPkt.dst = 0x00;
	newPkt.src = 0x00;
	for(int i=0;i<sizeof(newPkt.dt);i++){
		newPkt.dt[i] = 0;
	}
	for(int i=0;i<sizeof(plaintext);i++){
     e7c:	e8 17       	cp	r30, r24
     e7e:	f9 07       	cpc	r31, r25
     e80:	e1 f7       	brne	.-8      	; 0xe7a <application_radio_tx_done+0x3c>
     e82:	ef e1       	ldi	r30, 0x1F	; 31
     e84:	f2 e0       	ldi	r31, 0x02	; 2
     e86:	80 e3       	ldi	r24, 0x30	; 48
     e88:	92 e0       	ldi	r25, 0x02	; 2
		plaintext[i]= 0;
	}
	for(int i=0;i<sizeof(crypto);i++){
		crypto[i]= 0;
     e8a:	11 92       	st	Z+, r1
		newPkt.dt[i] = 0;
	}
	for(int i=0;i<sizeof(plaintext);i++){
		plaintext[i]= 0;
	}
	for(int i=0;i<sizeof(crypto);i++){
     e8c:	e8 17       	cp	r30, r24
     e8e:	f9 07       	cpc	r31, r25
     e90:	e1 f7       	brne	.-8      	; 0xe8a <application_radio_tx_done+0x4c>
     e92:	e0 e3       	ldi	r30, 0x30	; 48
     e94:	f2 e0       	ldi	r31, 0x02	; 2
     e96:	81 e4       	ldi	r24, 0x41	; 65
     e98:	92 e0       	ldi	r25, 0x02	; 2
		crypto[i]= 0;
	}
	for(int i=0;i<sizeof(decrypt);i++){
		decrypt[i]= 0;
     e9a:	11 92       	st	Z+, r1
		plaintext[i]= 0;
	}
	for(int i=0;i<sizeof(crypto);i++){
		crypto[i]= 0;
	}
	for(int i=0;i<sizeof(decrypt);i++){
     e9c:	e8 17       	cp	r30, r24
     e9e:	f9 07       	cpc	r31, r25
     ea0:	e1 f7       	brne	.-8      	; 0xe9a <application_radio_tx_done+0x5c>
		decrypt[i]= 0;
	}
}
     ea2:	08 95       	ret

00000ea4 <application_button_pressed>:

void application_button_pressed()
{
     ea4:	cf 93       	push	r28
     ea6:	df 93       	push	r29
	newPkt.dst = dest;
     ea8:	80 91 52 02 	lds	r24, 0x0252
     eac:	90 91 53 02 	lds	r25, 0x0253
     eb0:	90 93 fd 03 	sts	0x03FD, r25
     eb4:	80 93 fc 03 	sts	0x03FC, r24
	newPkt.src = NODE_ID;
     eb8:	81 e0       	ldi	r24, 0x01	; 1
     eba:	90 e0       	ldi	r25, 0x00	; 0
     ebc:	90 93 ff 03 	sts	0x03FF, r25
     ec0:	80 93 fe 03 	sts	0x03FE, r24
	sprintf(plaintext, "OPENOPENOPENOPEN");
     ec4:	81 e1       	ldi	r24, 0x11	; 17
     ec6:	e5 eb       	ldi	r30, 0xB5	; 181
     ec8:	f2 e0       	ldi	r31, 0x02	; 2
     eca:	a1 e4       	ldi	r26, 0x41	; 65
     ecc:	b2 e0       	ldi	r27, 0x02	; 2
     ece:	01 90       	ld	r0, Z+
     ed0:	0d 92       	st	X+, r0
     ed2:	8a 95       	dec	r24
     ed4:	e1 f7       	brne	.-8      	; 0xece <application_button_pressed+0x2a>
	//encrypt plaintext
	encrypt();
     ed6:	ab dd       	rcall	.-1194   	; 0xa2e <encrypt>
	printf("%s\r\n", plaintext);
     ed8:	81 e4       	ldi	r24, 0x41	; 65
     eda:	92 e0       	ldi	r25, 0x02	; 2
     edc:	9f 93       	push	r25
     ede:	8f 93       	push	r24
     ee0:	80 eb       	ldi	r24, 0xB0	; 176
     ee2:	92 e0       	ldi	r25, 0x02	; 2
     ee4:	9f 93       	push	r25
     ee6:	8f 93       	push	r24
     ee8:	d6 d0       	rcall	.+428    	; 0x1096 <printf>
	printf("cryptotext=");
     eea:	8a e5       	ldi	r24, 0x5A	; 90
     eec:	92 e0       	ldi	r25, 0x02	; 2
     eee:	9f 93       	push	r25
     ef0:	8f 93       	push	r24
     ef2:	d1 d0       	rcall	.+418    	; 0x1096 <printf>
	for (i=0; i<16; i++) printf(" %02x", crypto[i]);
     ef4:	10 92 fb 03 	sts	0x03FB, r1
     ef8:	10 92 fa 03 	sts	0x03FA, r1
     efc:	0f 90       	pop	r0
     efe:	0f 90       	pop	r0
     f00:	0f 90       	pop	r0
     f02:	0f 90       	pop	r0
     f04:	0f 90       	pop	r0
     f06:	0f 90       	pop	r0
     f08:	80 e0       	ldi	r24, 0x00	; 0
     f0a:	90 e0       	ldi	r25, 0x00	; 0
     f0c:	c6 e6       	ldi	r28, 0x66	; 102
     f0e:	d2 e0       	ldi	r29, 0x02	; 2
     f10:	fc 01       	movw	r30, r24
     f12:	e1 5e       	subi	r30, 0xE1	; 225
     f14:	fd 4f       	sbci	r31, 0xFD	; 253
     f16:	80 81       	ld	r24, Z
     f18:	1f 92       	push	r1
     f1a:	8f 93       	push	r24
     f1c:	df 93       	push	r29
     f1e:	cf 93       	push	r28
     f20:	ba d0       	rcall	.+372    	; 0x1096 <printf>
     f22:	80 91 fa 03 	lds	r24, 0x03FA
     f26:	90 91 fb 03 	lds	r25, 0x03FB
     f2a:	01 96       	adiw	r24, 0x01	; 1
     f2c:	90 93 fb 03 	sts	0x03FB, r25
     f30:	80 93 fa 03 	sts	0x03FA, r24
     f34:	0f 90       	pop	r0
     f36:	0f 90       	pop	r0
     f38:	0f 90       	pop	r0
     f3a:	0f 90       	pop	r0
     f3c:	80 31       	cpi	r24, 0x10	; 16
     f3e:	91 05       	cpc	r25, r1
     f40:	38 f3       	brcs	.-50     	; 0xf10 <application_button_pressed+0x6c>
	printf("\r\n");
     f42:	88 e8       	ldi	r24, 0x88	; 136
     f44:	92 e0       	ldi	r25, 0x02	; 2
     f46:	b8 d0       	rcall	.+368    	; 0x10b8 <puts>
     f48:	ef e1       	ldi	r30, 0x1F	; 31
     f4a:	f2 e0       	ldi	r31, 0x02	; 2
     f4c:	a0 e0       	ldi	r26, 0x00	; 0
     f4e:	b4 e0       	ldi	r27, 0x04	; 4
     f50:	80 e3       	ldi	r24, 0x30	; 48
     f52:	92 e0       	ldi	r25, 0x02	; 2
	//put plaintext into the packet
	//sprintf(newPkt.dt, crypto);
	for(int i=0;i<17;i++){
		newPkt.dt[i] = crypto[i];
     f54:	21 91       	ld	r18, Z+
     f56:	2d 93       	st	X+, r18
	printf("cryptotext=");
	for (i=0; i<16; i++) printf(" %02x", crypto[i]);
	printf("\r\n");
	//put plaintext into the packet
	//sprintf(newPkt.dt, crypto);
	for(int i=0;i<17;i++){
     f58:	e8 17       	cp	r30, r24
     f5a:	f9 07       	cpc	r31, r25
     f5c:	d9 f7       	brne	.-10     	; 0xf54 <application_button_pressed+0xb0>
		newPkt.dt[i] = crypto[i];
	}
	canSend = true;
     f5e:	81 e0       	ldi	r24, 0x01	; 1
     f60:	80 93 6b 03 	sts	0x036B, r24
	decryptMeth();
     f64:	d6 dd       	rcall	.-1108   	; 0xb12 <decryptMeth>
	
	leds_off(LED_RED);
     f66:	83 e0       	ldi	r24, 0x03	; 3
     f68:	18 d9       	rcall	.-3536   	; 0x19a <leds_off>
	leds_on(LED_ORANGE);
     f6a:	82 e0       	ldi	r24, 0x02	; 2
     f6c:	0a d9       	rcall	.-3564   	; 0x182 <leds_on>
	leds_off(LED_GREEN);
     f6e:	81 e0       	ldi	r24, 0x01	; 1
     f70:	14 d9       	rcall	.-3544   	; 0x19a <leds_off>
}
     f72:	df 91       	pop	r29
     f74:	cf 91       	pop	r28
     f76:	08 95       	ret

00000f78 <application_button_released>:

void application_button_released()
{
     f78:	08 95       	ret

00000f7a <__mulsi3>:
     f7a:	db 01       	movw	r26, r22
     f7c:	8f 93       	push	r24
     f7e:	9f 93       	push	r25
     f80:	2d d0       	rcall	.+90     	; 0xfdc <__muluhisi3>
     f82:	bf 91       	pop	r27
     f84:	af 91       	pop	r26
     f86:	a2 9f       	mul	r26, r18
     f88:	80 0d       	add	r24, r0
     f8a:	91 1d       	adc	r25, r1
     f8c:	a3 9f       	mul	r26, r19
     f8e:	90 0d       	add	r25, r0
     f90:	b2 9f       	mul	r27, r18
     f92:	90 0d       	add	r25, r0
     f94:	11 24       	eor	r1, r1
     f96:	08 95       	ret

00000f98 <__udivmodsi4>:
     f98:	a1 e2       	ldi	r26, 0x21	; 33
     f9a:	1a 2e       	mov	r1, r26
     f9c:	aa 1b       	sub	r26, r26
     f9e:	bb 1b       	sub	r27, r27
     fa0:	fd 01       	movw	r30, r26
     fa2:	0d c0       	rjmp	.+26     	; 0xfbe <__udivmodsi4_ep>

00000fa4 <__udivmodsi4_loop>:
     fa4:	aa 1f       	adc	r26, r26
     fa6:	bb 1f       	adc	r27, r27
     fa8:	ee 1f       	adc	r30, r30
     faa:	ff 1f       	adc	r31, r31
     fac:	a2 17       	cp	r26, r18
     fae:	b3 07       	cpc	r27, r19
     fb0:	e4 07       	cpc	r30, r20
     fb2:	f5 07       	cpc	r31, r21
     fb4:	20 f0       	brcs	.+8      	; 0xfbe <__udivmodsi4_ep>
     fb6:	a2 1b       	sub	r26, r18
     fb8:	b3 0b       	sbc	r27, r19
     fba:	e4 0b       	sbc	r30, r20
     fbc:	f5 0b       	sbc	r31, r21

00000fbe <__udivmodsi4_ep>:
     fbe:	66 1f       	adc	r22, r22
     fc0:	77 1f       	adc	r23, r23
     fc2:	88 1f       	adc	r24, r24
     fc4:	99 1f       	adc	r25, r25
     fc6:	1a 94       	dec	r1
     fc8:	69 f7       	brne	.-38     	; 0xfa4 <__udivmodsi4_loop>
     fca:	60 95       	com	r22
     fcc:	70 95       	com	r23
     fce:	80 95       	com	r24
     fd0:	90 95       	com	r25
     fd2:	9b 01       	movw	r18, r22
     fd4:	ac 01       	movw	r20, r24
     fd6:	bd 01       	movw	r22, r26
     fd8:	cf 01       	movw	r24, r30
     fda:	08 95       	ret

00000fdc <__muluhisi3>:
     fdc:	09 d0       	rcall	.+18     	; 0xff0 <__umulhisi3>
     fde:	a5 9f       	mul	r26, r21
     fe0:	90 0d       	add	r25, r0
     fe2:	b4 9f       	mul	r27, r20
     fe4:	90 0d       	add	r25, r0
     fe6:	a4 9f       	mul	r26, r20
     fe8:	80 0d       	add	r24, r0
     fea:	91 1d       	adc	r25, r1
     fec:	11 24       	eor	r1, r1
     fee:	08 95       	ret

00000ff0 <__umulhisi3>:
     ff0:	a2 9f       	mul	r26, r18
     ff2:	b0 01       	movw	r22, r0
     ff4:	b3 9f       	mul	r27, r19
     ff6:	c0 01       	movw	r24, r0
     ff8:	a3 9f       	mul	r26, r19
     ffa:	70 0d       	add	r23, r0
     ffc:	81 1d       	adc	r24, r1
     ffe:	11 24       	eor	r1, r1
    1000:	91 1d       	adc	r25, r1
    1002:	b2 9f       	mul	r27, r18
    1004:	70 0d       	add	r23, r0
    1006:	81 1d       	adc	r24, r1
    1008:	11 24       	eor	r1, r1
    100a:	91 1d       	adc	r25, r1
    100c:	08 95       	ret

0000100e <atol>:
    100e:	1f 93       	push	r17
    1010:	fc 01       	movw	r30, r24
    1012:	99 27       	eor	r25, r25
    1014:	88 27       	eor	r24, r24
    1016:	bc 01       	movw	r22, r24
    1018:	e8 94       	clt
    101a:	11 91       	ld	r17, Z+
    101c:	10 32       	cpi	r17, 0x20	; 32
    101e:	e9 f3       	breq	.-6      	; 0x101a <atol+0xc>
    1020:	19 30       	cpi	r17, 0x09	; 9
    1022:	10 f0       	brcs	.+4      	; 0x1028 <atol+0x1a>
    1024:	1e 30       	cpi	r17, 0x0E	; 14
    1026:	c8 f3       	brcs	.-14     	; 0x101a <atol+0xc>
    1028:	1b 32       	cpi	r17, 0x2B	; 43
    102a:	49 f0       	breq	.+18     	; 0x103e <atol+0x30>
    102c:	1d 32       	cpi	r17, 0x2D	; 45
    102e:	41 f4       	brne	.+16     	; 0x1040 <atol+0x32>
    1030:	68 94       	set
    1032:	05 c0       	rjmp	.+10     	; 0x103e <atol+0x30>
    1034:	1b d0       	rcall	.+54     	; 0x106c <__mulsi_const_10>
    1036:	61 0f       	add	r22, r17
    1038:	71 1d       	adc	r23, r1
    103a:	81 1d       	adc	r24, r1
    103c:	91 1d       	adc	r25, r1
    103e:	11 91       	ld	r17, Z+
    1040:	10 53       	subi	r17, 0x30	; 48
    1042:	1a 30       	cpi	r17, 0x0A	; 10
    1044:	b8 f3       	brcs	.-18     	; 0x1034 <atol+0x26>
    1046:	3e f4       	brtc	.+14     	; 0x1056 <atol+0x48>
    1048:	90 95       	com	r25
    104a:	80 95       	com	r24
    104c:	70 95       	com	r23
    104e:	61 95       	neg	r22
    1050:	7f 4f       	sbci	r23, 0xFF	; 255
    1052:	8f 4f       	sbci	r24, 0xFF	; 255
    1054:	9f 4f       	sbci	r25, 0xFF	; 255
    1056:	1f 91       	pop	r17
    1058:	08 95       	ret

0000105a <strcmp>:
    105a:	fb 01       	movw	r30, r22
    105c:	dc 01       	movw	r26, r24
    105e:	8d 91       	ld	r24, X+
    1060:	01 90       	ld	r0, Z+
    1062:	80 19       	sub	r24, r0
    1064:	01 10       	cpse	r0, r1
    1066:	d9 f3       	breq	.-10     	; 0x105e <strcmp+0x4>
    1068:	99 0b       	sbc	r25, r25
    106a:	08 95       	ret

0000106c <__mulsi_const_10>:
    106c:	59 2f       	mov	r21, r25
    106e:	48 2f       	mov	r20, r24
    1070:	37 2f       	mov	r19, r23
    1072:	26 2f       	mov	r18, r22
    1074:	66 0f       	add	r22, r22
    1076:	77 1f       	adc	r23, r23
    1078:	88 1f       	adc	r24, r24
    107a:	99 1f       	adc	r25, r25
    107c:	66 0f       	add	r22, r22
    107e:	77 1f       	adc	r23, r23
    1080:	88 1f       	adc	r24, r24
    1082:	99 1f       	adc	r25, r25
    1084:	62 0f       	add	r22, r18
    1086:	73 1f       	adc	r23, r19
    1088:	84 1f       	adc	r24, r20
    108a:	95 1f       	adc	r25, r21
    108c:	66 0f       	add	r22, r22
    108e:	77 1f       	adc	r23, r23
    1090:	88 1f       	adc	r24, r24
    1092:	99 1f       	adc	r25, r25
    1094:	08 95       	ret

00001096 <printf>:
    1096:	cf 93       	push	r28
    1098:	df 93       	push	r29
    109a:	cd b7       	in	r28, 0x3d	; 61
    109c:	de b7       	in	r29, 0x3e	; 62
    109e:	fe 01       	movw	r30, r28
    10a0:	35 96       	adiw	r30, 0x05	; 5
    10a2:	61 91       	ld	r22, Z+
    10a4:	71 91       	ld	r23, Z+
    10a6:	af 01       	movw	r20, r30
    10a8:	80 91 13 04 	lds	r24, 0x0413
    10ac:	90 91 14 04 	lds	r25, 0x0414
    10b0:	5e d0       	rcall	.+188    	; 0x116e <vfprintf>
    10b2:	df 91       	pop	r29
    10b4:	cf 91       	pop	r28
    10b6:	08 95       	ret

000010b8 <puts>:
    10b8:	0f 93       	push	r16
    10ba:	1f 93       	push	r17
    10bc:	cf 93       	push	r28
    10be:	df 93       	push	r29
    10c0:	e0 91 13 04 	lds	r30, 0x0413
    10c4:	f0 91 14 04 	lds	r31, 0x0414
    10c8:	23 81       	ldd	r18, Z+3	; 0x03
    10ca:	21 ff       	sbrs	r18, 1
    10cc:	1b c0       	rjmp	.+54     	; 0x1104 <puts+0x4c>
    10ce:	ec 01       	movw	r28, r24
    10d0:	00 e0       	ldi	r16, 0x00	; 0
    10d2:	10 e0       	ldi	r17, 0x00	; 0
    10d4:	89 91       	ld	r24, Y+
    10d6:	60 91 13 04 	lds	r22, 0x0413
    10da:	70 91 14 04 	lds	r23, 0x0414
    10de:	db 01       	movw	r26, r22
    10e0:	18 96       	adiw	r26, 0x08	; 8
    10e2:	ed 91       	ld	r30, X+
    10e4:	fc 91       	ld	r31, X
    10e6:	19 97       	sbiw	r26, 0x09	; 9
    10e8:	88 23       	and	r24, r24
    10ea:	31 f0       	breq	.+12     	; 0x10f8 <puts+0x40>
    10ec:	09 95       	icall
    10ee:	89 2b       	or	r24, r25
    10f0:	89 f3       	breq	.-30     	; 0x10d4 <puts+0x1c>
    10f2:	0f ef       	ldi	r16, 0xFF	; 255
    10f4:	1f ef       	ldi	r17, 0xFF	; 255
    10f6:	ee cf       	rjmp	.-36     	; 0x10d4 <puts+0x1c>
    10f8:	8a e0       	ldi	r24, 0x0A	; 10
    10fa:	09 95       	icall
    10fc:	89 2b       	or	r24, r25
    10fe:	11 f4       	brne	.+4      	; 0x1104 <puts+0x4c>
    1100:	c8 01       	movw	r24, r16
    1102:	02 c0       	rjmp	.+4      	; 0x1108 <puts+0x50>
    1104:	8f ef       	ldi	r24, 0xFF	; 255
    1106:	9f ef       	ldi	r25, 0xFF	; 255
    1108:	df 91       	pop	r29
    110a:	cf 91       	pop	r28
    110c:	1f 91       	pop	r17
    110e:	0f 91       	pop	r16
    1110:	08 95       	ret

00001112 <sprintf>:
    1112:	0f 93       	push	r16
    1114:	1f 93       	push	r17
    1116:	cf 93       	push	r28
    1118:	df 93       	push	r29
    111a:	cd b7       	in	r28, 0x3d	; 61
    111c:	de b7       	in	r29, 0x3e	; 62
    111e:	2e 97       	sbiw	r28, 0x0e	; 14
    1120:	0f b6       	in	r0, 0x3f	; 63
    1122:	f8 94       	cli
    1124:	de bf       	out	0x3e, r29	; 62
    1126:	0f be       	out	0x3f, r0	; 63
    1128:	cd bf       	out	0x3d, r28	; 61
    112a:	0d 89       	ldd	r16, Y+21	; 0x15
    112c:	1e 89       	ldd	r17, Y+22	; 0x16
    112e:	86 e0       	ldi	r24, 0x06	; 6
    1130:	8c 83       	std	Y+4, r24	; 0x04
    1132:	1a 83       	std	Y+2, r17	; 0x02
    1134:	09 83       	std	Y+1, r16	; 0x01
    1136:	8f ef       	ldi	r24, 0xFF	; 255
    1138:	9f e7       	ldi	r25, 0x7F	; 127
    113a:	9e 83       	std	Y+6, r25	; 0x06
    113c:	8d 83       	std	Y+5, r24	; 0x05
    113e:	ae 01       	movw	r20, r28
    1140:	47 5e       	subi	r20, 0xE7	; 231
    1142:	5f 4f       	sbci	r21, 0xFF	; 255
    1144:	6f 89       	ldd	r22, Y+23	; 0x17
    1146:	78 8d       	ldd	r23, Y+24	; 0x18
    1148:	ce 01       	movw	r24, r28
    114a:	01 96       	adiw	r24, 0x01	; 1
    114c:	10 d0       	rcall	.+32     	; 0x116e <vfprintf>
    114e:	ef 81       	ldd	r30, Y+7	; 0x07
    1150:	f8 85       	ldd	r31, Y+8	; 0x08
    1152:	e0 0f       	add	r30, r16
    1154:	f1 1f       	adc	r31, r17
    1156:	10 82       	st	Z, r1
    1158:	2e 96       	adiw	r28, 0x0e	; 14
    115a:	0f b6       	in	r0, 0x3f	; 63
    115c:	f8 94       	cli
    115e:	de bf       	out	0x3e, r29	; 62
    1160:	0f be       	out	0x3f, r0	; 63
    1162:	cd bf       	out	0x3d, r28	; 61
    1164:	df 91       	pop	r29
    1166:	cf 91       	pop	r28
    1168:	1f 91       	pop	r17
    116a:	0f 91       	pop	r16
    116c:	08 95       	ret

0000116e <vfprintf>:
    116e:	2f 92       	push	r2
    1170:	3f 92       	push	r3
    1172:	4f 92       	push	r4
    1174:	5f 92       	push	r5
    1176:	6f 92       	push	r6
    1178:	7f 92       	push	r7
    117a:	8f 92       	push	r8
    117c:	9f 92       	push	r9
    117e:	af 92       	push	r10
    1180:	bf 92       	push	r11
    1182:	cf 92       	push	r12
    1184:	df 92       	push	r13
    1186:	ef 92       	push	r14
    1188:	ff 92       	push	r15
    118a:	0f 93       	push	r16
    118c:	1f 93       	push	r17
    118e:	cf 93       	push	r28
    1190:	df 93       	push	r29
    1192:	cd b7       	in	r28, 0x3d	; 61
    1194:	de b7       	in	r29, 0x3e	; 62
    1196:	2c 97       	sbiw	r28, 0x0c	; 12
    1198:	0f b6       	in	r0, 0x3f	; 63
    119a:	f8 94       	cli
    119c:	de bf       	out	0x3e, r29	; 62
    119e:	0f be       	out	0x3f, r0	; 63
    11a0:	cd bf       	out	0x3d, r28	; 61
    11a2:	7c 01       	movw	r14, r24
    11a4:	6b 01       	movw	r12, r22
    11a6:	8a 01       	movw	r16, r20
    11a8:	fc 01       	movw	r30, r24
    11aa:	17 82       	std	Z+7, r1	; 0x07
    11ac:	16 82       	std	Z+6, r1	; 0x06
    11ae:	83 81       	ldd	r24, Z+3	; 0x03
    11b0:	81 ff       	sbrs	r24, 1
    11b2:	b0 c1       	rjmp	.+864    	; 0x1514 <vfprintf+0x3a6>
    11b4:	ce 01       	movw	r24, r28
    11b6:	01 96       	adiw	r24, 0x01	; 1
    11b8:	4c 01       	movw	r8, r24
    11ba:	f7 01       	movw	r30, r14
    11bc:	93 81       	ldd	r25, Z+3	; 0x03
    11be:	f6 01       	movw	r30, r12
    11c0:	93 fd       	sbrc	r25, 3
    11c2:	85 91       	lpm	r24, Z+
    11c4:	93 ff       	sbrs	r25, 3
    11c6:	81 91       	ld	r24, Z+
    11c8:	6f 01       	movw	r12, r30
    11ca:	88 23       	and	r24, r24
    11cc:	09 f4       	brne	.+2      	; 0x11d0 <vfprintf+0x62>
    11ce:	9e c1       	rjmp	.+828    	; 0x150c <vfprintf+0x39e>
    11d0:	85 32       	cpi	r24, 0x25	; 37
    11d2:	39 f4       	brne	.+14     	; 0x11e2 <vfprintf+0x74>
    11d4:	93 fd       	sbrc	r25, 3
    11d6:	85 91       	lpm	r24, Z+
    11d8:	93 ff       	sbrs	r25, 3
    11da:	81 91       	ld	r24, Z+
    11dc:	6f 01       	movw	r12, r30
    11de:	85 32       	cpi	r24, 0x25	; 37
    11e0:	21 f4       	brne	.+8      	; 0x11ea <vfprintf+0x7c>
    11e2:	b7 01       	movw	r22, r14
    11e4:	90 e0       	ldi	r25, 0x00	; 0
    11e6:	c7 d1       	rcall	.+910    	; 0x1576 <fputc>
    11e8:	e8 cf       	rjmp	.-48     	; 0x11ba <vfprintf+0x4c>
    11ea:	51 2c       	mov	r5, r1
    11ec:	31 2c       	mov	r3, r1
    11ee:	20 e0       	ldi	r18, 0x00	; 0
    11f0:	20 32       	cpi	r18, 0x20	; 32
    11f2:	a0 f4       	brcc	.+40     	; 0x121c <vfprintf+0xae>
    11f4:	8b 32       	cpi	r24, 0x2B	; 43
    11f6:	69 f0       	breq	.+26     	; 0x1212 <vfprintf+0xa4>
    11f8:	30 f4       	brcc	.+12     	; 0x1206 <vfprintf+0x98>
    11fa:	80 32       	cpi	r24, 0x20	; 32
    11fc:	59 f0       	breq	.+22     	; 0x1214 <vfprintf+0xa6>
    11fe:	83 32       	cpi	r24, 0x23	; 35
    1200:	69 f4       	brne	.+26     	; 0x121c <vfprintf+0xae>
    1202:	20 61       	ori	r18, 0x10	; 16
    1204:	2c c0       	rjmp	.+88     	; 0x125e <vfprintf+0xf0>
    1206:	8d 32       	cpi	r24, 0x2D	; 45
    1208:	39 f0       	breq	.+14     	; 0x1218 <vfprintf+0xaa>
    120a:	80 33       	cpi	r24, 0x30	; 48
    120c:	39 f4       	brne	.+14     	; 0x121c <vfprintf+0xae>
    120e:	21 60       	ori	r18, 0x01	; 1
    1210:	26 c0       	rjmp	.+76     	; 0x125e <vfprintf+0xf0>
    1212:	22 60       	ori	r18, 0x02	; 2
    1214:	24 60       	ori	r18, 0x04	; 4
    1216:	23 c0       	rjmp	.+70     	; 0x125e <vfprintf+0xf0>
    1218:	28 60       	ori	r18, 0x08	; 8
    121a:	21 c0       	rjmp	.+66     	; 0x125e <vfprintf+0xf0>
    121c:	27 fd       	sbrc	r18, 7
    121e:	27 c0       	rjmp	.+78     	; 0x126e <vfprintf+0x100>
    1220:	30 ed       	ldi	r19, 0xD0	; 208
    1222:	38 0f       	add	r19, r24
    1224:	3a 30       	cpi	r19, 0x0A	; 10
    1226:	78 f4       	brcc	.+30     	; 0x1246 <vfprintf+0xd8>
    1228:	26 ff       	sbrs	r18, 6
    122a:	06 c0       	rjmp	.+12     	; 0x1238 <vfprintf+0xca>
    122c:	fa e0       	ldi	r31, 0x0A	; 10
    122e:	5f 9e       	mul	r5, r31
    1230:	30 0d       	add	r19, r0
    1232:	11 24       	eor	r1, r1
    1234:	53 2e       	mov	r5, r19
    1236:	13 c0       	rjmp	.+38     	; 0x125e <vfprintf+0xf0>
    1238:	8a e0       	ldi	r24, 0x0A	; 10
    123a:	38 9e       	mul	r3, r24
    123c:	30 0d       	add	r19, r0
    123e:	11 24       	eor	r1, r1
    1240:	33 2e       	mov	r3, r19
    1242:	20 62       	ori	r18, 0x20	; 32
    1244:	0c c0       	rjmp	.+24     	; 0x125e <vfprintf+0xf0>
    1246:	8e 32       	cpi	r24, 0x2E	; 46
    1248:	21 f4       	brne	.+8      	; 0x1252 <vfprintf+0xe4>
    124a:	26 fd       	sbrc	r18, 6
    124c:	5f c1       	rjmp	.+702    	; 0x150c <vfprintf+0x39e>
    124e:	20 64       	ori	r18, 0x40	; 64
    1250:	06 c0       	rjmp	.+12     	; 0x125e <vfprintf+0xf0>
    1252:	8c 36       	cpi	r24, 0x6C	; 108
    1254:	11 f4       	brne	.+4      	; 0x125a <vfprintf+0xec>
    1256:	20 68       	ori	r18, 0x80	; 128
    1258:	02 c0       	rjmp	.+4      	; 0x125e <vfprintf+0xf0>
    125a:	88 36       	cpi	r24, 0x68	; 104
    125c:	41 f4       	brne	.+16     	; 0x126e <vfprintf+0x100>
    125e:	f6 01       	movw	r30, r12
    1260:	93 fd       	sbrc	r25, 3
    1262:	85 91       	lpm	r24, Z+
    1264:	93 ff       	sbrs	r25, 3
    1266:	81 91       	ld	r24, Z+
    1268:	6f 01       	movw	r12, r30
    126a:	81 11       	cpse	r24, r1
    126c:	c1 cf       	rjmp	.-126    	; 0x11f0 <vfprintf+0x82>
    126e:	98 2f       	mov	r25, r24
    1270:	9f 7d       	andi	r25, 0xDF	; 223
    1272:	95 54       	subi	r25, 0x45	; 69
    1274:	93 30       	cpi	r25, 0x03	; 3
    1276:	28 f4       	brcc	.+10     	; 0x1282 <vfprintf+0x114>
    1278:	0c 5f       	subi	r16, 0xFC	; 252
    127a:	1f 4f       	sbci	r17, 0xFF	; 255
    127c:	ff e3       	ldi	r31, 0x3F	; 63
    127e:	f9 83       	std	Y+1, r31	; 0x01
    1280:	0d c0       	rjmp	.+26     	; 0x129c <vfprintf+0x12e>
    1282:	83 36       	cpi	r24, 0x63	; 99
    1284:	31 f0       	breq	.+12     	; 0x1292 <vfprintf+0x124>
    1286:	83 37       	cpi	r24, 0x73	; 115
    1288:	71 f0       	breq	.+28     	; 0x12a6 <vfprintf+0x138>
    128a:	83 35       	cpi	r24, 0x53	; 83
    128c:	09 f0       	breq	.+2      	; 0x1290 <vfprintf+0x122>
    128e:	57 c0       	rjmp	.+174    	; 0x133e <vfprintf+0x1d0>
    1290:	21 c0       	rjmp	.+66     	; 0x12d4 <vfprintf+0x166>
    1292:	f8 01       	movw	r30, r16
    1294:	80 81       	ld	r24, Z
    1296:	89 83       	std	Y+1, r24	; 0x01
    1298:	0e 5f       	subi	r16, 0xFE	; 254
    129a:	1f 4f       	sbci	r17, 0xFF	; 255
    129c:	44 24       	eor	r4, r4
    129e:	43 94       	inc	r4
    12a0:	51 2c       	mov	r5, r1
    12a2:	54 01       	movw	r10, r8
    12a4:	14 c0       	rjmp	.+40     	; 0x12ce <vfprintf+0x160>
    12a6:	38 01       	movw	r6, r16
    12a8:	f2 e0       	ldi	r31, 0x02	; 2
    12aa:	6f 0e       	add	r6, r31
    12ac:	71 1c       	adc	r7, r1
    12ae:	f8 01       	movw	r30, r16
    12b0:	a0 80       	ld	r10, Z
    12b2:	b1 80       	ldd	r11, Z+1	; 0x01
    12b4:	26 ff       	sbrs	r18, 6
    12b6:	03 c0       	rjmp	.+6      	; 0x12be <vfprintf+0x150>
    12b8:	65 2d       	mov	r22, r5
    12ba:	70 e0       	ldi	r23, 0x00	; 0
    12bc:	02 c0       	rjmp	.+4      	; 0x12c2 <vfprintf+0x154>
    12be:	6f ef       	ldi	r22, 0xFF	; 255
    12c0:	7f ef       	ldi	r23, 0xFF	; 255
    12c2:	c5 01       	movw	r24, r10
    12c4:	2c 87       	std	Y+12, r18	; 0x0c
    12c6:	4c d1       	rcall	.+664    	; 0x1560 <strnlen>
    12c8:	2c 01       	movw	r4, r24
    12ca:	83 01       	movw	r16, r6
    12cc:	2c 85       	ldd	r18, Y+12	; 0x0c
    12ce:	2f 77       	andi	r18, 0x7F	; 127
    12d0:	22 2e       	mov	r2, r18
    12d2:	16 c0       	rjmp	.+44     	; 0x1300 <vfprintf+0x192>
    12d4:	38 01       	movw	r6, r16
    12d6:	f2 e0       	ldi	r31, 0x02	; 2
    12d8:	6f 0e       	add	r6, r31
    12da:	71 1c       	adc	r7, r1
    12dc:	f8 01       	movw	r30, r16
    12de:	a0 80       	ld	r10, Z
    12e0:	b1 80       	ldd	r11, Z+1	; 0x01
    12e2:	26 ff       	sbrs	r18, 6
    12e4:	03 c0       	rjmp	.+6      	; 0x12ec <vfprintf+0x17e>
    12e6:	65 2d       	mov	r22, r5
    12e8:	70 e0       	ldi	r23, 0x00	; 0
    12ea:	02 c0       	rjmp	.+4      	; 0x12f0 <vfprintf+0x182>
    12ec:	6f ef       	ldi	r22, 0xFF	; 255
    12ee:	7f ef       	ldi	r23, 0xFF	; 255
    12f0:	c5 01       	movw	r24, r10
    12f2:	2c 87       	std	Y+12, r18	; 0x0c
    12f4:	2a d1       	rcall	.+596    	; 0x154a <strnlen_P>
    12f6:	2c 01       	movw	r4, r24
    12f8:	2c 85       	ldd	r18, Y+12	; 0x0c
    12fa:	20 68       	ori	r18, 0x80	; 128
    12fc:	22 2e       	mov	r2, r18
    12fe:	83 01       	movw	r16, r6
    1300:	23 fc       	sbrc	r2, 3
    1302:	19 c0       	rjmp	.+50     	; 0x1336 <vfprintf+0x1c8>
    1304:	83 2d       	mov	r24, r3
    1306:	90 e0       	ldi	r25, 0x00	; 0
    1308:	48 16       	cp	r4, r24
    130a:	59 06       	cpc	r5, r25
    130c:	a0 f4       	brcc	.+40     	; 0x1336 <vfprintf+0x1c8>
    130e:	b7 01       	movw	r22, r14
    1310:	80 e2       	ldi	r24, 0x20	; 32
    1312:	90 e0       	ldi	r25, 0x00	; 0
    1314:	30 d1       	rcall	.+608    	; 0x1576 <fputc>
    1316:	3a 94       	dec	r3
    1318:	f5 cf       	rjmp	.-22     	; 0x1304 <vfprintf+0x196>
    131a:	f5 01       	movw	r30, r10
    131c:	27 fc       	sbrc	r2, 7
    131e:	85 91       	lpm	r24, Z+
    1320:	27 fe       	sbrs	r2, 7
    1322:	81 91       	ld	r24, Z+
    1324:	5f 01       	movw	r10, r30
    1326:	b7 01       	movw	r22, r14
    1328:	90 e0       	ldi	r25, 0x00	; 0
    132a:	25 d1       	rcall	.+586    	; 0x1576 <fputc>
    132c:	31 10       	cpse	r3, r1
    132e:	3a 94       	dec	r3
    1330:	f1 e0       	ldi	r31, 0x01	; 1
    1332:	4f 1a       	sub	r4, r31
    1334:	51 08       	sbc	r5, r1
    1336:	41 14       	cp	r4, r1
    1338:	51 04       	cpc	r5, r1
    133a:	79 f7       	brne	.-34     	; 0x131a <vfprintf+0x1ac>
    133c:	de c0       	rjmp	.+444    	; 0x14fa <vfprintf+0x38c>
    133e:	84 36       	cpi	r24, 0x64	; 100
    1340:	11 f0       	breq	.+4      	; 0x1346 <vfprintf+0x1d8>
    1342:	89 36       	cpi	r24, 0x69	; 105
    1344:	31 f5       	brne	.+76     	; 0x1392 <vfprintf+0x224>
    1346:	f8 01       	movw	r30, r16
    1348:	27 ff       	sbrs	r18, 7
    134a:	07 c0       	rjmp	.+14     	; 0x135a <vfprintf+0x1ec>
    134c:	60 81       	ld	r22, Z
    134e:	71 81       	ldd	r23, Z+1	; 0x01
    1350:	82 81       	ldd	r24, Z+2	; 0x02
    1352:	93 81       	ldd	r25, Z+3	; 0x03
    1354:	0c 5f       	subi	r16, 0xFC	; 252
    1356:	1f 4f       	sbci	r17, 0xFF	; 255
    1358:	08 c0       	rjmp	.+16     	; 0x136a <vfprintf+0x1fc>
    135a:	60 81       	ld	r22, Z
    135c:	71 81       	ldd	r23, Z+1	; 0x01
    135e:	88 27       	eor	r24, r24
    1360:	77 fd       	sbrc	r23, 7
    1362:	80 95       	com	r24
    1364:	98 2f       	mov	r25, r24
    1366:	0e 5f       	subi	r16, 0xFE	; 254
    1368:	1f 4f       	sbci	r17, 0xFF	; 255
    136a:	2f 76       	andi	r18, 0x6F	; 111
    136c:	b2 2e       	mov	r11, r18
    136e:	97 ff       	sbrs	r25, 7
    1370:	09 c0       	rjmp	.+18     	; 0x1384 <vfprintf+0x216>
    1372:	90 95       	com	r25
    1374:	80 95       	com	r24
    1376:	70 95       	com	r23
    1378:	61 95       	neg	r22
    137a:	7f 4f       	sbci	r23, 0xFF	; 255
    137c:	8f 4f       	sbci	r24, 0xFF	; 255
    137e:	9f 4f       	sbci	r25, 0xFF	; 255
    1380:	20 68       	ori	r18, 0x80	; 128
    1382:	b2 2e       	mov	r11, r18
    1384:	2a e0       	ldi	r18, 0x0A	; 10
    1386:	30 e0       	ldi	r19, 0x00	; 0
    1388:	a4 01       	movw	r20, r8
    138a:	27 d1       	rcall	.+590    	; 0x15da <__ultoa_invert>
    138c:	a8 2e       	mov	r10, r24
    138e:	a8 18       	sub	r10, r8
    1390:	43 c0       	rjmp	.+134    	; 0x1418 <vfprintf+0x2aa>
    1392:	85 37       	cpi	r24, 0x75	; 117
    1394:	29 f4       	brne	.+10     	; 0x13a0 <vfprintf+0x232>
    1396:	2f 7e       	andi	r18, 0xEF	; 239
    1398:	b2 2e       	mov	r11, r18
    139a:	2a e0       	ldi	r18, 0x0A	; 10
    139c:	30 e0       	ldi	r19, 0x00	; 0
    139e:	25 c0       	rjmp	.+74     	; 0x13ea <vfprintf+0x27c>
    13a0:	f2 2f       	mov	r31, r18
    13a2:	f9 7f       	andi	r31, 0xF9	; 249
    13a4:	bf 2e       	mov	r11, r31
    13a6:	8f 36       	cpi	r24, 0x6F	; 111
    13a8:	c1 f0       	breq	.+48     	; 0x13da <vfprintf+0x26c>
    13aa:	18 f4       	brcc	.+6      	; 0x13b2 <vfprintf+0x244>
    13ac:	88 35       	cpi	r24, 0x58	; 88
    13ae:	79 f0       	breq	.+30     	; 0x13ce <vfprintf+0x260>
    13b0:	ad c0       	rjmp	.+346    	; 0x150c <vfprintf+0x39e>
    13b2:	80 37       	cpi	r24, 0x70	; 112
    13b4:	19 f0       	breq	.+6      	; 0x13bc <vfprintf+0x24e>
    13b6:	88 37       	cpi	r24, 0x78	; 120
    13b8:	21 f0       	breq	.+8      	; 0x13c2 <vfprintf+0x254>
    13ba:	a8 c0       	rjmp	.+336    	; 0x150c <vfprintf+0x39e>
    13bc:	2f 2f       	mov	r18, r31
    13be:	20 61       	ori	r18, 0x10	; 16
    13c0:	b2 2e       	mov	r11, r18
    13c2:	b4 fe       	sbrs	r11, 4
    13c4:	0d c0       	rjmp	.+26     	; 0x13e0 <vfprintf+0x272>
    13c6:	8b 2d       	mov	r24, r11
    13c8:	84 60       	ori	r24, 0x04	; 4
    13ca:	b8 2e       	mov	r11, r24
    13cc:	09 c0       	rjmp	.+18     	; 0x13e0 <vfprintf+0x272>
    13ce:	24 ff       	sbrs	r18, 4
    13d0:	0a c0       	rjmp	.+20     	; 0x13e6 <vfprintf+0x278>
    13d2:	9f 2f       	mov	r25, r31
    13d4:	96 60       	ori	r25, 0x06	; 6
    13d6:	b9 2e       	mov	r11, r25
    13d8:	06 c0       	rjmp	.+12     	; 0x13e6 <vfprintf+0x278>
    13da:	28 e0       	ldi	r18, 0x08	; 8
    13dc:	30 e0       	ldi	r19, 0x00	; 0
    13de:	05 c0       	rjmp	.+10     	; 0x13ea <vfprintf+0x27c>
    13e0:	20 e1       	ldi	r18, 0x10	; 16
    13e2:	30 e0       	ldi	r19, 0x00	; 0
    13e4:	02 c0       	rjmp	.+4      	; 0x13ea <vfprintf+0x27c>
    13e6:	20 e1       	ldi	r18, 0x10	; 16
    13e8:	32 e0       	ldi	r19, 0x02	; 2
    13ea:	f8 01       	movw	r30, r16
    13ec:	b7 fe       	sbrs	r11, 7
    13ee:	07 c0       	rjmp	.+14     	; 0x13fe <vfprintf+0x290>
    13f0:	60 81       	ld	r22, Z
    13f2:	71 81       	ldd	r23, Z+1	; 0x01
    13f4:	82 81       	ldd	r24, Z+2	; 0x02
    13f6:	93 81       	ldd	r25, Z+3	; 0x03
    13f8:	0c 5f       	subi	r16, 0xFC	; 252
    13fa:	1f 4f       	sbci	r17, 0xFF	; 255
    13fc:	06 c0       	rjmp	.+12     	; 0x140a <vfprintf+0x29c>
    13fe:	60 81       	ld	r22, Z
    1400:	71 81       	ldd	r23, Z+1	; 0x01
    1402:	80 e0       	ldi	r24, 0x00	; 0
    1404:	90 e0       	ldi	r25, 0x00	; 0
    1406:	0e 5f       	subi	r16, 0xFE	; 254
    1408:	1f 4f       	sbci	r17, 0xFF	; 255
    140a:	a4 01       	movw	r20, r8
    140c:	e6 d0       	rcall	.+460    	; 0x15da <__ultoa_invert>
    140e:	a8 2e       	mov	r10, r24
    1410:	a8 18       	sub	r10, r8
    1412:	fb 2d       	mov	r31, r11
    1414:	ff 77       	andi	r31, 0x7F	; 127
    1416:	bf 2e       	mov	r11, r31
    1418:	b6 fe       	sbrs	r11, 6
    141a:	0b c0       	rjmp	.+22     	; 0x1432 <vfprintf+0x2c4>
    141c:	2b 2d       	mov	r18, r11
    141e:	2e 7f       	andi	r18, 0xFE	; 254
    1420:	a5 14       	cp	r10, r5
    1422:	50 f4       	brcc	.+20     	; 0x1438 <vfprintf+0x2ca>
    1424:	b4 fe       	sbrs	r11, 4
    1426:	0a c0       	rjmp	.+20     	; 0x143c <vfprintf+0x2ce>
    1428:	b2 fc       	sbrc	r11, 2
    142a:	08 c0       	rjmp	.+16     	; 0x143c <vfprintf+0x2ce>
    142c:	2b 2d       	mov	r18, r11
    142e:	2e 7e       	andi	r18, 0xEE	; 238
    1430:	05 c0       	rjmp	.+10     	; 0x143c <vfprintf+0x2ce>
    1432:	7a 2c       	mov	r7, r10
    1434:	2b 2d       	mov	r18, r11
    1436:	03 c0       	rjmp	.+6      	; 0x143e <vfprintf+0x2d0>
    1438:	7a 2c       	mov	r7, r10
    143a:	01 c0       	rjmp	.+2      	; 0x143e <vfprintf+0x2d0>
    143c:	75 2c       	mov	r7, r5
    143e:	24 ff       	sbrs	r18, 4
    1440:	0d c0       	rjmp	.+26     	; 0x145c <vfprintf+0x2ee>
    1442:	fe 01       	movw	r30, r28
    1444:	ea 0d       	add	r30, r10
    1446:	f1 1d       	adc	r31, r1
    1448:	80 81       	ld	r24, Z
    144a:	80 33       	cpi	r24, 0x30	; 48
    144c:	11 f4       	brne	.+4      	; 0x1452 <vfprintf+0x2e4>
    144e:	29 7e       	andi	r18, 0xE9	; 233
    1450:	09 c0       	rjmp	.+18     	; 0x1464 <vfprintf+0x2f6>
    1452:	22 ff       	sbrs	r18, 2
    1454:	06 c0       	rjmp	.+12     	; 0x1462 <vfprintf+0x2f4>
    1456:	73 94       	inc	r7
    1458:	73 94       	inc	r7
    145a:	04 c0       	rjmp	.+8      	; 0x1464 <vfprintf+0x2f6>
    145c:	82 2f       	mov	r24, r18
    145e:	86 78       	andi	r24, 0x86	; 134
    1460:	09 f0       	breq	.+2      	; 0x1464 <vfprintf+0x2f6>
    1462:	73 94       	inc	r7
    1464:	23 fd       	sbrc	r18, 3
    1466:	12 c0       	rjmp	.+36     	; 0x148c <vfprintf+0x31e>
    1468:	20 ff       	sbrs	r18, 0
    146a:	06 c0       	rjmp	.+12     	; 0x1478 <vfprintf+0x30a>
    146c:	5a 2c       	mov	r5, r10
    146e:	73 14       	cp	r7, r3
    1470:	18 f4       	brcc	.+6      	; 0x1478 <vfprintf+0x30a>
    1472:	53 0c       	add	r5, r3
    1474:	57 18       	sub	r5, r7
    1476:	73 2c       	mov	r7, r3
    1478:	73 14       	cp	r7, r3
    147a:	60 f4       	brcc	.+24     	; 0x1494 <vfprintf+0x326>
    147c:	b7 01       	movw	r22, r14
    147e:	80 e2       	ldi	r24, 0x20	; 32
    1480:	90 e0       	ldi	r25, 0x00	; 0
    1482:	2c 87       	std	Y+12, r18	; 0x0c
    1484:	78 d0       	rcall	.+240    	; 0x1576 <fputc>
    1486:	73 94       	inc	r7
    1488:	2c 85       	ldd	r18, Y+12	; 0x0c
    148a:	f6 cf       	rjmp	.-20     	; 0x1478 <vfprintf+0x30a>
    148c:	73 14       	cp	r7, r3
    148e:	10 f4       	brcc	.+4      	; 0x1494 <vfprintf+0x326>
    1490:	37 18       	sub	r3, r7
    1492:	01 c0       	rjmp	.+2      	; 0x1496 <vfprintf+0x328>
    1494:	31 2c       	mov	r3, r1
    1496:	24 ff       	sbrs	r18, 4
    1498:	11 c0       	rjmp	.+34     	; 0x14bc <vfprintf+0x34e>
    149a:	b7 01       	movw	r22, r14
    149c:	80 e3       	ldi	r24, 0x30	; 48
    149e:	90 e0       	ldi	r25, 0x00	; 0
    14a0:	2c 87       	std	Y+12, r18	; 0x0c
    14a2:	69 d0       	rcall	.+210    	; 0x1576 <fputc>
    14a4:	2c 85       	ldd	r18, Y+12	; 0x0c
    14a6:	22 ff       	sbrs	r18, 2
    14a8:	16 c0       	rjmp	.+44     	; 0x14d6 <vfprintf+0x368>
    14aa:	21 ff       	sbrs	r18, 1
    14ac:	03 c0       	rjmp	.+6      	; 0x14b4 <vfprintf+0x346>
    14ae:	88 e5       	ldi	r24, 0x58	; 88
    14b0:	90 e0       	ldi	r25, 0x00	; 0
    14b2:	02 c0       	rjmp	.+4      	; 0x14b8 <vfprintf+0x34a>
    14b4:	88 e7       	ldi	r24, 0x78	; 120
    14b6:	90 e0       	ldi	r25, 0x00	; 0
    14b8:	b7 01       	movw	r22, r14
    14ba:	0c c0       	rjmp	.+24     	; 0x14d4 <vfprintf+0x366>
    14bc:	82 2f       	mov	r24, r18
    14be:	86 78       	andi	r24, 0x86	; 134
    14c0:	51 f0       	breq	.+20     	; 0x14d6 <vfprintf+0x368>
    14c2:	21 fd       	sbrc	r18, 1
    14c4:	02 c0       	rjmp	.+4      	; 0x14ca <vfprintf+0x35c>
    14c6:	80 e2       	ldi	r24, 0x20	; 32
    14c8:	01 c0       	rjmp	.+2      	; 0x14cc <vfprintf+0x35e>
    14ca:	8b e2       	ldi	r24, 0x2B	; 43
    14cc:	27 fd       	sbrc	r18, 7
    14ce:	8d e2       	ldi	r24, 0x2D	; 45
    14d0:	b7 01       	movw	r22, r14
    14d2:	90 e0       	ldi	r25, 0x00	; 0
    14d4:	50 d0       	rcall	.+160    	; 0x1576 <fputc>
    14d6:	a5 14       	cp	r10, r5
    14d8:	30 f4       	brcc	.+12     	; 0x14e6 <vfprintf+0x378>
    14da:	b7 01       	movw	r22, r14
    14dc:	80 e3       	ldi	r24, 0x30	; 48
    14de:	90 e0       	ldi	r25, 0x00	; 0
    14e0:	4a d0       	rcall	.+148    	; 0x1576 <fputc>
    14e2:	5a 94       	dec	r5
    14e4:	f8 cf       	rjmp	.-16     	; 0x14d6 <vfprintf+0x368>
    14e6:	aa 94       	dec	r10
    14e8:	f4 01       	movw	r30, r8
    14ea:	ea 0d       	add	r30, r10
    14ec:	f1 1d       	adc	r31, r1
    14ee:	80 81       	ld	r24, Z
    14f0:	b7 01       	movw	r22, r14
    14f2:	90 e0       	ldi	r25, 0x00	; 0
    14f4:	40 d0       	rcall	.+128    	; 0x1576 <fputc>
    14f6:	a1 10       	cpse	r10, r1
    14f8:	f6 cf       	rjmp	.-20     	; 0x14e6 <vfprintf+0x378>
    14fa:	33 20       	and	r3, r3
    14fc:	09 f4       	brne	.+2      	; 0x1500 <vfprintf+0x392>
    14fe:	5d ce       	rjmp	.-838    	; 0x11ba <vfprintf+0x4c>
    1500:	b7 01       	movw	r22, r14
    1502:	80 e2       	ldi	r24, 0x20	; 32
    1504:	90 e0       	ldi	r25, 0x00	; 0
    1506:	37 d0       	rcall	.+110    	; 0x1576 <fputc>
    1508:	3a 94       	dec	r3
    150a:	f7 cf       	rjmp	.-18     	; 0x14fa <vfprintf+0x38c>
    150c:	f7 01       	movw	r30, r14
    150e:	86 81       	ldd	r24, Z+6	; 0x06
    1510:	97 81       	ldd	r25, Z+7	; 0x07
    1512:	02 c0       	rjmp	.+4      	; 0x1518 <vfprintf+0x3aa>
    1514:	8f ef       	ldi	r24, 0xFF	; 255
    1516:	9f ef       	ldi	r25, 0xFF	; 255
    1518:	2c 96       	adiw	r28, 0x0c	; 12
    151a:	0f b6       	in	r0, 0x3f	; 63
    151c:	f8 94       	cli
    151e:	de bf       	out	0x3e, r29	; 62
    1520:	0f be       	out	0x3f, r0	; 63
    1522:	cd bf       	out	0x3d, r28	; 61
    1524:	df 91       	pop	r29
    1526:	cf 91       	pop	r28
    1528:	1f 91       	pop	r17
    152a:	0f 91       	pop	r16
    152c:	ff 90       	pop	r15
    152e:	ef 90       	pop	r14
    1530:	df 90       	pop	r13
    1532:	cf 90       	pop	r12
    1534:	bf 90       	pop	r11
    1536:	af 90       	pop	r10
    1538:	9f 90       	pop	r9
    153a:	8f 90       	pop	r8
    153c:	7f 90       	pop	r7
    153e:	6f 90       	pop	r6
    1540:	5f 90       	pop	r5
    1542:	4f 90       	pop	r4
    1544:	3f 90       	pop	r3
    1546:	2f 90       	pop	r2
    1548:	08 95       	ret

0000154a <strnlen_P>:
    154a:	fc 01       	movw	r30, r24
    154c:	05 90       	lpm	r0, Z+
    154e:	61 50       	subi	r22, 0x01	; 1
    1550:	70 40       	sbci	r23, 0x00	; 0
    1552:	01 10       	cpse	r0, r1
    1554:	d8 f7       	brcc	.-10     	; 0x154c <strnlen_P+0x2>
    1556:	80 95       	com	r24
    1558:	90 95       	com	r25
    155a:	8e 0f       	add	r24, r30
    155c:	9f 1f       	adc	r25, r31
    155e:	08 95       	ret

00001560 <strnlen>:
    1560:	fc 01       	movw	r30, r24
    1562:	61 50       	subi	r22, 0x01	; 1
    1564:	70 40       	sbci	r23, 0x00	; 0
    1566:	01 90       	ld	r0, Z+
    1568:	01 10       	cpse	r0, r1
    156a:	d8 f7       	brcc	.-10     	; 0x1562 <strnlen+0x2>
    156c:	80 95       	com	r24
    156e:	90 95       	com	r25
    1570:	8e 0f       	add	r24, r30
    1572:	9f 1f       	adc	r25, r31
    1574:	08 95       	ret

00001576 <fputc>:
    1576:	0f 93       	push	r16
    1578:	1f 93       	push	r17
    157a:	cf 93       	push	r28
    157c:	df 93       	push	r29
    157e:	18 2f       	mov	r17, r24
    1580:	09 2f       	mov	r16, r25
    1582:	eb 01       	movw	r28, r22
    1584:	8b 81       	ldd	r24, Y+3	; 0x03
    1586:	81 fd       	sbrc	r24, 1
    1588:	03 c0       	rjmp	.+6      	; 0x1590 <fputc+0x1a>
    158a:	8f ef       	ldi	r24, 0xFF	; 255
    158c:	9f ef       	ldi	r25, 0xFF	; 255
    158e:	20 c0       	rjmp	.+64     	; 0x15d0 <fputc+0x5a>
    1590:	82 ff       	sbrs	r24, 2
    1592:	10 c0       	rjmp	.+32     	; 0x15b4 <fputc+0x3e>
    1594:	4e 81       	ldd	r20, Y+6	; 0x06
    1596:	5f 81       	ldd	r21, Y+7	; 0x07
    1598:	2c 81       	ldd	r18, Y+4	; 0x04
    159a:	3d 81       	ldd	r19, Y+5	; 0x05
    159c:	42 17       	cp	r20, r18
    159e:	53 07       	cpc	r21, r19
    15a0:	7c f4       	brge	.+30     	; 0x15c0 <fputc+0x4a>
    15a2:	e8 81       	ld	r30, Y
    15a4:	f9 81       	ldd	r31, Y+1	; 0x01
    15a6:	9f 01       	movw	r18, r30
    15a8:	2f 5f       	subi	r18, 0xFF	; 255
    15aa:	3f 4f       	sbci	r19, 0xFF	; 255
    15ac:	39 83       	std	Y+1, r19	; 0x01
    15ae:	28 83       	st	Y, r18
    15b0:	10 83       	st	Z, r17
    15b2:	06 c0       	rjmp	.+12     	; 0x15c0 <fputc+0x4a>
    15b4:	e8 85       	ldd	r30, Y+8	; 0x08
    15b6:	f9 85       	ldd	r31, Y+9	; 0x09
    15b8:	81 2f       	mov	r24, r17
    15ba:	09 95       	icall
    15bc:	89 2b       	or	r24, r25
    15be:	29 f7       	brne	.-54     	; 0x158a <fputc+0x14>
    15c0:	2e 81       	ldd	r18, Y+6	; 0x06
    15c2:	3f 81       	ldd	r19, Y+7	; 0x07
    15c4:	2f 5f       	subi	r18, 0xFF	; 255
    15c6:	3f 4f       	sbci	r19, 0xFF	; 255
    15c8:	3f 83       	std	Y+7, r19	; 0x07
    15ca:	2e 83       	std	Y+6, r18	; 0x06
    15cc:	81 2f       	mov	r24, r17
    15ce:	90 2f       	mov	r25, r16
    15d0:	df 91       	pop	r29
    15d2:	cf 91       	pop	r28
    15d4:	1f 91       	pop	r17
    15d6:	0f 91       	pop	r16
    15d8:	08 95       	ret

000015da <__ultoa_invert>:
    15da:	fa 01       	movw	r30, r20
    15dc:	aa 27       	eor	r26, r26
    15de:	28 30       	cpi	r18, 0x08	; 8
    15e0:	51 f1       	breq	.+84     	; 0x1636 <__ultoa_invert+0x5c>
    15e2:	20 31       	cpi	r18, 0x10	; 16
    15e4:	81 f1       	breq	.+96     	; 0x1646 <__ultoa_invert+0x6c>
    15e6:	e8 94       	clt
    15e8:	6f 93       	push	r22
    15ea:	6e 7f       	andi	r22, 0xFE	; 254
    15ec:	6e 5f       	subi	r22, 0xFE	; 254
    15ee:	7f 4f       	sbci	r23, 0xFF	; 255
    15f0:	8f 4f       	sbci	r24, 0xFF	; 255
    15f2:	9f 4f       	sbci	r25, 0xFF	; 255
    15f4:	af 4f       	sbci	r26, 0xFF	; 255
    15f6:	b1 e0       	ldi	r27, 0x01	; 1
    15f8:	3e d0       	rcall	.+124    	; 0x1676 <__ultoa_invert+0x9c>
    15fa:	b4 e0       	ldi	r27, 0x04	; 4
    15fc:	3c d0       	rcall	.+120    	; 0x1676 <__ultoa_invert+0x9c>
    15fe:	67 0f       	add	r22, r23
    1600:	78 1f       	adc	r23, r24
    1602:	89 1f       	adc	r24, r25
    1604:	9a 1f       	adc	r25, r26
    1606:	a1 1d       	adc	r26, r1
    1608:	68 0f       	add	r22, r24
    160a:	79 1f       	adc	r23, r25
    160c:	8a 1f       	adc	r24, r26
    160e:	91 1d       	adc	r25, r1
    1610:	a1 1d       	adc	r26, r1
    1612:	6a 0f       	add	r22, r26
    1614:	71 1d       	adc	r23, r1
    1616:	81 1d       	adc	r24, r1
    1618:	91 1d       	adc	r25, r1
    161a:	a1 1d       	adc	r26, r1
    161c:	20 d0       	rcall	.+64     	; 0x165e <__ultoa_invert+0x84>
    161e:	09 f4       	brne	.+2      	; 0x1622 <__ultoa_invert+0x48>
    1620:	68 94       	set
    1622:	3f 91       	pop	r19
    1624:	2a e0       	ldi	r18, 0x0A	; 10
    1626:	26 9f       	mul	r18, r22
    1628:	11 24       	eor	r1, r1
    162a:	30 19       	sub	r19, r0
    162c:	30 5d       	subi	r19, 0xD0	; 208
    162e:	31 93       	st	Z+, r19
    1630:	de f6       	brtc	.-74     	; 0x15e8 <__ultoa_invert+0xe>
    1632:	cf 01       	movw	r24, r30
    1634:	08 95       	ret
    1636:	46 2f       	mov	r20, r22
    1638:	47 70       	andi	r20, 0x07	; 7
    163a:	40 5d       	subi	r20, 0xD0	; 208
    163c:	41 93       	st	Z+, r20
    163e:	b3 e0       	ldi	r27, 0x03	; 3
    1640:	0f d0       	rcall	.+30     	; 0x1660 <__ultoa_invert+0x86>
    1642:	c9 f7       	brne	.-14     	; 0x1636 <__ultoa_invert+0x5c>
    1644:	f6 cf       	rjmp	.-20     	; 0x1632 <__ultoa_invert+0x58>
    1646:	46 2f       	mov	r20, r22
    1648:	4f 70       	andi	r20, 0x0F	; 15
    164a:	40 5d       	subi	r20, 0xD0	; 208
    164c:	4a 33       	cpi	r20, 0x3A	; 58
    164e:	18 f0       	brcs	.+6      	; 0x1656 <__ultoa_invert+0x7c>
    1650:	49 5d       	subi	r20, 0xD9	; 217
    1652:	31 fd       	sbrc	r19, 1
    1654:	40 52       	subi	r20, 0x20	; 32
    1656:	41 93       	st	Z+, r20
    1658:	02 d0       	rcall	.+4      	; 0x165e <__ultoa_invert+0x84>
    165a:	a9 f7       	brne	.-22     	; 0x1646 <__ultoa_invert+0x6c>
    165c:	ea cf       	rjmp	.-44     	; 0x1632 <__ultoa_invert+0x58>
    165e:	b4 e0       	ldi	r27, 0x04	; 4
    1660:	a6 95       	lsr	r26
    1662:	97 95       	ror	r25
    1664:	87 95       	ror	r24
    1666:	77 95       	ror	r23
    1668:	67 95       	ror	r22
    166a:	ba 95       	dec	r27
    166c:	c9 f7       	brne	.-14     	; 0x1660 <__ultoa_invert+0x86>
    166e:	00 97       	sbiw	r24, 0x00	; 0
    1670:	61 05       	cpc	r22, r1
    1672:	71 05       	cpc	r23, r1
    1674:	08 95       	ret
    1676:	9b 01       	movw	r18, r22
    1678:	ac 01       	movw	r20, r24
    167a:	0a 2e       	mov	r0, r26
    167c:	06 94       	lsr	r0
    167e:	57 95       	ror	r21
    1680:	47 95       	ror	r20
    1682:	37 95       	ror	r19
    1684:	27 95       	ror	r18
    1686:	ba 95       	dec	r27
    1688:	c9 f7       	brne	.-14     	; 0x167c <__ultoa_invert+0xa2>
    168a:	62 0f       	add	r22, r18
    168c:	73 1f       	adc	r23, r19
    168e:	84 1f       	adc	r24, r20
    1690:	95 1f       	adc	r25, r21
    1692:	a0 1d       	adc	r26, r0
    1694:	08 95       	ret

00001696 <_exit>:
    1696:	f8 94       	cli

00001698 <__stop_program>:
    1698:	ff cf       	rjmp	.-2      	; 0x1698 <__stop_program>
