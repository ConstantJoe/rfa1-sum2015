
Gate.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000000cc  00800200  000018c2  00001956  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000018c2  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000156  008002cc  008002cc  00001a22  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00001a22  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001a80  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000118  00000000  00000000  00001ac0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000016e8  00000000  00000000  00001bd8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000094c  00000000  00000000  000032c0  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000c53  00000000  00000000  00003c0c  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000051c  00000000  00000000  00004860  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000006ca  00000000  00000000  00004d7c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000f1a  00000000  00000000  00005446  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000060  00000000  00000000  00006360  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	8f c0       	rjmp	.+286    	; 0x120 <__ctors_end>
       2:	00 00       	nop
       4:	ab c0       	rjmp	.+342    	; 0x15c <__bad_interrupt>
       6:	00 00       	nop
       8:	a9 c0       	rjmp	.+338    	; 0x15c <__bad_interrupt>
       a:	00 00       	nop
       c:	a7 c0       	rjmp	.+334    	; 0x15c <__bad_interrupt>
       e:	00 00       	nop
      10:	a5 c0       	rjmp	.+330    	; 0x15c <__bad_interrupt>
      12:	00 00       	nop
      14:	a3 c0       	rjmp	.+326    	; 0x15c <__bad_interrupt>
      16:	00 00       	nop
      18:	a1 c0       	rjmp	.+322    	; 0x15c <__bad_interrupt>
      1a:	00 00       	nop
      1c:	9f c0       	rjmp	.+318    	; 0x15c <__bad_interrupt>
      1e:	00 00       	nop
      20:	9d c0       	rjmp	.+314    	; 0x15c <__bad_interrupt>
      22:	00 00       	nop
      24:	9b c0       	rjmp	.+310    	; 0x15c <__bad_interrupt>
      26:	00 00       	nop
      28:	99 c0       	rjmp	.+306    	; 0x15c <__bad_interrupt>
      2a:	00 00       	nop
      2c:	97 c0       	rjmp	.+302    	; 0x15c <__bad_interrupt>
      2e:	00 00       	nop
      30:	95 c0       	rjmp	.+298    	; 0x15c <__bad_interrupt>
      32:	00 00       	nop
      34:	93 c0       	rjmp	.+294    	; 0x15c <__bad_interrupt>
      36:	00 00       	nop
      38:	91 c0       	rjmp	.+290    	; 0x15c <__bad_interrupt>
      3a:	00 00       	nop
      3c:	8f c0       	rjmp	.+286    	; 0x15c <__bad_interrupt>
      3e:	00 00       	nop
      40:	8d c0       	rjmp	.+282    	; 0x15c <__bad_interrupt>
      42:	00 00       	nop
      44:	8b c0       	rjmp	.+278    	; 0x15c <__bad_interrupt>
      46:	00 00       	nop
      48:	89 c0       	rjmp	.+274    	; 0x15c <__bad_interrupt>
      4a:	00 00       	nop
      4c:	87 c0       	rjmp	.+270    	; 0x15c <__bad_interrupt>
      4e:	00 00       	nop
      50:	85 c0       	rjmp	.+266    	; 0x15c <__bad_interrupt>
      52:	00 00       	nop
      54:	83 c0       	rjmp	.+262    	; 0x15c <__bad_interrupt>
      56:	00 00       	nop
      58:	81 c0       	rjmp	.+258    	; 0x15c <__bad_interrupt>
      5a:	00 00       	nop
      5c:	7f c0       	rjmp	.+254    	; 0x15c <__bad_interrupt>
      5e:	00 00       	nop
      60:	7d c0       	rjmp	.+250    	; 0x15c <__bad_interrupt>
      62:	00 00       	nop
      64:	7b c0       	rjmp	.+246    	; 0x15c <__bad_interrupt>
      66:	00 00       	nop
      68:	79 c0       	rjmp	.+242    	; 0x15c <__bad_interrupt>
      6a:	00 00       	nop
      6c:	77 c0       	rjmp	.+238    	; 0x15c <__bad_interrupt>
      6e:	00 00       	nop
      70:	75 c0       	rjmp	.+234    	; 0x15c <__bad_interrupt>
      72:	00 00       	nop
      74:	73 c0       	rjmp	.+230    	; 0x15c <__bad_interrupt>
      76:	00 00       	nop
      78:	71 c0       	rjmp	.+226    	; 0x15c <__bad_interrupt>
      7a:	00 00       	nop
      7c:	6f c0       	rjmp	.+222    	; 0x15c <__bad_interrupt>
      7e:	00 00       	nop
      80:	6d c0       	rjmp	.+218    	; 0x15c <__bad_interrupt>
      82:	00 00       	nop
      84:	6b c0       	rjmp	.+214    	; 0x15c <__bad_interrupt>
      86:	00 00       	nop
      88:	69 c0       	rjmp	.+210    	; 0x15c <__bad_interrupt>
      8a:	00 00       	nop
      8c:	67 c0       	rjmp	.+206    	; 0x15c <__bad_interrupt>
      8e:	00 00       	nop
      90:	65 c0       	rjmp	.+202    	; 0x15c <__bad_interrupt>
      92:	00 00       	nop
      94:	63 c0       	rjmp	.+198    	; 0x15c <__bad_interrupt>
      96:	00 00       	nop
      98:	61 c0       	rjmp	.+194    	; 0x15c <__bad_interrupt>
      9a:	00 00       	nop
      9c:	5f c0       	rjmp	.+190    	; 0x15c <__bad_interrupt>
      9e:	00 00       	nop
      a0:	5d c0       	rjmp	.+186    	; 0x15c <__bad_interrupt>
      a2:	00 00       	nop
      a4:	5b c0       	rjmp	.+182    	; 0x15c <__bad_interrupt>
      a6:	00 00       	nop
      a8:	59 c0       	rjmp	.+178    	; 0x15c <__bad_interrupt>
      aa:	00 00       	nop
      ac:	57 c0       	rjmp	.+174    	; 0x15c <__bad_interrupt>
      ae:	00 00       	nop
      b0:	55 c0       	rjmp	.+170    	; 0x15c <__bad_interrupt>
      b2:	00 00       	nop
      b4:	53 c0       	rjmp	.+166    	; 0x15c <__bad_interrupt>
      b6:	00 00       	nop
      b8:	51 c0       	rjmp	.+162    	; 0x15c <__bad_interrupt>
      ba:	00 00       	nop
      bc:	4f c0       	rjmp	.+158    	; 0x15c <__bad_interrupt>
      be:	00 00       	nop
      c0:	4d c0       	rjmp	.+154    	; 0x15c <__bad_interrupt>
      c2:	00 00       	nop
      c4:	4b c0       	rjmp	.+150    	; 0x15c <__bad_interrupt>
      c6:	00 00       	nop
      c8:	49 c0       	rjmp	.+146    	; 0x15c <__bad_interrupt>
      ca:	00 00       	nop
      cc:	47 c0       	rjmp	.+142    	; 0x15c <__bad_interrupt>
      ce:	00 00       	nop
      d0:	45 c0       	rjmp	.+138    	; 0x15c <__bad_interrupt>
      d2:	00 00       	nop
      d4:	43 c0       	rjmp	.+134    	; 0x15c <__bad_interrupt>
      d6:	00 00       	nop
      d8:	41 c0       	rjmp	.+130    	; 0x15c <__bad_interrupt>
      da:	00 00       	nop
      dc:	3f c0       	rjmp	.+126    	; 0x15c <__bad_interrupt>
      de:	00 00       	nop
      e0:	3d c0       	rjmp	.+122    	; 0x15c <__bad_interrupt>
      e2:	00 00       	nop
      e4:	3b c0       	rjmp	.+118    	; 0x15c <__bad_interrupt>
      e6:	00 00       	nop
      e8:	39 c0       	rjmp	.+114    	; 0x15c <__bad_interrupt>
      ea:	00 00       	nop
      ec:	37 c0       	rjmp	.+110    	; 0x15c <__bad_interrupt>
      ee:	00 00       	nop
      f0:	35 c0       	rjmp	.+106    	; 0x15c <__bad_interrupt>
      f2:	00 00       	nop
      f4:	33 c0       	rjmp	.+102    	; 0x15c <__bad_interrupt>
      f6:	00 00       	nop
      f8:	31 c0       	rjmp	.+98     	; 0x15c <__bad_interrupt>
      fa:	00 00       	nop
      fc:	2f c0       	rjmp	.+94     	; 0x15c <__bad_interrupt>
      fe:	00 00       	nop
     100:	2d c0       	rjmp	.+90     	; 0x15c <__bad_interrupt>
     102:	00 00       	nop
     104:	2b c0       	rjmp	.+86     	; 0x15c <__bad_interrupt>
     106:	00 00       	nop
     108:	29 c0       	rjmp	.+82     	; 0x15c <__bad_interrupt>
     10a:	00 00       	nop
     10c:	27 c0       	rjmp	.+78     	; 0x15c <__bad_interrupt>
     10e:	00 00       	nop
     110:	25 c0       	rjmp	.+74     	; 0x15c <__bad_interrupt>
     112:	00 00       	nop
     114:	23 c0       	rjmp	.+70     	; 0x15c <__bad_interrupt>
     116:	00 00       	nop
     118:	21 c0       	rjmp	.+66     	; 0x15c <__bad_interrupt>
     11a:	00 00       	nop
     11c:	1f c0       	rjmp	.+62     	; 0x15c <__bad_interrupt>
	...

00000120 <__ctors_end>:
     120:	11 24       	eor	r1, r1
     122:	1f be       	out	0x3f, r1	; 63
     124:	cf ef       	ldi	r28, 0xFF	; 255
     126:	d1 e4       	ldi	r29, 0x41	; 65
     128:	de bf       	out	0x3e, r29	; 62
     12a:	cd bf       	out	0x3d, r28	; 61

0000012c <__do_copy_data>:
     12c:	12 e0       	ldi	r17, 0x02	; 2
     12e:	a0 e0       	ldi	r26, 0x00	; 0
     130:	b2 e0       	ldi	r27, 0x02	; 2
     132:	e2 ec       	ldi	r30, 0xC2	; 194
     134:	f8 e1       	ldi	r31, 0x18	; 24
     136:	00 e0       	ldi	r16, 0x00	; 0
     138:	0b bf       	out	0x3b, r16	; 59
     13a:	02 c0       	rjmp	.+4      	; 0x140 <__do_copy_data+0x14>
     13c:	07 90       	elpm	r0, Z+
     13e:	0d 92       	st	X+, r0
     140:	ac 3c       	cpi	r26, 0xCC	; 204
     142:	b1 07       	cpc	r27, r17
     144:	d9 f7       	brne	.-10     	; 0x13c <__do_copy_data+0x10>

00000146 <__do_clear_bss>:
     146:	24 e0       	ldi	r18, 0x04	; 4
     148:	ac ec       	ldi	r26, 0xCC	; 204
     14a:	b2 e0       	ldi	r27, 0x02	; 2
     14c:	01 c0       	rjmp	.+2      	; 0x150 <.do_clear_bss_start>

0000014e <.do_clear_bss_loop>:
     14e:	1d 92       	st	X+, r1

00000150 <.do_clear_bss_start>:
     150:	a2 32       	cpi	r26, 0x22	; 34
     152:	b2 07       	cpc	r27, r18
     154:	e1 f7       	brne	.-8      	; 0x14e <.do_clear_bss_loop>
     156:	92 d3       	rcall	.+1828   	; 0x87c <main>
     158:	0c 94 5f 0c 	jmp	0x18be	; 0x18be <_exit>

0000015c <__bad_interrupt>:
     15c:	51 cf       	rjmp	.-350    	; 0x0 <__vectors>

0000015e <button_init>:
     15e:	6d 98       	cbi	0x0d, 5	; 13
     160:	75 9a       	sbi	0x0e, 5	; 14
     162:	08 95       	ret

00000164 <button_pressed>:
     164:	81 e0       	ldi	r24, 0x01	; 1
     166:	65 99       	sbic	0x0c, 5	; 12
     168:	80 e0       	ldi	r24, 0x00	; 0
     16a:	08 95       	ret

0000016c <button_released>:
     16c:	fb df       	rcall	.-10     	; 0x164 <button_pressed>
     16e:	91 e0       	ldi	r25, 0x01	; 1
     170:	89 27       	eor	r24, r25
     172:	08 95       	ret

00000174 <hw_timer_cpuf>:
     174:	60 e0       	ldi	r22, 0x00	; 0
     176:	72 e1       	ldi	r23, 0x12	; 18
     178:	8a e7       	ldi	r24, 0x7A	; 122
     17a:	90 e0       	ldi	r25, 0x00	; 0
     17c:	08 95       	ret

0000017e <hw_timer_init>:
     17e:	10 92 80 00 	sts	0x0080, r1
     182:	81 e0       	ldi	r24, 0x01	; 1
     184:	80 93 81 00 	sts	0x0081, r24
     188:	10 92 82 00 	sts	0x0082, r1
     18c:	10 92 85 00 	sts	0x0085, r1
     190:	10 92 84 00 	sts	0x0084, r1
     194:	10 92 6f 00 	sts	0x006F, r1
     198:	08 95       	ret

0000019a <hw_timer_start>:
     19a:	cf 93       	push	r28
     19c:	df 93       	push	r29
     19e:	ec 01       	movw	r28, r24
     1a0:	ee df       	rcall	.-36     	; 0x17e <hw_timer_init>
     1a2:	d0 93 85 00 	sts	0x0085, r29
     1a6:	c0 93 84 00 	sts	0x0084, r28
     1aa:	df 91       	pop	r29
     1ac:	cf 91       	pop	r28
     1ae:	08 95       	ret

000001b0 <hw_timer_overflow>:
     1b0:	81 e0       	ldi	r24, 0x01	; 1
     1b2:	b0 9b       	sbis	0x16, 0	; 22
     1b4:	80 e0       	ldi	r24, 0x00	; 0
     1b6:	88 23       	and	r24, r24
     1b8:	11 f0       	breq	.+4      	; 0x1be <hw_timer_overflow+0xe>
     1ba:	91 e0       	ldi	r25, 0x01	; 1
     1bc:	96 bb       	out	0x16, r25	; 22
     1be:	08 95       	ret

000001c0 <hw_timer_now>:
     1c0:	80 91 84 00 	lds	r24, 0x0084
     1c4:	90 91 85 00 	lds	r25, 0x0085
     1c8:	08 95       	ret

000001ca <hw_timer_now_us>:
     1ca:	cf 92       	push	r12
     1cc:	df 92       	push	r13
     1ce:	ef 92       	push	r14
     1d0:	ff 92       	push	r15
     1d2:	c0 90 84 00 	lds	r12, 0x0084
     1d6:	d0 90 85 00 	lds	r13, 0x0085
     1da:	d6 94       	lsr	r13
     1dc:	c7 94       	ror	r12
     1de:	d6 94       	lsr	r13
     1e0:	c7 94       	ror	r12
     1e2:	d6 94       	lsr	r13
     1e4:	c7 94       	ror	r12
     1e6:	ee 24       	eor	r14, r14
     1e8:	ff 24       	eor	r15, r15
     1ea:	e2 df       	rcall	.-60     	; 0x1b0 <hw_timer_overflow>
     1ec:	88 23       	and	r24, r24
     1ee:	a1 f0       	breq	.+40     	; 0x218 <hw_timer_now_us+0x4e>
     1f0:	80 91 cc 02 	lds	r24, 0x02CC
     1f4:	90 91 cd 02 	lds	r25, 0x02CD
     1f8:	a0 91 ce 02 	lds	r26, 0x02CE
     1fc:	b0 91 cf 02 	lds	r27, 0x02CF
     200:	80 50       	subi	r24, 0x00	; 0
     202:	90 4e       	sbci	r25, 0xE0	; 224
     204:	af 4f       	sbci	r26, 0xFF	; 255
     206:	bf 4f       	sbci	r27, 0xFF	; 255
     208:	80 93 cc 02 	sts	0x02CC, r24
     20c:	90 93 cd 02 	sts	0x02CD, r25
     210:	a0 93 ce 02 	sts	0x02CE, r26
     214:	b0 93 cf 02 	sts	0x02CF, r27
     218:	80 91 cc 02 	lds	r24, 0x02CC
     21c:	90 91 cd 02 	lds	r25, 0x02CD
     220:	a0 91 ce 02 	lds	r26, 0x02CE
     224:	b0 91 cf 02 	lds	r27, 0x02CF
     228:	c8 0e       	add	r12, r24
     22a:	d9 1e       	adc	r13, r25
     22c:	ea 1e       	adc	r14, r26
     22e:	fb 1e       	adc	r15, r27
     230:	6c 2d       	mov	r22, r12
     232:	7d 2d       	mov	r23, r13
     234:	8e 2d       	mov	r24, r14
     236:	9f 2d       	mov	r25, r15
     238:	ff 90       	pop	r15
     23a:	ef 90       	pop	r14
     23c:	df 90       	pop	r13
     23e:	cf 90       	pop	r12
     240:	08 95       	ret

00000242 <hw_timer_wait_micro>:
     242:	8f 92       	push	r8
     244:	9f 92       	push	r9
     246:	af 92       	push	r10
     248:	bf 92       	push	r11
     24a:	cf 92       	push	r12
     24c:	df 92       	push	r13
     24e:	ef 92       	push	r14
     250:	ff 92       	push	r15
     252:	4c 01       	movw	r8, r24
     254:	aa 24       	eor	r10, r10
     256:	bb 24       	eor	r11, r11
     258:	88 0c       	add	r8, r8
     25a:	99 1c       	adc	r9, r9
     25c:	aa 1c       	adc	r10, r10
     25e:	bb 1c       	adc	r11, r11
     260:	88 0c       	add	r8, r8
     262:	99 1c       	adc	r9, r9
     264:	aa 1c       	adc	r10, r10
     266:	bb 1c       	adc	r11, r11
     268:	88 0c       	add	r8, r8
     26a:	99 1c       	adc	r9, r9
     26c:	aa 1c       	adc	r10, r10
     26e:	bb 1c       	adc	r11, r11
     270:	80 e0       	ldi	r24, 0x00	; 0
     272:	88 16       	cp	r8, r24
     274:	80 e0       	ldi	r24, 0x00	; 0
     276:	98 06       	cpc	r9, r24
     278:	81 e0       	ldi	r24, 0x01	; 1
     27a:	a8 06       	cpc	r10, r24
     27c:	80 e0       	ldi	r24, 0x00	; 0
     27e:	b8 06       	cpc	r11, r24
     280:	78 f1       	brcs	.+94     	; 0x2e0 <hw_timer_wait_micro+0x9e>
     282:	75 01       	movw	r14, r10
     284:	64 01       	movw	r12, r8
     286:	80 e0       	ldi	r24, 0x00	; 0
     288:	90 e0       	ldi	r25, 0x00	; 0
     28a:	87 df       	rcall	.-242    	; 0x19a <hw_timer_start>
     28c:	80 e0       	ldi	r24, 0x00	; 0
     28e:	90 e0       	ldi	r25, 0x00	; 0
     290:	af ef       	ldi	r26, 0xFF	; 255
     292:	bf ef       	ldi	r27, 0xFF	; 255
     294:	c8 0e       	add	r12, r24
     296:	d9 1e       	adc	r13, r25
     298:	ea 1e       	adc	r14, r26
     29a:	fb 1e       	adc	r15, r27
     29c:	89 df       	rcall	.-238    	; 0x1b0 <hw_timer_overflow>
     29e:	88 23       	and	r24, r24
     2a0:	e9 f3       	breq	.-6      	; 0x29c <hw_timer_wait_micro+0x5a>
     2a2:	90 e0       	ldi	r25, 0x00	; 0
     2a4:	c9 16       	cp	r12, r25
     2a6:	90 e0       	ldi	r25, 0x00	; 0
     2a8:	d9 06       	cpc	r13, r25
     2aa:	91 e0       	ldi	r25, 0x01	; 1
     2ac:	e9 06       	cpc	r14, r25
     2ae:	90 e0       	ldi	r25, 0x00	; 0
     2b0:	f9 06       	cpc	r15, r25
     2b2:	48 f7       	brcc	.-46     	; 0x286 <hw_timer_wait_micro+0x44>
     2b4:	80 e0       	ldi	r24, 0x00	; 0
     2b6:	90 e0       	ldi	r25, 0x00	; 0
     2b8:	af ef       	ldi	r26, 0xFF	; 255
     2ba:	bf ef       	ldi	r27, 0xFF	; 255
     2bc:	88 0e       	add	r8, r24
     2be:	99 1e       	adc	r9, r25
     2c0:	aa 1e       	adc	r10, r26
     2c2:	bb 1e       	adc	r11, r27
     2c4:	b5 01       	movw	r22, r10
     2c6:	88 27       	eor	r24, r24
     2c8:	99 27       	eor	r25, r25
     2ca:	20 e0       	ldi	r18, 0x00	; 0
     2cc:	30 e0       	ldi	r19, 0x00	; 0
     2ce:	4f ef       	ldi	r20, 0xFF	; 255
     2d0:	5f ef       	ldi	r21, 0xFF	; 255
     2d2:	14 d7       	rcall	.+3624   	; 0x10fc <__mulsi3>
     2d4:	dc 01       	movw	r26, r24
     2d6:	cb 01       	movw	r24, r22
     2d8:	88 0e       	add	r8, r24
     2da:	99 1e       	adc	r9, r25
     2dc:	aa 1e       	adc	r10, r26
     2de:	bb 1e       	adc	r11, r27
     2e0:	c4 01       	movw	r24, r8
     2e2:	80 95       	com	r24
     2e4:	90 95       	com	r25
     2e6:	59 df       	rcall	.-334    	; 0x19a <hw_timer_start>
     2e8:	63 df       	rcall	.-314    	; 0x1b0 <hw_timer_overflow>
     2ea:	88 23       	and	r24, r24
     2ec:	e9 f3       	breq	.-6      	; 0x2e8 <hw_timer_wait_micro+0xa6>
     2ee:	ff 90       	pop	r15
     2f0:	ef 90       	pop	r14
     2f2:	df 90       	pop	r13
     2f4:	cf 90       	pop	r12
     2f6:	bf 90       	pop	r11
     2f8:	af 90       	pop	r10
     2fa:	9f 90       	pop	r9
     2fc:	8f 90       	pop	r8
     2fe:	08 95       	ret

00000300 <hw_timer_wait_milli>:
     300:	cf 93       	push	r28
     302:	df 93       	push	r29
     304:	ec 01       	movw	r28, r24
     306:	82 34       	cpi	r24, 0x42	; 66
     308:	91 05       	cpc	r25, r1
     30a:	40 f0       	brcs	.+16     	; 0x31c <hw_timer_wait_milli+0x1c>
     30c:	88 ee       	ldi	r24, 0xE8	; 232
     30e:	9d ef       	ldi	r25, 0xFD	; 253
     310:	98 df       	rcall	.-208    	; 0x242 <hw_timer_wait_micro>
     312:	c1 54       	subi	r28, 0x41	; 65
     314:	d0 40       	sbci	r29, 0x00	; 0
     316:	c2 34       	cpi	r28, 0x42	; 66
     318:	d1 05       	cpc	r29, r1
     31a:	c0 f7       	brcc	.-16     	; 0x30c <hw_timer_wait_milli+0xc>
     31c:	ce 01       	movw	r24, r28
     31e:	91 df       	rcall	.-222    	; 0x242 <hw_timer_wait_micro>
     320:	df 91       	pop	r29
     322:	cf 91       	pop	r28
     324:	08 95       	ret

00000326 <leds_init>:
     326:	6a 9a       	sbi	0x0d, 2	; 13
     328:	6b 9a       	sbi	0x0d, 3	; 13
     32a:	6c 9a       	sbi	0x0d, 4	; 13
     32c:	72 9a       	sbi	0x0e, 2	; 14
     32e:	73 9a       	sbi	0x0e, 3	; 14
     330:	74 9a       	sbi	0x0e, 4	; 14
     332:	08 95       	ret

00000334 <leds_on>:
     334:	81 30       	cpi	r24, 0x01	; 1
     336:	11 f4       	brne	.+4      	; 0x33c <leds_on+0x8>
     338:	72 98       	cbi	0x0e, 2	; 14
     33a:	08 95       	ret
     33c:	82 30       	cpi	r24, 0x02	; 2
     33e:	11 f4       	brne	.+4      	; 0x344 <leds_on+0x10>
     340:	73 98       	cbi	0x0e, 3	; 14
     342:	08 95       	ret
     344:	83 30       	cpi	r24, 0x03	; 3
     346:	09 f4       	brne	.+2      	; 0x34a <leds_on+0x16>
     348:	74 98       	cbi	0x0e, 4	; 14
     34a:	08 95       	ret

0000034c <leds_off>:
     34c:	81 30       	cpi	r24, 0x01	; 1
     34e:	11 f4       	brne	.+4      	; 0x354 <leds_off+0x8>
     350:	72 9a       	sbi	0x0e, 2	; 14
     352:	08 95       	ret
     354:	82 30       	cpi	r24, 0x02	; 2
     356:	11 f4       	brne	.+4      	; 0x35c <leds_off+0x10>
     358:	73 9a       	sbi	0x0e, 3	; 14
     35a:	08 95       	ret
     35c:	83 30       	cpi	r24, 0x03	; 3
     35e:	09 f4       	brne	.+2      	; 0x362 <leds_off+0x16>
     360:	74 9a       	sbi	0x0e, 4	; 14
     362:	08 95       	ret

00000364 <radio_init>:
     364:	ff 92       	push	r15
     366:	0f 93       	push	r16
     368:	1f 93       	push	r17
     36a:	cf 93       	push	r28
     36c:	df 93       	push	r29
     36e:	08 2f       	mov	r16, r24
     370:	19 2f       	mov	r17, r25
     372:	f6 2e       	mov	r15, r22
     374:	c9 e3       	ldi	r28, 0x39	; 57
     376:	d1 e0       	ldi	r29, 0x01	; 1
     378:	18 82       	st	Y, r1
     37a:	86 e0       	ldi	r24, 0x06	; 6
     37c:	90 e0       	ldi	r25, 0x00	; 0
     37e:	61 df       	rcall	.-318    	; 0x242 <hw_timer_wait_micro>
     380:	81 e0       	ldi	r24, 0x01	; 1
     382:	88 83       	st	Y, r24
     384:	80 91 41 01 	lds	r24, 0x0141
     388:	80 93 d0 02 	sts	0x02D0, r24
     38c:	88 23       	and	r24, r24
     38e:	51 f4       	brne	.+20     	; 0x3a4 <radio_init+0x40>
     390:	88 e0       	ldi	r24, 0x08	; 8
     392:	80 93 42 01 	sts	0x0142, r24
     396:	8e ef       	ldi	r24, 0xFE	; 254
     398:	91 e0       	ldi	r25, 0x01	; 1
     39a:	53 df       	rcall	.-346    	; 0x242 <hw_timer_wait_micro>
     39c:	80 91 41 01 	lds	r24, 0x0141
     3a0:	80 93 d0 02 	sts	0x02D0, r24
     3a4:	8b e0       	ldi	r24, 0x0B	; 11
     3a6:	80 93 48 01 	sts	0x0148, r24
     3aa:	8f ef       	ldi	r24, 0xFF	; 255
     3ac:	80 93 4f 01 	sts	0x014F, r24
     3b0:	00 93 d1 02 	sts	0x02D1, r16
     3b4:	10 93 d2 02 	sts	0x02D2, r17
     3b8:	00 93 60 01 	sts	0x0160, r16
     3bc:	10 93 61 01 	sts	0x0161, r17
     3c0:	10 92 62 01 	sts	0x0162, r1
     3c4:	10 92 63 01 	sts	0x0163, r1
     3c8:	80 91 41 01 	lds	r24, 0x0141
     3cc:	80 93 d0 02 	sts	0x02D0, r24
     3d0:	f0 92 d3 02 	sts	0x02D3, r15
     3d4:	df 91       	pop	r29
     3d6:	cf 91       	pop	r28
     3d8:	1f 91       	pop	r17
     3da:	0f 91       	pop	r16
     3dc:	ff 90       	pop	r15
     3de:	08 95       	ret

000003e0 <radio_start>:
     3e0:	8f ef       	ldi	r24, 0xFF	; 255
     3e2:	80 93 4f 01 	sts	0x014F, r24
     3e6:	86 e0       	ldi	r24, 0x06	; 6
     3e8:	80 93 42 01 	sts	0x0142, r24
     3ec:	e1 e4       	ldi	r30, 0x41	; 65
     3ee:	f1 e0       	ldi	r31, 0x01	; 1
     3f0:	80 81       	ld	r24, Z
     3f2:	8f 71       	andi	r24, 0x1F	; 31
     3f4:	86 30       	cpi	r24, 0x06	; 6
     3f6:	e1 f7       	brne	.-8      	; 0x3f0 <radio_start+0x10>
     3f8:	ec e4       	ldi	r30, 0x4C	; 76
     3fa:	f1 e0       	ldi	r31, 0x01	; 1
     3fc:	80 81       	ld	r24, Z
     3fe:	80 68       	ori	r24, 0x80	; 128
     400:	80 83       	st	Z, r24
     402:	08 95       	ret

00000404 <radio_tx_done>:
     404:	80 91 d4 02 	lds	r24, 0x02D4
     408:	10 92 d4 02 	sts	0x02D4, r1
     40c:	08 95       	ret

0000040e <radio_send>:
     40e:	2f ef       	ldi	r18, 0xFF	; 255
     410:	20 93 4f 01 	sts	0x014F, r18
     414:	20 91 41 01 	lds	r18, 0x0141
     418:	2f 71       	andi	r18, 0x1F	; 31
     41a:	29 30       	cpi	r18, 0x09	; 9
     41c:	41 f0       	breq	.+16     	; 0x42e <radio_send+0x20>
     41e:	29 e0       	ldi	r18, 0x09	; 9
     420:	20 93 42 01 	sts	0x0142, r18
     424:	e1 e4       	ldi	r30, 0x41	; 65
     426:	f1 e0       	ldi	r31, 0x01	; 1
     428:	20 81       	ld	r18, Z
     42a:	29 30       	cpi	r18, 0x09	; 9
     42c:	e9 f7       	brne	.-6      	; 0x428 <radio_send+0x1a>
     42e:	26 2f       	mov	r18, r22
     430:	23 5f       	subi	r18, 0xF3	; 243
     432:	20 93 80 01 	sts	0x0180, r18
     436:	20 e2       	ldi	r18, 0x20	; 32
     438:	20 93 81 01 	sts	0x0181, r18
     43c:	22 e2       	ldi	r18, 0x22	; 34
     43e:	20 93 82 01 	sts	0x0182, r18
     442:	21 e0       	ldi	r18, 0x01	; 1
     444:	20 93 83 01 	sts	0x0183, r18
     448:	10 92 84 01 	sts	0x0184, r1
     44c:	10 92 85 01 	sts	0x0185, r1
     450:	50 93 86 01 	sts	0x0186, r21
     454:	40 93 87 01 	sts	0x0187, r20
     458:	10 92 88 01 	sts	0x0188, r1
     45c:	10 92 89 01 	sts	0x0189, r1
     460:	20 91 d2 02 	lds	r18, 0x02D2
     464:	20 93 8a 01 	sts	0x018A, r18
     468:	20 91 d1 02 	lds	r18, 0x02D1
     46c:	20 93 8b 01 	sts	0x018B, r18
     470:	66 23       	and	r22, r22
     472:	91 f0       	breq	.+36     	; 0x498 <radio_send+0x8a>
     474:	a8 2f       	mov	r26, r24
     476:	b9 2f       	mov	r27, r25
     478:	61 50       	subi	r22, 0x01	; 1
     47a:	70 e0       	ldi	r23, 0x00	; 0
     47c:	cb 01       	movw	r24, r22
     47e:	83 57       	subi	r24, 0x73	; 115
     480:	9e 4f       	sbci	r25, 0xFE	; 254
     482:	ec e8       	ldi	r30, 0x8C	; 140
     484:	f1 e0       	ldi	r31, 0x01	; 1
     486:	2d 91       	ld	r18, X+
     488:	21 93       	st	Z+, r18
     48a:	e8 17       	cp	r30, r24
     48c:	f9 07       	cpc	r31, r25
     48e:	d9 f7       	brne	.-10     	; 0x486 <radio_send+0x78>
     490:	fb 01       	movw	r30, r22
     492:	e3 57       	subi	r30, 0x73	; 115
     494:	fe 4f       	sbci	r31, 0xFE	; 254
     496:	02 c0       	rjmp	.+4      	; 0x49c <radio_send+0x8e>
     498:	ec e8       	ldi	r30, 0x8C	; 140
     49a:	f1 e0       	ldi	r31, 0x01	; 1
     49c:	10 82       	st	Z, r1
     49e:	11 82       	std	Z+1, r1	; 0x01
     4a0:	82 e0       	ldi	r24, 0x02	; 2
     4a2:	80 93 42 01 	sts	0x0142, r24
     4a6:	ef e4       	ldi	r30, 0x4F	; 79
     4a8:	f1 e0       	ldi	r31, 0x01	; 1
     4aa:	80 81       	ld	r24, Z
     4ac:	86 ff       	sbrs	r24, 6
     4ae:	fd cf       	rjmp	.-6      	; 0x4aa <radio_send+0x9c>
     4b0:	8f ef       	ldi	r24, 0xFF	; 255
     4b2:	80 93 4f 01 	sts	0x014F, r24
     4b6:	86 e0       	ldi	r24, 0x06	; 6
     4b8:	80 93 42 01 	sts	0x0142, r24
     4bc:	e1 e4       	ldi	r30, 0x41	; 65
     4be:	f1 e0       	ldi	r31, 0x01	; 1
     4c0:	80 81       	ld	r24, Z
     4c2:	8f 71       	andi	r24, 0x1F	; 31
     4c4:	86 30       	cpi	r24, 0x06	; 6
     4c6:	e1 f7       	brne	.-8      	; 0x4c0 <radio_send+0xb2>
     4c8:	81 e0       	ldi	r24, 0x01	; 1
     4ca:	80 93 d4 02 	sts	0x02D4, r24
     4ce:	80 91 41 01 	lds	r24, 0x0141
     4d2:	80 93 d0 02 	sts	0x02D0, r24
     4d6:	08 95       	ret

000004d8 <radio_rxed>:
     4d8:	90 91 4f 01 	lds	r25, 0x014F
     4dc:	81 e0       	ldi	r24, 0x01	; 1
     4de:	93 ff       	sbrs	r25, 3
     4e0:	80 e0       	ldi	r24, 0x00	; 0
     4e2:	08 95       	ret

000004e4 <radio_recv>:
     4e4:	8f 92       	push	r8
     4e6:	9f 92       	push	r9
     4e8:	af 92       	push	r10
     4ea:	bf 92       	push	r11
     4ec:	cf 92       	push	r12
     4ee:	df 92       	push	r13
     4f0:	ef 92       	push	r14
     4f2:	ff 92       	push	r15
     4f4:	0f 93       	push	r16
     4f6:	1f 93       	push	r17
     4f8:	cf 93       	push	r28
     4fa:	78 2f       	mov	r23, r24
     4fc:	c9 2f       	mov	r28, r25
     4fe:	5a 01       	movw	r10, r20
     500:	49 01       	movw	r8, r18
     502:	40 91 7b 01 	lds	r20, 0x017B
     506:	8f ef       	ldi	r24, 0xFF	; 255
     508:	80 93 00 02 	sts	0x0200, r24
     50c:	ef e4       	ldi	r30, 0x4F	; 79
     50e:	f1 e0       	ldi	r31, 0x01	; 1
     510:	80 81       	ld	r24, Z
     512:	82 ff       	sbrs	r24, 2
     514:	fd cf       	rjmp	.-6      	; 0x510 <radio_recv+0x2c>
     516:	0c c0       	rjmp	.+24     	; 0x530 <radio_recv+0x4c>
     518:	80 81       	ld	r24, Z
     51a:	90 e0       	ldi	r25, 0x00	; 0
     51c:	8f 71       	andi	r24, 0x1F	; 31
     51e:	90 70       	andi	r25, 0x00	; 0
     520:	28 17       	cp	r18, r24
     522:	39 07       	cpc	r19, r25
     524:	64 f4       	brge	.+24     	; 0x53e <radio_recv+0x5a>
     526:	80 81       	ld	r24, Z
     528:	8f 71       	andi	r24, 0x1F	; 31
     52a:	80 93 00 02 	sts	0x0200, r24
     52e:	04 c0       	rjmp	.+8      	; 0x538 <radio_recv+0x54>
     530:	af e4       	ldi	r26, 0x4F	; 79
     532:	b1 e0       	ldi	r27, 0x01	; 1
     534:	e6 e4       	ldi	r30, 0x46	; 70
     536:	f1 e0       	ldi	r31, 0x01	; 1
     538:	20 91 00 02 	lds	r18, 0x0200
     53c:	30 e0       	ldi	r19, 0x00	; 0
     53e:	8c 91       	ld	r24, X
     540:	83 ff       	sbrs	r24, 3
     542:	ea cf       	rjmp	.-44     	; 0x518 <radio_recv+0x34>
     544:	84 2f       	mov	r24, r20
     546:	8b 50       	subi	r24, 0x0B	; 11
     548:	46 2f       	mov	r20, r22
     54a:	86 17       	cp	r24, r22
     54c:	08 f4       	brcc	.+2      	; 0x550 <radio_recv+0x6c>
     54e:	48 2f       	mov	r20, r24
     550:	30 91 85 01 	lds	r19, 0x0185
     554:	20 e0       	ldi	r18, 0x00	; 0
     556:	80 91 86 01 	lds	r24, 0x0186
     55a:	90 e0       	ldi	r25, 0x00	; 0
     55c:	82 2b       	or	r24, r18
     55e:	93 2b       	or	r25, r19
     560:	f5 01       	movw	r30, r10
     562:	91 83       	std	Z+1, r25	; 0x01
     564:	80 83       	st	Z, r24
     566:	30 91 89 01 	lds	r19, 0x0189
     56a:	20 e0       	ldi	r18, 0x00	; 0
     56c:	80 91 8a 01 	lds	r24, 0x018A
     570:	90 e0       	ldi	r25, 0x00	; 0
     572:	82 2b       	or	r24, r18
     574:	93 2b       	or	r25, r19
     576:	f4 01       	movw	r30, r8
     578:	91 83       	std	Z+1, r25	; 0x01
     57a:	80 83       	st	Z, r24
     57c:	44 23       	and	r20, r20
     57e:	99 f0       	breq	.+38     	; 0x5a6 <radio_recv+0xc2>
     580:	a7 2f       	mov	r26, r23
     582:	bc 2f       	mov	r27, r28
     584:	24 2f       	mov	r18, r20
     586:	21 50       	subi	r18, 0x01	; 1
     588:	30 e0       	ldi	r19, 0x00	; 0
     58a:	c9 01       	movw	r24, r18
     58c:	84 57       	subi	r24, 0x74	; 116
     58e:	9e 4f       	sbci	r25, 0xFE	; 254
     590:	eb e8       	ldi	r30, 0x8B	; 139
     592:	f1 e0       	ldi	r31, 0x01	; 1
     594:	51 91       	ld	r21, Z+
     596:	5d 93       	st	X+, r21
     598:	e8 17       	cp	r30, r24
     59a:	f9 07       	cpc	r31, r25
     59c:	d9 f7       	brne	.-10     	; 0x594 <radio_recv+0xb0>
     59e:	f9 01       	movw	r30, r18
     5a0:	e4 57       	subi	r30, 0x74	; 116
     5a2:	fe 4f       	sbci	r31, 0xFE	; 254
     5a4:	02 c0       	rjmp	.+4      	; 0x5aa <radio_recv+0xc6>
     5a6:	eb e8       	ldi	r30, 0x8B	; 139
     5a8:	f1 e0       	ldi	r31, 0x01	; 1
     5aa:	80 81       	ld	r24, Z
     5ac:	80 93 d5 02 	sts	0x02D5, r24
     5b0:	f6 01       	movw	r30, r12
     5b2:	80 83       	st	Z, r24
     5b4:	80 91 47 01 	lds	r24, 0x0147
     5b8:	80 93 d6 02 	sts	0x02D6, r24
     5bc:	f7 01       	movw	r30, r14
     5be:	80 83       	st	Z, r24
     5c0:	80 91 46 01 	lds	r24, 0x0146
     5c4:	88 1f       	adc	r24, r24
     5c6:	88 27       	eor	r24, r24
     5c8:	88 1f       	adc	r24, r24
     5ca:	f8 01       	movw	r30, r16
     5cc:	80 83       	st	Z, r24
     5ce:	e1 e4       	ldi	r30, 0x41	; 65
     5d0:	f1 e0       	ldi	r31, 0x01	; 1
     5d2:	80 81       	ld	r24, Z
     5d4:	8f 71       	andi	r24, 0x1F	; 31
     5d6:	86 30       	cpi	r24, 0x06	; 6
     5d8:	e1 f7       	brne	.-8      	; 0x5d2 <radio_recv+0xee>
     5da:	ec e4       	ldi	r30, 0x4C	; 76
     5dc:	f1 e0       	ldi	r31, 0x01	; 1
     5de:	80 81       	ld	r24, Z
     5e0:	8f 77       	andi	r24, 0x7F	; 127
     5e2:	80 83       	st	Z, r24
     5e4:	80 81       	ld	r24, Z
     5e6:	80 68       	ori	r24, 0x80	; 128
     5e8:	80 83       	st	Z, r24
     5ea:	8f ef       	ldi	r24, 0xFF	; 255
     5ec:	80 93 4f 01 	sts	0x014F, r24
     5f0:	80 91 41 01 	lds	r24, 0x0141
     5f4:	80 93 d0 02 	sts	0x02D0, r24
     5f8:	84 2f       	mov	r24, r20
     5fa:	82 50       	subi	r24, 0x02	; 2
     5fc:	cf 91       	pop	r28
     5fe:	1f 91       	pop	r17
     600:	0f 91       	pop	r16
     602:	ff 90       	pop	r15
     604:	ef 90       	pop	r14
     606:	df 90       	pop	r13
     608:	cf 90       	pop	r12
     60a:	bf 90       	pop	r11
     60c:	af 90       	pop	r10
     60e:	9f 90       	pop	r9
     610:	8f 90       	pop	r8
     612:	08 95       	ret

00000614 <radio_set_power>:
     614:	e5 e4       	ldi	r30, 0x45	; 69
     616:	f1 e0       	ldi	r31, 0x01	; 1
     618:	90 81       	ld	r25, Z
     61a:	8f 70       	andi	r24, 0x0F	; 15
     61c:	90 7f       	andi	r25, 0xF0	; 240
     61e:	98 2b       	or	r25, r24
     620:	90 83       	st	Z, r25
     622:	08 95       	ret

00000624 <radio_rssi>:
     624:	80 91 46 01 	lds	r24, 0x0146
     628:	8f 71       	andi	r24, 0x1F	; 31
     62a:	90 91 00 02 	lds	r25, 0x0200
     62e:	98 17       	cp	r25, r24
     630:	10 f4       	brcc	.+4      	; 0x636 <radio_rssi+0x12>
     632:	80 93 00 02 	sts	0x0200, r24
     636:	08 95       	ret

00000638 <radio_max_rssi>:
     638:	80 91 00 02 	lds	r24, 0x0200
     63c:	10 92 00 02 	sts	0x0200, r1
     640:	08 95       	ret

00000642 <radio_latest_energy>:
     642:	80 91 d6 02 	lds	r24, 0x02D6
     646:	08 95       	ret

00000648 <radio_latest_lqi>:
     648:	80 91 d5 02 	lds	r24, 0x02D5
     64c:	08 95       	ret

0000064e <radio_rx_all>:
     64e:	80 91 d3 02 	lds	r24, 0x02D3
     652:	08 95       	ret

00000654 <radio_getid>:
     654:	80 91 d1 02 	lds	r24, 0x02D1
     658:	90 91 d2 02 	lds	r25, 0x02D2
     65c:	08 95       	ret

0000065e <serial_init>:
     65e:	4f 92       	push	r4
     660:	5f 92       	push	r5
     662:	6f 92       	push	r6
     664:	7f 92       	push	r7
     666:	8f 92       	push	r8
     668:	9f 92       	push	r9
     66a:	af 92       	push	r10
     66c:	bf 92       	push	r11
     66e:	cf 92       	push	r12
     670:	df 92       	push	r13
     672:	ef 92       	push	r14
     674:	ff 92       	push	r15
     676:	4b 01       	movw	r8, r22
     678:	5c 01       	movw	r10, r24
     67a:	7c dd       	rcall	.-1288   	; 0x174 <hw_timer_cpuf>
     67c:	2b 01       	movw	r4, r22
     67e:	3c 01       	movw	r6, r24
     680:	68 94       	set
     682:	13 f8       	bld	r1, 3
     684:	76 94       	lsr	r7
     686:	67 94       	ror	r6
     688:	57 94       	ror	r5
     68a:	47 94       	ror	r4
     68c:	16 94       	lsr	r1
     68e:	d1 f7       	brne	.-12     	; 0x684 <serial_init+0x26>
     690:	0f 2e       	mov	r0, r31
     692:	fa e0       	ldi	r31, 0x0A	; 10
     694:	cf 2e       	mov	r12, r31
     696:	f0 e0       	ldi	r31, 0x00	; 0
     698:	df 2e       	mov	r13, r31
     69a:	f0 e0       	ldi	r31, 0x00	; 0
     69c:	ef 2e       	mov	r14, r31
     69e:	f0 e0       	ldi	r31, 0x00	; 0
     6a0:	ff 2e       	mov	r15, r31
     6a2:	f0 2d       	mov	r31, r0
     6a4:	c5 01       	movw	r24, r10
     6a6:	b4 01       	movw	r22, r8
     6a8:	a7 01       	movw	r20, r14
     6aa:	96 01       	movw	r18, r12
     6ac:	36 d5       	rcall	.+2668   	; 0x111a <__udivmodsi4>
     6ae:	c3 01       	movw	r24, r6
     6b0:	b2 01       	movw	r22, r4
     6b2:	33 d5       	rcall	.+2662   	; 0x111a <__udivmodsi4>
     6b4:	ca 01       	movw	r24, r20
     6b6:	b9 01       	movw	r22, r18
     6b8:	6b 5f       	subi	r22, 0xFB	; 251
     6ba:	7f 4f       	sbci	r23, 0xFF	; 255
     6bc:	8f 4f       	sbci	r24, 0xFF	; 255
     6be:	9f 4f       	sbci	r25, 0xFF	; 255
     6c0:	a7 01       	movw	r20, r14
     6c2:	96 01       	movw	r18, r12
     6c4:	2a d5       	rcall	.+2644   	; 0x111a <__udivmodsi4>
     6c6:	da 01       	movw	r26, r20
     6c8:	c9 01       	movw	r24, r18
     6ca:	01 97       	sbiw	r24, 0x01	; 1
     6cc:	a1 09       	sbc	r26, r1
     6ce:	b1 09       	sbc	r27, r1
     6d0:	e1 ec       	ldi	r30, 0xC1	; 193
     6d2:	f0 e0       	ldi	r31, 0x00	; 0
     6d4:	10 82       	st	Z, r1
     6d6:	10 92 c0 00 	sts	0x00C0, r1
     6da:	26 e0       	ldi	r18, 0x06	; 6
     6dc:	20 93 c2 00 	sts	0x00C2, r18
     6e0:	29 2f       	mov	r18, r25
     6e2:	2f 70       	andi	r18, 0x0F	; 15
     6e4:	20 93 c5 00 	sts	0x00C5, r18
     6e8:	80 93 c4 00 	sts	0x00C4, r24
     6ec:	88 e1       	ldi	r24, 0x18	; 24
     6ee:	80 83       	st	Z, r24
     6f0:	81 e0       	ldi	r24, 0x01	; 1
     6f2:	92 e0       	ldi	r25, 0x02	; 2
     6f4:	90 93 1f 04 	sts	0x041F, r25
     6f8:	80 93 1e 04 	sts	0x041E, r24
     6fc:	ee e1       	ldi	r30, 0x1E	; 30
     6fe:	f4 e0       	ldi	r31, 0x04	; 4
     700:	92 93       	st	-Z, r25
     702:	82 93       	st	-Z, r24
     704:	95 83       	std	Z+5, r25	; 0x05
     706:	84 83       	std	Z+4, r24	; 0x04
     708:	81 e0       	ldi	r24, 0x01	; 1
     70a:	80 93 d7 02 	sts	0x02D7, r24
     70e:	ff 90       	pop	r15
     710:	ef 90       	pop	r14
     712:	df 90       	pop	r13
     714:	cf 90       	pop	r12
     716:	bf 90       	pop	r11
     718:	af 90       	pop	r10
     71a:	9f 90       	pop	r9
     71c:	8f 90       	pop	r8
     71e:	7f 90       	pop	r7
     720:	6f 90       	pop	r6
     722:	5f 90       	pop	r5
     724:	4f 90       	pop	r4
     726:	08 95       	ret

00000728 <serial_is_init>:
     728:	80 91 d7 02 	lds	r24, 0x02D7
     72c:	08 95       	ret

0000072e <serial_put>:
     72e:	e0 ec       	ldi	r30, 0xC0	; 192
     730:	f0 e0       	ldi	r31, 0x00	; 0
     732:	90 81       	ld	r25, Z
     734:	95 ff       	sbrs	r25, 5
     736:	fd cf       	rjmp	.-6      	; 0x732 <serial_put+0x4>
     738:	80 93 c6 00 	sts	0x00C6, r24
     73c:	08 95       	ret

0000073e <write>:
     73e:	cf 93       	push	r28
     740:	c8 2f       	mov	r28, r24
     742:	f5 df       	rcall	.-22     	; 0x72e <serial_put>
     744:	8c 2f       	mov	r24, r28
     746:	90 e0       	ldi	r25, 0x00	; 0
     748:	cf 91       	pop	r28
     74a:	08 95       	ret

0000074c <serial_puts>:
     74c:	cf 93       	push	r28
     74e:	df 93       	push	r29
     750:	ec 01       	movw	r28, r24
     752:	88 81       	ld	r24, Y
     754:	88 23       	and	r24, r24
     756:	29 f0       	breq	.+10     	; 0x762 <serial_puts+0x16>
     758:	21 96       	adiw	r28, 0x01	; 1
     75a:	e9 df       	rcall	.-46     	; 0x72e <serial_put>
     75c:	89 91       	ld	r24, Y+
     75e:	88 23       	and	r24, r24
     760:	e1 f7       	brne	.-8      	; 0x75a <serial_puts+0xe>
     762:	df 91       	pop	r29
     764:	cf 91       	pop	r28
     766:	08 95       	ret

00000768 <serial_ready>:
     768:	80 91 c0 00 	lds	r24, 0x00C0
     76c:	88 1f       	adc	r24, r24
     76e:	88 27       	eor	r24, r24
     770:	88 1f       	adc	r24, r24
     772:	08 95       	ret

00000774 <serial_get>:
     774:	f9 df       	rcall	.-14     	; 0x768 <serial_ready>
     776:	88 23       	and	r24, r24
     778:	e9 f3       	breq	.-6      	; 0x774 <serial_get>
     77a:	80 91 c6 00 	lds	r24, 0x00C6
     77e:	08 95       	ret

00000780 <read>:
     780:	cf 93       	push	r28
     782:	f8 df       	rcall	.-16     	; 0x774 <serial_get>
     784:	c8 2f       	mov	r28, r24
     786:	d3 df       	rcall	.-90     	; 0x72e <serial_put>
     788:	8c 2f       	mov	r24, r28
     78a:	90 e0       	ldi	r25, 0x00	; 0
     78c:	cf 91       	pop	r28
     78e:	08 95       	ret

00000790 <os_timer_add>:
     790:	bc 01       	movw	r22, r24
     792:	40 91 dd 02 	lds	r20, 0x02DD
     796:	50 91 de 02 	lds	r21, 0x02DE
     79a:	48 17       	cp	r20, r24
     79c:	59 07       	cpc	r21, r25
     79e:	41 f1       	breq	.+80     	; 0x7f0 <os_timer_add+0x60>
     7a0:	af ed       	ldi	r26, 0xDF	; 223
     7a2:	b2 e0       	ldi	r27, 0x02	; 2
     7a4:	9d 01       	movw	r18, r26
     7a6:	2e 5e       	subi	r18, 0xEE	; 238
     7a8:	3f 4f       	sbci	r19, 0xFF	; 255
     7aa:	fd 01       	movw	r30, r26
     7ac:	81 91       	ld	r24, Z+
     7ae:	91 91       	ld	r25, Z+
     7b0:	86 17       	cp	r24, r22
     7b2:	97 07       	cpc	r25, r23
     7b4:	e9 f0       	breq	.+58     	; 0x7f0 <os_timer_add+0x60>
     7b6:	e2 17       	cp	r30, r18
     7b8:	f3 07       	cpc	r31, r19
     7ba:	c1 f7       	brne	.-16     	; 0x7ac <os_timer_add+0x1c>
     7bc:	41 15       	cp	r20, r1
     7be:	51 05       	cpc	r21, r1
     7c0:	41 f0       	breq	.+16     	; 0x7d2 <os_timer_add+0x42>
     7c2:	21 e0       	ldi	r18, 0x01	; 1
     7c4:	30 e0       	ldi	r19, 0x00	; 0
     7c6:	a9 01       	movw	r20, r18
     7c8:	8d 91       	ld	r24, X+
     7ca:	9d 91       	ld	r25, X+
     7cc:	00 97       	sbiw	r24, 0x00	; 0
     7ce:	59 f4       	brne	.+22     	; 0x7e6 <os_timer_add+0x56>
     7d0:	02 c0       	rjmp	.+4      	; 0x7d6 <os_timer_add+0x46>
     7d2:	40 e0       	ldi	r20, 0x00	; 0
     7d4:	50 e0       	ldi	r21, 0x00	; 0
     7d6:	fa 01       	movw	r30, r20
     7d8:	ee 0f       	add	r30, r30
     7da:	ff 1f       	adc	r31, r31
     7dc:	e3 52       	subi	r30, 0x23	; 35
     7de:	fd 4f       	sbci	r31, 0xFD	; 253
     7e0:	71 83       	std	Z+1, r23	; 0x01
     7e2:	60 83       	st	Z, r22
     7e4:	08 95       	ret
     7e6:	2f 5f       	subi	r18, 0xFF	; 255
     7e8:	3f 4f       	sbci	r19, 0xFF	; 255
     7ea:	2a 30       	cpi	r18, 0x0A	; 10
     7ec:	31 05       	cpc	r19, r1
     7ee:	59 f7       	brne	.-42     	; 0x7c6 <os_timer_add+0x36>
     7f0:	08 95       	ret

000007f2 <os_timer_tick>:
     7f2:	fc 01       	movw	r30, r24
     7f4:	00 97       	sbiw	r24, 0x00	; 0
     7f6:	29 f1       	breq	.+74     	; 0x842 <os_timer_tick+0x50>
     7f8:	80 81       	ld	r24, Z
     7fa:	88 23       	and	r24, r24
     7fc:	11 f1       	breq	.+68     	; 0x842 <os_timer_tick+0x50>
     7fe:	80 85       	ldd	r24, Z+8	; 0x08
     800:	91 85       	ldd	r25, Z+9	; 0x09
     802:	00 97       	sbiw	r24, 0x00	; 0
     804:	f1 f0       	breq	.+60     	; 0x842 <os_timer_tick+0x50>
     806:	66 23       	and	r22, r22
     808:	39 f0       	breq	.+14     	; 0x818 <os_timer_tick+0x26>
     80a:	22 81       	ldd	r18, Z+2	; 0x02
     80c:	21 30       	cpi	r18, 0x01	; 1
     80e:	c9 f4       	brne	.+50     	; 0x842 <os_timer_tick+0x50>
     810:	01 97       	sbiw	r24, 0x01	; 1
     812:	91 87       	std	Z+9, r25	; 0x09
     814:	80 87       	std	Z+8, r24	; 0x08
     816:	06 c0       	rjmp	.+12     	; 0x824 <os_timer_tick+0x32>
     818:	22 81       	ldd	r18, Z+2	; 0x02
     81a:	22 23       	and	r18, r18
     81c:	91 f4       	brne	.+36     	; 0x842 <os_timer_tick+0x50>
     81e:	01 97       	sbiw	r24, 0x01	; 1
     820:	91 87       	std	Z+9, r25	; 0x09
     822:	80 87       	std	Z+8, r24	; 0x08
     824:	80 85       	ldd	r24, Z+8	; 0x08
     826:	91 85       	ldd	r25, Z+9	; 0x09
     828:	00 97       	sbiw	r24, 0x00	; 0
     82a:	59 f4       	brne	.+22     	; 0x842 <os_timer_tick+0x50>
     82c:	81 e0       	ldi	r24, 0x01	; 1
     82e:	83 83       	std	Z+3, r24	; 0x03
     830:	86 81       	ldd	r24, Z+6	; 0x06
     832:	97 81       	ldd	r25, Z+7	; 0x07
     834:	00 97       	sbiw	r24, 0x00	; 0
     836:	19 f0       	breq	.+6      	; 0x83e <os_timer_tick+0x4c>
     838:	81 e0       	ldi	r24, 0x01	; 1
     83a:	81 83       	std	Z+1, r24	; 0x01
     83c:	01 c0       	rjmp	.+2      	; 0x840 <os_timer_tick+0x4e>
     83e:	11 82       	std	Z+1, r1	; 0x01
     840:	10 82       	st	Z, r1
     842:	08 95       	ret

00000844 <timer_init>:
     844:	fc 01       	movw	r30, r24
     846:	10 82       	st	Z, r1
     848:	11 82       	std	Z+1, r1	; 0x01
     84a:	62 83       	std	Z+2, r22	; 0x02
     84c:	13 82       	std	Z+3, r1	; 0x03
     84e:	55 83       	std	Z+5, r21	; 0x05
     850:	44 83       	std	Z+4, r20	; 0x04
     852:	37 83       	std	Z+7, r19	; 0x07
     854:	26 83       	std	Z+6, r18	; 0x06
     856:	9c cf       	rjmp	.-200    	; 0x790 <os_timer_add>

00000858 <timer_start>:
     858:	fc 01       	movw	r30, r24
     85a:	80 81       	ld	r24, Z
     85c:	88 23       	and	r24, r24
     85e:	41 f4       	brne	.+16     	; 0x870 <timer_start+0x18>
     860:	81 e0       	ldi	r24, 0x01	; 1
     862:	80 83       	st	Z, r24
     864:	11 82       	std	Z+1, r1	; 0x01
     866:	13 82       	std	Z+3, r1	; 0x03
     868:	84 81       	ldd	r24, Z+4	; 0x04
     86a:	95 81       	ldd	r25, Z+5	; 0x05
     86c:	91 87       	std	Z+9, r25	; 0x09
     86e:	80 87       	std	Z+8, r24	; 0x08
     870:	cf 01       	movw	r24, r30
     872:	8e cf       	rjmp	.-228    	; 0x790 <os_timer_add>

00000874 <timer_stop>:
     874:	fc 01       	movw	r30, r24
     876:	10 82       	st	Z, r1
     878:	11 82       	std	Z+1, r1	; 0x01
     87a:	08 95       	ret

0000087c <main>:
     87c:	cf 93       	push	r28
     87e:	df 93       	push	r29
     880:	cd b7       	in	r28, 0x3d	; 61
     882:	de b7       	in	r29, 0x3e	; 62
     884:	27 97       	sbiw	r28, 0x07	; 7
     886:	0f b6       	in	r0, 0x3f	; 63
     888:	f8 94       	cli
     88a:	de bf       	out	0x3e, r29	; 62
     88c:	0f be       	out	0x3f, r0	; 63
     88e:	cd bf       	out	0x3d, r28	; 61
     890:	0d ed       	ldi	r16, 0xDD	; 221
     892:	12 e0       	ldi	r17, 0x02	; 2
     894:	0f 2e       	mov	r0, r31
     896:	f4 e1       	ldi	r31, 0x14	; 20
     898:	af 2e       	mov	r10, r31
     89a:	bb 24       	eor	r11, r11
     89c:	f0 2d       	mov	r31, r0
     89e:	a0 0e       	add	r10, r16
     8a0:	b1 1e       	adc	r11, r17
     8a2:	f8 01       	movw	r30, r16
     8a4:	11 92       	st	Z+, r1
     8a6:	11 92       	st	Z+, r1
     8a8:	ea 15       	cp	r30, r10
     8aa:	fb 05       	cpc	r31, r11
     8ac:	d9 f7       	brne	.-10     	; 0x8a4 <main+0x28>
     8ae:	67 dc       	rcall	.-1842   	; 0x17e <hw_timer_init>
     8b0:	88 d1       	rcall	.+784    	; 0xbc2 <application_start>
     8b2:	44 24       	eor	r4, r4
     8b4:	55 24       	eor	r5, r5
     8b6:	33 24       	eor	r3, r3
     8b8:	70 2e       	mov	r7, r16
     8ba:	61 2e       	mov	r6, r17
     8bc:	0f 2e       	mov	r0, r31
     8be:	fd ed       	ldi	r31, 0xDD	; 221
     8c0:	8f 2e       	mov	r8, r31
     8c2:	f2 e0       	ldi	r31, 0x02	; 2
     8c4:	9f 2e       	mov	r9, r31
     8c6:	f0 2d       	mov	r31, r0
     8c8:	9d dd       	rcall	.-1222   	; 0x404 <radio_tx_done>
     8ca:	88 23       	and	r24, r24
     8cc:	09 f0       	breq	.+2      	; 0x8d0 <main+0x54>
     8ce:	e3 d3       	rcall	.+1990   	; 0x1096 <application_radio_tx_done>
     8d0:	03 de       	rcall	.-1018   	; 0x4d8 <radio_rxed>
     8d2:	88 23       	and	r24, r24
     8d4:	89 f1       	breq	.+98     	; 0x938 <main+0xbc>
     8d6:	81 ef       	ldi	r24, 0xF1	; 241
     8d8:	92 e0       	ldi	r25, 0x02	; 2
     8da:	60 e8       	ldi	r22, 0x80	; 128
     8dc:	ae 01       	movw	r20, r28
     8de:	4a 5f       	subi	r20, 0xFA	; 250
     8e0:	5f 4f       	sbci	r21, 0xFF	; 255
     8e2:	9e 01       	movw	r18, r28
     8e4:	2c 5f       	subi	r18, 0xFC	; 252
     8e6:	3f 4f       	sbci	r19, 0xFF	; 255
     8e8:	8e 01       	movw	r16, r28
     8ea:	0d 5f       	subi	r16, 0xFD	; 253
     8ec:	1f 4f       	sbci	r17, 0xFF	; 255
     8ee:	ee 24       	eor	r14, r14
     8f0:	ff 24       	eor	r15, r15
     8f2:	68 94       	set
     8f4:	e1 f8       	bld	r14, 1
     8f6:	ec 0e       	add	r14, r28
     8f8:	fd 1e       	adc	r15, r29
     8fa:	6e 01       	movw	r12, r28
     8fc:	08 94       	sec
     8fe:	c1 1c       	adc	r12, r1
     900:	d1 1c       	adc	r13, r1
     902:	f0 dd       	rcall	.-1056   	; 0x4e4 <radio_recv>
     904:	08 2f       	mov	r16, r24
     906:	8b 81       	ldd	r24, Y+3	; 0x03
     908:	88 23       	and	r24, r24
     90a:	b1 f0       	breq	.+44     	; 0x938 <main+0xbc>
     90c:	a3 de       	rcall	.-698    	; 0x654 <radio_getid>
     90e:	2e 81       	ldd	r18, Y+6	; 0x06
     910:	3f 81       	ldd	r19, Y+7	; 0x07
     912:	82 17       	cp	r24, r18
     914:	93 07       	cpc	r25, r19
     916:	39 f0       	breq	.+14     	; 0x926 <main+0xaa>
     918:	8f ef       	ldi	r24, 0xFF	; 255
     91a:	2f 3f       	cpi	r18, 0xFF	; 255
     91c:	38 07       	cpc	r19, r24
     91e:	19 f0       	breq	.+6      	; 0x926 <main+0xaa>
     920:	96 de       	rcall	.-724    	; 0x64e <radio_rx_all>
     922:	88 23       	and	r24, r24
     924:	49 f0       	breq	.+18     	; 0x938 <main+0xbc>
     926:	6c 81       	ldd	r22, Y+4	; 0x04
     928:	7d 81       	ldd	r23, Y+5	; 0x05
     92a:	8e 81       	ldd	r24, Y+6	; 0x06
     92c:	9f 81       	ldd	r25, Y+7	; 0x07
     92e:	40 2f       	mov	r20, r16
     930:	50 e0       	ldi	r21, 0x00	; 0
     932:	21 ef       	ldi	r18, 0xF1	; 241
     934:	32 e0       	ldi	r19, 0x02	; 2
     936:	b5 d1       	rcall	.+874    	; 0xca2 <application_radio_rx_msg>
     938:	48 dc       	rcall	.-1904   	; 0x1ca <hw_timer_now_us>
     93a:	dc 01       	movw	r26, r24
     93c:	cb 01       	movw	r24, r22
     93e:	40 91 d8 02 	lds	r20, 0x02D8
     942:	50 91 d9 02 	lds	r21, 0x02D9
     946:	60 91 da 02 	lds	r22, 0x02DA
     94a:	70 91 db 02 	lds	r23, 0x02DB
     94e:	48 17       	cp	r20, r24
     950:	59 07       	cpc	r21, r25
     952:	6a 07       	cpc	r22, r26
     954:	7b 07       	cpc	r23, r27
     956:	78 f5       	brcc	.+94     	; 0x9b6 <main+0x13a>
     958:	38 dc       	rcall	.-1936   	; 0x1ca <hw_timer_now_us>
     95a:	dc 01       	movw	r26, r24
     95c:	cb 01       	movw	r24, r22
     95e:	88 51       	subi	r24, 0x18	; 24
     960:	9c 4f       	sbci	r25, 0xFC	; 252
     962:	af 4f       	sbci	r26, 0xFF	; 255
     964:	bf 4f       	sbci	r27, 0xFF	; 255
     966:	80 93 d8 02 	sts	0x02D8, r24
     96a:	90 93 d9 02 	sts	0x02D9, r25
     96e:	a0 93 da 02 	sts	0x02DA, r26
     972:	b0 93 db 02 	sts	0x02DB, r27
     976:	07 2d       	mov	r16, r7
     978:	16 2d       	mov	r17, r6
     97a:	d8 01       	movw	r26, r16
     97c:	8d 91       	ld	r24, X+
     97e:	9d 91       	ld	r25, X+
     980:	8d 01       	movw	r16, r26
     982:	61 e0       	ldi	r22, 0x01	; 1
     984:	36 df       	rcall	.-404    	; 0x7f2 <os_timer_tick>
     986:	0a 15       	cp	r16, r10
     988:	1b 05       	cpc	r17, r11
     98a:	b9 f7       	brne	.-18     	; 0x97a <main+0xfe>
     98c:	08 94       	sec
     98e:	41 1c       	adc	r4, r1
     990:	51 1c       	adc	r5, r1
     992:	b8 ee       	ldi	r27, 0xE8	; 232
     994:	4b 16       	cp	r4, r27
     996:	b3 e0       	ldi	r27, 0x03	; 3
     998:	5b 06       	cpc	r5, r27
     99a:	68 f0       	brcs	.+26     	; 0x9b6 <main+0x13a>
     99c:	07 2d       	mov	r16, r7
     99e:	16 2d       	mov	r17, r6
     9a0:	f8 01       	movw	r30, r16
     9a2:	81 91       	ld	r24, Z+
     9a4:	91 91       	ld	r25, Z+
     9a6:	8f 01       	movw	r16, r30
     9a8:	60 e0       	ldi	r22, 0x00	; 0
     9aa:	23 df       	rcall	.-442    	; 0x7f2 <os_timer_tick>
     9ac:	a0 16       	cp	r10, r16
     9ae:	b1 06       	cpc	r11, r17
     9b0:	b9 f7       	brne	.-18     	; 0x9a0 <main+0x124>
     9b2:	44 24       	eor	r4, r4
     9b4:	55 24       	eor	r5, r5
     9b6:	a7 2d       	mov	r26, r7
     9b8:	b6 2d       	mov	r27, r6
     9ba:	00 e0       	ldi	r16, 0x00	; 0
     9bc:	10 e0       	ldi	r17, 0x00	; 0
     9be:	ed 91       	ld	r30, X+
     9c0:	fd 91       	ld	r31, X+
     9c2:	30 97       	sbiw	r30, 0x00	; 0
     9c4:	71 f1       	breq	.+92     	; 0xa22 <main+0x1a6>
     9c6:	83 81       	ldd	r24, Z+3	; 0x03
     9c8:	88 23       	and	r24, r24
     9ca:	59 f1       	breq	.+86     	; 0xa22 <main+0x1a6>
     9cc:	cf 01       	movw	r24, r30
     9ce:	16 d1       	rcall	.+556    	; 0xbfc <application_timer_tick>
     9d0:	c8 01       	movw	r24, r16
     9d2:	88 0f       	add	r24, r24
     9d4:	99 1f       	adc	r25, r25
     9d6:	88 0d       	add	r24, r8
     9d8:	99 1d       	adc	r25, r9
     9da:	dc 01       	movw	r26, r24
     9dc:	ed 91       	ld	r30, X+
     9de:	fc 91       	ld	r31, X
     9e0:	11 97       	sbiw	r26, 0x01	; 1
     9e2:	13 82       	std	Z+3, r1	; 0x03
     9e4:	81 81       	ldd	r24, Z+1	; 0x01
     9e6:	88 23       	and	r24, r24
     9e8:	41 f0       	breq	.+16     	; 0x9fa <main+0x17e>
     9ea:	86 81       	ldd	r24, Z+6	; 0x06
     9ec:	97 81       	ldd	r25, Z+7	; 0x07
     9ee:	00 97       	sbiw	r24, 0x00	; 0
     9f0:	21 f0       	breq	.+8      	; 0x9fa <main+0x17e>
     9f2:	91 87       	std	Z+9, r25	; 0x09
     9f4:	80 87       	std	Z+8, r24	; 0x08
     9f6:	81 e0       	ldi	r24, 0x01	; 1
     9f8:	80 83       	st	Z, r24
     9fa:	11 82       	std	Z+1, r1	; 0x01
     9fc:	b3 db       	rcall	.-2202   	; 0x164 <button_pressed>
     9fe:	88 23       	and	r24, r24
     a00:	31 f0       	breq	.+12     	; 0xa0e <main+0x192>
     a02:	33 20       	and	r3, r3
     a04:	21 f4       	brne	.+8      	; 0xa0e <main+0x192>
     a06:	78 d3       	rcall	.+1776   	; 0x10f8 <application_button_pressed>
     a08:	33 24       	eor	r3, r3
     a0a:	33 94       	inc	r3
     a0c:	5d cf       	rjmp	.-326    	; 0x8c8 <main+0x4c>
     a0e:	ae db       	rcall	.-2212   	; 0x16c <button_released>
     a10:	88 23       	and	r24, r24
     a12:	09 f4       	brne	.+2      	; 0xa16 <main+0x19a>
     a14:	59 cf       	rjmp	.-334    	; 0x8c8 <main+0x4c>
     a16:	33 20       	and	r3, r3
     a18:	09 f4       	brne	.+2      	; 0xa1c <main+0x1a0>
     a1a:	56 cf       	rjmp	.-340    	; 0x8c8 <main+0x4c>
     a1c:	6e d3       	rcall	.+1756   	; 0x10fa <application_button_released>
     a1e:	33 24       	eor	r3, r3
     a20:	53 cf       	rjmp	.-346    	; 0x8c8 <main+0x4c>
     a22:	0f 5f       	subi	r16, 0xFF	; 255
     a24:	1f 4f       	sbci	r17, 0xFF	; 255
     a26:	0a 30       	cpi	r16, 0x0A	; 10
     a28:	11 05       	cpc	r17, r1
     a2a:	49 f6       	brne	.-110    	; 0x9be <main+0x142>
     a2c:	e7 cf       	rjmp	.-50     	; 0x9fc <main+0x180>

00000a2e <encrypt>:
Encryption part of AES cipher
See section 9.8.8 of Atmega128RFA1 datasheet for details
*/
void encrypt(){
	// reset AES pointers
	temp=AES_CTRL;
     a2e:	80 91 3c 01 	lds	r24, 0x013C
     a32:	80 93 80 03 	sts	0x0380, r24

	for (i=0; i<16; i++)
     a36:	10 92 02 04 	sts	0x0402, r1
     a3a:	10 92 01 04 	sts	0x0401, r1
     a3e:	80 e0       	ldi	r24, 0x00	; 0
     a40:	90 e0       	ldi	r25, 0x00	; 0
	AES_KEY = aesKey[i];
     a42:	ef e3       	ldi	r30, 0x3F	; 63
     a44:	f1 e0       	ldi	r31, 0x01	; 1
     a46:	dc 01       	movw	r26, r24
     a48:	ad 5e       	subi	r26, 0xED	; 237
     a4a:	bd 4f       	sbci	r27, 0xFD	; 253
     a4c:	8c 91       	ld	r24, X
     a4e:	80 83       	st	Z, r24
*/
void encrypt(){
	// reset AES pointers
	temp=AES_CTRL;

	for (i=0; i<16; i++)
     a50:	80 91 01 04 	lds	r24, 0x0401
     a54:	90 91 02 04 	lds	r25, 0x0402
     a58:	01 96       	adiw	r24, 0x01	; 1
     a5a:	90 93 02 04 	sts	0x0402, r25
     a5e:	80 93 01 04 	sts	0x0401, r24
     a62:	80 31       	cpi	r24, 0x10	; 16
     a64:	91 05       	cpc	r25, r1
     a66:	78 f3       	brcs	.-34     	; 0xa46 <encrypt+0x18>
	AES_KEY = aesKey[i];

	// set mode=encrypt
	AES_CTRL = 0;
     a68:	10 92 3c 01 	sts	0x013C, r1

	// write data - must be 16 bytes
	for (i=0; i<16; i++)
     a6c:	10 92 02 04 	sts	0x0402, r1
     a70:	10 92 01 04 	sts	0x0401, r1
     a74:	80 e0       	ldi	r24, 0x00	; 0
     a76:	90 e0       	ldi	r25, 0x00	; 0
	AES_STATE = plaintext[i];
     a78:	ee e3       	ldi	r30, 0x3E	; 62
     a7a:	f1 e0       	ldi	r31, 0x01	; 1
     a7c:	dc 01       	movw	r26, r24
     a7e:	ab 5b       	subi	r26, 0xBB	; 187
     a80:	bd 4f       	sbci	r27, 0xFD	; 253
     a82:	8c 91       	ld	r24, X
     a84:	80 83       	st	Z, r24

	// set mode=encrypt
	AES_CTRL = 0;

	// write data - must be 16 bytes
	for (i=0; i<16; i++)
     a86:	80 91 01 04 	lds	r24, 0x0401
     a8a:	90 91 02 04 	lds	r25, 0x0402
     a8e:	01 96       	adiw	r24, 0x01	; 1
     a90:	90 93 02 04 	sts	0x0402, r25
     a94:	80 93 01 04 	sts	0x0401, r24
     a98:	80 31       	cpi	r24, 0x10	; 16
     a9a:	91 05       	cpc	r25, r1
     a9c:	78 f3       	brcs	.-34     	; 0xa7c <encrypt+0x4e>
	AES_STATE = plaintext[i];

	// start operation - with ECB encrypt no interrupts
	AES_CTRL = (1<<AES_REQUEST);
     a9e:	80 e8       	ldi	r24, 0x80	; 128
     aa0:	80 93 3c 01 	sts	0x013C, r24

	// poll for completion
	unsigned char c0=0,c1=0;
	while (!AES_STATUS_struct.aes_done) c0++;
     aa4:	ed e3       	ldi	r30, 0x3D	; 61
     aa6:	f1 e0       	ldi	r31, 0x01	; 1
     aa8:	80 81       	ld	r24, Z
     aaa:	80 ff       	sbrs	r24, 0
     aac:	fd cf       	rjmp	.-6      	; 0xaa8 <encrypt+0x7a>

	// read data
	for (i=0; i<16; i++)
     aae:	10 92 02 04 	sts	0x0402, r1
     ab2:	10 92 01 04 	sts	0x0401, r1
     ab6:	43 e2       	ldi	r20, 0x23	; 35
     ab8:	52 e0       	ldi	r21, 0x02	; 2
     aba:	23 e3       	ldi	r18, 0x33	; 51
     abc:	32 e0       	ldi	r19, 0x02	; 2
     abe:	fa 01       	movw	r30, r20
	crypto[i] = AES_STATE;
     ac0:	ae e3       	ldi	r26, 0x3E	; 62
     ac2:	b1 e0       	ldi	r27, 0x01	; 1
     ac4:	8c 91       	ld	r24, X
     ac6:	81 93       	st	Z+, r24
     ac8:	cf 01       	movw	r24, r30
     aca:	84 1b       	sub	r24, r20
     acc:	95 0b       	sbc	r25, r21
	// poll for completion
	unsigned char c0=0,c1=0;
	while (!AES_STATUS_struct.aes_done) c0++;

	// read data
	for (i=0; i<16; i++)
     ace:	90 93 02 04 	sts	0x0402, r25
     ad2:	80 93 01 04 	sts	0x0401, r24
     ad6:	e2 17       	cp	r30, r18
     ad8:	f3 07       	cpc	r31, r19
     ada:	a1 f7       	brne	.-24     	; 0xac4 <encrypt+0x96>
	crypto[i] = AES_STATE;
	
	// read key for decryption
	for (i=0; i<16; i++)
     adc:	10 92 02 04 	sts	0x0402, r1
     ae0:	10 92 01 04 	sts	0x0401, r1
     ae4:	43 e1       	ldi	r20, 0x13	; 19
     ae6:	52 e0       	ldi	r21, 0x02	; 2
     ae8:	23 e2       	ldi	r18, 0x23	; 35
     aea:	32 e0       	ldi	r19, 0x02	; 2
     aec:	fa 01       	movw	r30, r20
	aesKey[i] = AES_KEY;
     aee:	af e3       	ldi	r26, 0x3F	; 63
     af0:	b1 e0       	ldi	r27, 0x01	; 1
     af2:	8c 91       	ld	r24, X
     af4:	81 93       	st	Z+, r24
     af6:	cf 01       	movw	r24, r30
     af8:	84 1b       	sub	r24, r20
     afa:	95 0b       	sbc	r25, r21
	// read data
	for (i=0; i<16; i++)
	crypto[i] = AES_STATE;
	
	// read key for decryption
	for (i=0; i<16; i++)
     afc:	90 93 02 04 	sts	0x0402, r25
     b00:	80 93 01 04 	sts	0x0401, r24
     b04:	e2 17       	cp	r30, r18
     b06:	f3 07       	cpc	r31, r19
     b08:	a1 f7       	brne	.-24     	; 0xaf2 <encrypt+0xc4>
	aesKey[i] = AES_KEY;
	
	crypto[16] = '\0';
     b0a:	10 92 33 02 	sts	0x0233, r1
     b0e:	08 95       	ret

00000b10 <decryptMeth>:
Decryption part of AES cipher
See section 9.8.8 of ATmega128RFA1 datasheet for details
*/
void decryptMeth(){
	// read ctrl to reset pointers
	temp=AES_CTRL;
     b10:	80 91 3c 01 	lds	r24, 0x013C
     b14:	80 93 80 03 	sts	0x0380, r24

	// rewrite key
	for (i=0; i<16; i++)
     b18:	10 92 02 04 	sts	0x0402, r1
     b1c:	10 92 01 04 	sts	0x0401, r1
     b20:	80 e0       	ldi	r24, 0x00	; 0
     b22:	90 e0       	ldi	r25, 0x00	; 0
	AES_KEY = aesKey[i];
     b24:	ef e3       	ldi	r30, 0x3F	; 63
     b26:	f1 e0       	ldi	r31, 0x01	; 1
     b28:	dc 01       	movw	r26, r24
     b2a:	ad 5e       	subi	r26, 0xED	; 237
     b2c:	bd 4f       	sbci	r27, 0xFD	; 253
     b2e:	8c 91       	ld	r24, X
     b30:	80 83       	st	Z, r24
void decryptMeth(){
	// read ctrl to reset pointers
	temp=AES_CTRL;

	// rewrite key
	for (i=0; i<16; i++)
     b32:	80 91 01 04 	lds	r24, 0x0401
     b36:	90 91 02 04 	lds	r25, 0x0402
     b3a:	01 96       	adiw	r24, 0x01	; 1
     b3c:	90 93 02 04 	sts	0x0402, r25
     b40:	80 93 01 04 	sts	0x0401, r24
     b44:	80 31       	cpi	r24, 0x10	; 16
     b46:	91 05       	cpc	r25, r1
     b48:	78 f3       	brcs	.-34     	; 0xb28 <decryptMeth+0x18>
	AES_KEY = aesKey[i];

	// set mode=decrypt
	AES_CTRL = (1<<AES_DIR);
     b4a:	88 e0       	ldi	r24, 0x08	; 8
     b4c:	80 93 3c 01 	sts	0x013C, r24

	// write crypto text
	for (i=0; i<16; i++)
     b50:	10 92 02 04 	sts	0x0402, r1
     b54:	10 92 01 04 	sts	0x0401, r1
     b58:	80 e0       	ldi	r24, 0x00	; 0
     b5a:	90 e0       	ldi	r25, 0x00	; 0
	AES_STATE = crypto[i];
     b5c:	ee e3       	ldi	r30, 0x3E	; 62
     b5e:	f1 e0       	ldi	r31, 0x01	; 1
     b60:	dc 01       	movw	r26, r24
     b62:	ad 5d       	subi	r26, 0xDD	; 221
     b64:	bd 4f       	sbci	r27, 0xFD	; 253
     b66:	8c 91       	ld	r24, X
     b68:	80 83       	st	Z, r24

	// set mode=decrypt
	AES_CTRL = (1<<AES_DIR);

	// write crypto text
	for (i=0; i<16; i++)
     b6a:	80 91 01 04 	lds	r24, 0x0401
     b6e:	90 91 02 04 	lds	r25, 0x0402
     b72:	01 96       	adiw	r24, 0x01	; 1
     b74:	90 93 02 04 	sts	0x0402, r25
     b78:	80 93 01 04 	sts	0x0401, r24
     b7c:	80 31       	cpi	r24, 0x10	; 16
     b7e:	91 05       	cpc	r25, r1
     b80:	78 f3       	brcs	.-34     	; 0xb60 <decryptMeth+0x50>
	AES_STATE = crypto[i];

	// start operation - ECB decrypt with no interrupts
	AES_CTRL = (1<<AES_REQUEST) | (1<<AES_DIR);
     b82:	88 e8       	ldi	r24, 0x88	; 136
     b84:	80 93 3c 01 	sts	0x013C, r24

	// poll for completion
	while (!AES_STATUS_struct.aes_done);
     b88:	ed e3       	ldi	r30, 0x3D	; 61
     b8a:	f1 e0       	ldi	r31, 0x01	; 1
     b8c:	80 81       	ld	r24, Z
     b8e:	80 ff       	sbrs	r24, 0
     b90:	fd cf       	rjmp	.-6      	; 0xb8c <decryptMeth+0x7c>

	// read data
	for (i=0; i<16; i++)
     b92:	10 92 02 04 	sts	0x0402, r1
     b96:	10 92 01 04 	sts	0x0401, r1
     b9a:	44 e3       	ldi	r20, 0x34	; 52
     b9c:	52 e0       	ldi	r21, 0x02	; 2
     b9e:	24 e4       	ldi	r18, 0x44	; 68
     ba0:	32 e0       	ldi	r19, 0x02	; 2
     ba2:	fa 01       	movw	r30, r20
	decrypt[i] = AES_STATE;
     ba4:	ae e3       	ldi	r26, 0x3E	; 62
     ba6:	b1 e0       	ldi	r27, 0x01	; 1
     ba8:	8c 91       	ld	r24, X
     baa:	81 93       	st	Z+, r24
     bac:	cf 01       	movw	r24, r30
     bae:	84 1b       	sub	r24, r20
     bb0:	95 0b       	sbc	r25, r21

	// poll for completion
	while (!AES_STATUS_struct.aes_done);

	// read data
	for (i=0; i<16; i++)
     bb2:	90 93 02 04 	sts	0x0402, r25
     bb6:	80 93 01 04 	sts	0x0401, r24
     bba:	e2 17       	cp	r30, r18
     bbc:	f3 07       	cpc	r31, r19
     bbe:	a1 f7       	brne	.-24     	; 0xba8 <decryptMeth+0x98>
	decrypt[i] = AES_STATE;
}
     bc0:	08 95       	ret

00000bc2 <application_start>:

void application_start()
{
	srand(hw_timer_now_us()); //TODO: use hardware random number generator
     bc2:	03 db       	rcall	.-2554   	; 0x1ca <hw_timer_now_us>
     bc4:	cb 01       	movw	r24, r22
     bc6:	4a d3       	rcall	.+1684   	; 0x125c <srand>
	//Since this is at the very start does it generate the same random numbers every time?
	leds_init();
     bc8:	ae db       	rcall	.-2212   	; 0x326 <leds_init>
	button_init();
     bca:	c9 da       	rcall	.-2670   	; 0x15e <button_init>
	
	radio_init(NODE_ID, false);
     bcc:	60 e0       	ldi	r22, 0x00	; 0
     bce:	82 e0       	ldi	r24, 0x02	; 2
     bd0:	90 e0       	ldi	r25, 0x00	; 0
     bd2:	c8 db       	rcall	.-2160   	; 0x364 <radio_init>
	radio_set_power(1);
     bd4:	81 e0       	ldi	r24, 0x01	; 1
     bd6:	1e dd       	rcall	.-1476   	; 0x614 <radio_set_power>
	radio_start();
     bd8:	03 dc       	rcall	.-2042   	; 0x3e0 <radio_start>
	
	serial_init(9600);
     bda:	60 e8       	ldi	r22, 0x80	; 128
     bdc:	75 e2       	ldi	r23, 0x25	; 37
     bde:	80 e0       	ldi	r24, 0x00	; 0
     be0:	90 e0       	ldi	r25, 0x00	; 0
     be2:	3d dd       	rcall	.-1414   	; 0x65e <serial_init>
	
	timer_init(&timer1, TIMER_MILLISECONDS, 1000, 100);
     be4:	24 e6       	ldi	r18, 0x64	; 100
     be6:	30 e0       	ldi	r19, 0x00	; 0
     be8:	48 ee       	ldi	r20, 0xE8	; 232
     bea:	53 e0       	ldi	r21, 0x03	; 3
     bec:	61 e0       	ldi	r22, 0x01	; 1
     bee:	82 e7       	ldi	r24, 0x72	; 114
     bf0:	93 e0       	ldi	r25, 0x03	; 3
     bf2:	28 de       	rcall	.-944    	; 0x844 <timer_init>
	timer_start(&timer1);
     bf4:	82 e7       	ldi	r24, 0x72	; 114
     bf6:	93 e0       	ldi	r25, 0x03	; 3
     bf8:	2f ce       	rjmp	.-930    	; 0x858 <timer_start>
     bfa:	08 95       	ret

00000bfc <application_timer_tick>:
	printf("random number: %u\r\n", rand);
	num = rand;
}*/

void application_timer_tick(timer *t)
{
     bfc:	cf 93       	push	r28
     bfe:	df 93       	push	r29
	//TODO: after a random amount of time, send a NACK.
	if(canSend){
     c00:	80 91 71 03 	lds	r24, 0x0371
     c04:	88 23       	and	r24, r24
     c06:	09 f4       	brne	.+2      	; 0xc0a <application_timer_tick+0xe>
     c08:	49 c0       	rjmp	.+146    	; 0xc9c <application_timer_tick+0xa0>
		if(tx_buffer_inuse == false)
     c0a:	80 91 7d 03 	lds	r24, 0x037D
     c0e:	81 11       	cpse	r24, r1
     c10:	45 c0       	rjmp	.+138    	; 0xc9c <application_timer_tick+0xa0>
		{
			tx_buffer_inuse = true;
     c12:	81 e0       	ldi	r24, 0x01	; 1
     c14:	80 93 7d 03 	sts	0x037D, r24
			canSend = false;
     c18:	10 92 71 03 	sts	0x0371, r1
			memcpy(&tx_buffer, &newPkt, sizeof(Packet));
     c1c:	85 e1       	ldi	r24, 0x15	; 21
     c1e:	e7 e0       	ldi	r30, 0x07	; 7
     c20:	f4 e0       	ldi	r31, 0x04	; 4
     c22:	a1 e8       	ldi	r26, 0x81	; 129
     c24:	b3 e0       	ldi	r27, 0x03	; 3
     c26:	01 90       	ld	r0, Z+
     c28:	0d 92       	st	X+, r0
     c2a:	8a 95       	dec	r24
     c2c:	e1 f7       	brne	.-8      	; 0xc26 <application_timer_tick+0x2a>
			printf("sending=   ");
     c2e:	86 e5       	ldi	r24, 0x56	; 86
     c30:	92 e0       	ldi	r25, 0x02	; 2
     c32:	9f 93       	push	r25
     c34:	8f 93       	push	r24
     c36:	61 d3       	rcall	.+1730   	; 0x12fa <printf>
			for (i=0; i<16; i++) printf(" %02x", newPkt.dt[i]);
     c38:	10 92 02 04 	sts	0x0402, r1
     c3c:	10 92 01 04 	sts	0x0401, r1
     c40:	0f 90       	pop	r0
     c42:	0f 90       	pop	r0
     c44:	80 e0       	ldi	r24, 0x00	; 0
     c46:	90 e0       	ldi	r25, 0x00	; 0
     c48:	c2 e6       	ldi	r28, 0x62	; 98
     c4a:	d2 e0       	ldi	r29, 0x02	; 2
     c4c:	fc 01       	movw	r30, r24
     c4e:	e9 5f       	subi	r30, 0xF9	; 249
     c50:	fb 4f       	sbci	r31, 0xFB	; 251
     c52:	84 81       	ldd	r24, Z+4	; 0x04
     c54:	1f 92       	push	r1
     c56:	8f 93       	push	r24
     c58:	df 93       	push	r29
     c5a:	cf 93       	push	r28
     c5c:	4e d3       	rcall	.+1692   	; 0x12fa <printf>
     c5e:	80 91 01 04 	lds	r24, 0x0401
     c62:	90 91 02 04 	lds	r25, 0x0402
     c66:	01 96       	adiw	r24, 0x01	; 1
     c68:	90 93 02 04 	sts	0x0402, r25
     c6c:	80 93 01 04 	sts	0x0401, r24
     c70:	0f 90       	pop	r0
     c72:	0f 90       	pop	r0
     c74:	0f 90       	pop	r0
     c76:	0f 90       	pop	r0
     c78:	80 31       	cpi	r24, 0x10	; 16
     c7a:	91 05       	cpc	r25, r1
     c7c:	38 f3       	brcs	.-50     	; 0xc4c <application_timer_tick+0x50>
			printf("\n\r");
     c7e:	8c e8       	ldi	r24, 0x8C	; 140
     c80:	92 e0       	ldi	r25, 0x02	; 2
     c82:	9f 93       	push	r25
     c84:	8f 93       	push	r24
     c86:	39 d3       	rcall	.+1650   	; 0x12fa <printf>
			radio_send(tx_buffer, sizeof(Packet), newPkt.dst);
     c88:	40 91 07 04 	lds	r20, 0x0407
     c8c:	50 91 08 04 	lds	r21, 0x0408
     c90:	65 e1       	ldi	r22, 0x15	; 21
     c92:	81 e8       	ldi	r24, 0x81	; 129
     c94:	93 e0       	ldi	r25, 0x03	; 3
     c96:	bb db       	rcall	.-2186   	; 0x40e <radio_send>
     c98:	0f 90       	pop	r0
     c9a:	0f 90       	pop	r0
		}
	}
}
     c9c:	df 91       	pop	r29
     c9e:	cf 91       	pop	r28
     ca0:	08 95       	ret

00000ca2 <application_radio_rx_msg>:

void application_radio_rx_msg(unsigned short dst, unsigned short src, int len, unsigned char *msgdata)
{
     ca2:	8f 92       	push	r8
     ca4:	9f 92       	push	r9
     ca6:	af 92       	push	r10
     ca8:	bf 92       	push	r11
     caa:	cf 92       	push	r12
     cac:	df 92       	push	r13
     cae:	ef 92       	push	r14
     cb0:	ff 92       	push	r15
     cb2:	0f 93       	push	r16
     cb4:	1f 93       	push	r17
     cb6:	cf 93       	push	r28
     cb8:	df 93       	push	r29
     cba:	cd b7       	in	r28, 0x3d	; 61
     cbc:	de b7       	in	r29, 0x3e	; 62
     cbe:	61 97       	sbiw	r28, 0x11	; 17
     cc0:	0f b6       	in	r0, 0x3f	; 63
     cc2:	f8 94       	cli
     cc4:	de bf       	out	0x3e, r29	; 62
     cc6:	0f be       	out	0x3f, r0	; 63
     cc8:	cd bf       	out	0x3d, r28	; 61
     cca:	6b 01       	movw	r12, r22
	char string[17];
	
	for(int i = 4; i<len; i++)
     ccc:	45 30       	cpi	r20, 0x05	; 5
     cce:	51 05       	cpc	r21, r1
     cd0:	5c f0       	brlt	.+22     	; 0xce8 <application_radio_rx_msg+0x46>
     cd2:	f9 01       	movw	r30, r18
     cd4:	34 96       	adiw	r30, 0x04	; 4
     cd6:	de 01       	movw	r26, r28
     cd8:	11 96       	adiw	r26, 0x01	; 1
     cda:	24 0f       	add	r18, r20
     cdc:	35 1f       	adc	r19, r21
	{
		string[i-4] = msgdata[i];
     cde:	81 91       	ld	r24, Z+
     ce0:	8d 93       	st	X+, r24

void application_radio_rx_msg(unsigned short dst, unsigned short src, int len, unsigned char *msgdata)
{
	char string[17];
	
	for(int i = 4; i<len; i++)
     ce2:	e2 17       	cp	r30, r18
     ce4:	f3 07       	cpc	r31, r19
     ce6:	d9 f7       	brne	.-10     	; 0xcde <application_radio_rx_msg+0x3c>
	{
		string[i-4] = msgdata[i];
	}
	string[16] = '\0';
     ce8:	19 8a       	std	Y+17, r1	; 0x11
	
	//For some reason decryption doesn't work unless encrypt has been called. So until I figure out why I'm calling them in pairs.
	encrypt(); //encrypt gibberish
     cea:	a1 de       	rcall	.-702    	; 0xa2e <encrypt>
     cec:	fe 01       	movw	r30, r28
     cee:	31 96       	adiw	r30, 0x01	; 1
     cf0:	03 e2       	ldi	r16, 0x23	; 35
     cf2:	12 e0       	ldi	r17, 0x02	; 2
     cf4:	9e 01       	movw	r18, r28
     cf6:	2e 5e       	subi	r18, 0xEE	; 238
     cf8:	3f 4f       	sbci	r19, 0xFF	; 255
     cfa:	d8 01       	movw	r26, r16
	
	//load in string to be decrypted
	for(int i=0;i<17;i++){
		crypto[i] = string[i];
     cfc:	81 91       	ld	r24, Z+
     cfe:	8d 93       	st	X+, r24
	
	//For some reason decryption doesn't work unless encrypt has been called. So until I figure out why I'm calling them in pairs.
	encrypt(); //encrypt gibberish
	
	//load in string to be decrypted
	for(int i=0;i<17;i++){
     d00:	e2 17       	cp	r30, r18
     d02:	f3 07       	cpc	r31, r19
     d04:	d9 f7       	brne	.-10     	; 0xcfc <application_radio_rx_msg+0x5a>
		crypto[i] = string[i];
	}
	
	//Decrypt the string
	decryptMeth();
     d06:	04 df       	rcall	.-504    	; 0xb10 <decryptMeth>
	
	
	printf("cryptotext=");
     d08:	88 e6       	ldi	r24, 0x68	; 104
     d0a:	92 e0       	ldi	r25, 0x02	; 2
     d0c:	9f 93       	push	r25
     d0e:	8f 93       	push	r24
     d10:	f4 d2       	rcall	.+1512   	; 0x12fa <printf>
	for (i=0; i<16; i++) printf(" %02x", crypto[i]);
     d12:	10 92 02 04 	sts	0x0402, r1
     d16:	10 92 01 04 	sts	0x0401, r1
     d1a:	0f 90       	pop	r0
     d1c:	0f 90       	pop	r0
     d1e:	80 e0       	ldi	r24, 0x00	; 0
     d20:	90 e0       	ldi	r25, 0x00	; 0
     d22:	0f 2e       	mov	r0, r31
     d24:	f2 e6       	ldi	r31, 0x62	; 98
     d26:	ef 2e       	mov	r14, r31
     d28:	f2 e0       	ldi	r31, 0x02	; 2
     d2a:	ff 2e       	mov	r15, r31
     d2c:	f0 2d       	mov	r31, r0
     d2e:	fc 01       	movw	r30, r24
     d30:	ed 5d       	subi	r30, 0xDD	; 221
     d32:	fd 4f       	sbci	r31, 0xFD	; 253
     d34:	80 81       	ld	r24, Z
     d36:	1f 92       	push	r1
     d38:	8f 93       	push	r24
     d3a:	ff 92       	push	r15
     d3c:	ef 92       	push	r14
     d3e:	dd d2       	rcall	.+1466   	; 0x12fa <printf>
     d40:	80 91 01 04 	lds	r24, 0x0401
     d44:	90 91 02 04 	lds	r25, 0x0402
     d48:	01 96       	adiw	r24, 0x01	; 1
     d4a:	90 93 02 04 	sts	0x0402, r25
     d4e:	80 93 01 04 	sts	0x0401, r24
     d52:	0f 90       	pop	r0
     d54:	0f 90       	pop	r0
     d56:	0f 90       	pop	r0
     d58:	0f 90       	pop	r0
     d5a:	80 31       	cpi	r24, 0x10	; 16
     d5c:	91 05       	cpc	r25, r1
     d5e:	38 f3       	brcs	.-50     	; 0xd2e <application_radio_rx_msg+0x8c>
	printf("\n\r");
     d60:	8c e8       	ldi	r24, 0x8C	; 140
     d62:	92 e0       	ldi	r25, 0x02	; 2
     d64:	9f 93       	push	r25
     d66:	8f 93       	push	r24
     d68:	c8 d2       	rcall	.+1424   	; 0x12fa <printf>
	printf("Decrypted plaintext=\"%s\"\n\r", decrypt);
     d6a:	84 e3       	ldi	r24, 0x34	; 52
     d6c:	92 e0       	ldi	r25, 0x02	; 2
     d6e:	9f 93       	push	r25
     d70:	8f 93       	push	r24
     d72:	84 e7       	ldi	r24, 0x74	; 116
     d74:	92 e0       	ldi	r25, 0x02	; 2
     d76:	9f 93       	push	r25
     d78:	8f 93       	push	r24
     d7a:	bf d2       	rcall	.+1406   	; 0x12fa <printf>
	
	
	if(strcmp(decrypt, OPEN) == 0){
     d7c:	6f e8       	ldi	r22, 0x8F	; 143
     d7e:	72 e0       	ldi	r23, 0x02	; 2
     d80:	84 e3       	ldi	r24, 0x34	; 52
     d82:	92 e0       	ldi	r25, 0x02	; 2
     d84:	9c d2       	rcall	.+1336   	; 0x12be <strcmp>
     d86:	0f 90       	pop	r0
     d88:	0f 90       	pop	r0
     d8a:	0f 90       	pop	r0
     d8c:	0f 90       	pop	r0
     d8e:	0f 90       	pop	r0
     d90:	0f 90       	pop	r0
     d92:	89 2b       	or	r24, r25
     d94:	09 f0       	breq	.+2      	; 0xd98 <application_radio_rx_msg+0xf6>
     d96:	7b c0       	rjmp	.+246    	; 0xe8e <application_radio_rx_msg+0x1ec>
		
		//getARandomNumber();
		num = rand() % 65534;
     d98:	5e d2       	rcall	.+1212   	; 0x1256 <rand>
     d9a:	bc 01       	movw	r22, r24
     d9c:	99 0f       	add	r25, r25
     d9e:	88 0b       	sbc	r24, r24
     da0:	99 0b       	sbc	r25, r25
     da2:	2e ef       	ldi	r18, 0xFE	; 254
     da4:	3f ef       	ldi	r19, 0xFF	; 255
     da6:	40 e0       	ldi	r20, 0x00	; 0
     da8:	50 e0       	ldi	r21, 0x00	; 0
     daa:	d9 d1       	rcall	.+946    	; 0x115e <__divmodsi4>
     dac:	60 93 03 04 	sts	0x0403, r22
     db0:	70 93 04 04 	sts	0x0404, r23
     db4:	80 93 05 04 	sts	0x0405, r24
     db8:	90 93 06 04 	sts	0x0406, r25
		
		newPkt.dst = 0x01;
     dbc:	e7 e0       	ldi	r30, 0x07	; 7
     dbe:	f4 e0       	ldi	r31, 0x04	; 4
     dc0:	21 e0       	ldi	r18, 0x01	; 1
     dc2:	30 e0       	ldi	r19, 0x00	; 0
     dc4:	31 83       	std	Z+1, r19	; 0x01
     dc6:	20 83       	st	Z, r18
		newPkt.src = NODE_ID;
     dc8:	22 e0       	ldi	r18, 0x02	; 2
     dca:	30 e0       	ldi	r19, 0x00	; 0
     dcc:	33 83       	std	Z+3, r19	; 0x03
     dce:	22 83       	std	Z+2, r18	; 0x02
		
		//put num into plaintext
		sprintf(plaintext, "%lu", num);
     dd0:	9f 93       	push	r25
     dd2:	8f 93       	push	r24
     dd4:	7f 93       	push	r23
     dd6:	6f 93       	push	r22
     dd8:	80 ea       	ldi	r24, 0xA0	; 160
     dda:	92 e0       	ldi	r25, 0x02	; 2
     ddc:	9f 93       	push	r25
     dde:	8f 93       	push	r24
     de0:	0f 2e       	mov	r0, r31
     de2:	f5 e4       	ldi	r31, 0x45	; 69
     de4:	ef 2e       	mov	r14, r31
     de6:	f2 e0       	ldi	r31, 0x02	; 2
     de8:	ff 2e       	mov	r15, r31
     dea:	f0 2d       	mov	r31, r0
     dec:	ff 92       	push	r15
     dee:	ef 92       	push	r14
     df0:	97 d2       	rcall	.+1326   	; 0x1320 <sprintf>
		//encrypt plaintext
		encrypt();
     df2:	1d de       	rcall	.-966    	; 0xa2e <encrypt>
		
		printf("%s\r\n", plaintext);
     df4:	ff 92       	push	r15
     df6:	ef 92       	push	r14
     df8:	84 ea       	ldi	r24, 0xA4	; 164
     dfa:	92 e0       	ldi	r25, 0x02	; 2
     dfc:	9f 93       	push	r25
     dfe:	8f 93       	push	r24
     e00:	7c d2       	rcall	.+1272   	; 0x12fa <printf>
		printf("cryptotext=");
     e02:	88 e6       	ldi	r24, 0x68	; 104
     e04:	92 e0       	ldi	r25, 0x02	; 2
     e06:	9f 93       	push	r25
     e08:	8f 93       	push	r24
     e0a:	77 d2       	rcall	.+1262   	; 0x12fa <printf>
		for (i=0; i<16; i++) printf(" %02x", crypto[i]);
     e0c:	10 92 02 04 	sts	0x0402, r1
     e10:	10 92 01 04 	sts	0x0401, r1
     e14:	0f b6       	in	r0, 0x3f	; 63
     e16:	f8 94       	cli
     e18:	de bf       	out	0x3e, r29	; 62
     e1a:	0f be       	out	0x3f, r0	; 63
     e1c:	cd bf       	out	0x3d, r28	; 61
     e1e:	80 e0       	ldi	r24, 0x00	; 0
     e20:	90 e0       	ldi	r25, 0x00	; 0
     e22:	0f 2e       	mov	r0, r31
     e24:	f2 e6       	ldi	r31, 0x62	; 98
     e26:	ef 2e       	mov	r14, r31
     e28:	f2 e0       	ldi	r31, 0x02	; 2
     e2a:	ff 2e       	mov	r15, r31
     e2c:	f0 2d       	mov	r31, r0
     e2e:	fc 01       	movw	r30, r24
     e30:	ed 5d       	subi	r30, 0xDD	; 221
     e32:	fd 4f       	sbci	r31, 0xFD	; 253
     e34:	80 81       	ld	r24, Z
     e36:	1f 92       	push	r1
     e38:	8f 93       	push	r24
     e3a:	ff 92       	push	r15
     e3c:	ef 92       	push	r14
     e3e:	5d d2       	rcall	.+1210   	; 0x12fa <printf>
     e40:	80 91 01 04 	lds	r24, 0x0401
     e44:	90 91 02 04 	lds	r25, 0x0402
     e48:	01 96       	adiw	r24, 0x01	; 1
     e4a:	90 93 02 04 	sts	0x0402, r25
     e4e:	80 93 01 04 	sts	0x0401, r24
     e52:	0f 90       	pop	r0
     e54:	0f 90       	pop	r0
     e56:	0f 90       	pop	r0
     e58:	0f 90       	pop	r0
     e5a:	80 31       	cpi	r24, 0x10	; 16
     e5c:	91 05       	cpc	r25, r1
     e5e:	38 f3       	brcs	.-50     	; 0xe2e <application_radio_rx_msg+0x18c>
		printf("\n\r");
     e60:	8c e8       	ldi	r24, 0x8C	; 140
     e62:	92 e0       	ldi	r25, 0x02	; 2
     e64:	9f 93       	push	r25
     e66:	8f 93       	push	r24
     e68:	48 d2       	rcall	.+1168   	; 0x12fa <printf>
     e6a:	eb e0       	ldi	r30, 0x0B	; 11
     e6c:	f4 e0       	ldi	r31, 0x04	; 4
     e6e:	2c e1       	ldi	r18, 0x1C	; 28
     e70:	34 e0       	ldi	r19, 0x04	; 4
     e72:	0f 90       	pop	r0
     e74:	0f 90       	pop	r0
		
		//put encrypted plaintext into newPkt.dt
		for(int i=0;i<17;i++){
			newPkt.dt[i] = crypto[i];
     e76:	d8 01       	movw	r26, r16
     e78:	8d 91       	ld	r24, X+
     e7a:	8d 01       	movw	r16, r26
     e7c:	81 93       	st	Z+, r24
		printf("cryptotext=");
		for (i=0; i<16; i++) printf(" %02x", crypto[i]);
		printf("\n\r");
		
		//put encrypted plaintext into newPkt.dt
		for(int i=0;i<17;i++){
     e7e:	e2 17       	cp	r30, r18
     e80:	f3 07       	cpc	r31, r19
     e82:	c9 f7       	brne	.-14     	; 0xe76 <application_radio_rx_msg+0x1d4>
			newPkt.dt[i] = crypto[i];
		}
		decryptMeth(); //decrypt gibberish
     e84:	45 de       	rcall	.-886    	; 0xb10 <decryptMeth>
		canSend = true;
     e86:	81 e0       	ldi	r24, 0x01	; 1
     e88:	80 93 71 03 	sts	0x0371, r24
     e8c:	f1 c0       	rjmp	.+482    	; 0x1070 <application_radio_rx_msg+0x3ce>
	}
	else{
		long temp1 = atol(decrypt);
     e8e:	84 e3       	ldi	r24, 0x34	; 52
     e90:	92 e0       	ldi	r25, 0x02	; 2
     e92:	ef d1       	rcall	.+990    	; 0x1272 <atol>
		
		if(temp1 == num + 1){
     e94:	80 90 03 04 	lds	r8, 0x0403
     e98:	90 90 04 04 	lds	r9, 0x0404
     e9c:	a0 90 05 04 	lds	r10, 0x0405
     ea0:	b0 90 06 04 	lds	r11, 0x0406
     ea4:	bf ef       	ldi	r27, 0xFF	; 255
     ea6:	8b 1a       	sub	r8, r27
     ea8:	9b 0a       	sbc	r9, r27
     eaa:	ab 0a       	sbc	r10, r27
     eac:	bb 0a       	sbc	r11, r27
     eae:	68 15       	cp	r22, r8
     eb0:	79 05       	cpc	r23, r9
     eb2:	8a 05       	cpc	r24, r10
     eb4:	9b 05       	cpc	r25, r11
     eb6:	09 f0       	breq	.+2      	; 0xeba <application_radio_rx_msg+0x218>
     eb8:	78 c0       	rjmp	.+240    	; 0xfaa <application_radio_rx_msg+0x308>
			//turn on leds, open gate.
			if(open){
     eba:	80 91 7c 03 	lds	r24, 0x037C
     ebe:	88 23       	and	r24, r24
     ec0:	49 f0       	breq	.+18     	; 0xed4 <application_radio_rx_msg+0x232>
				leds_off(LED_GREEN);
     ec2:	81 e0       	ldi	r24, 0x01	; 1
     ec4:	43 da       	rcall	.-2938   	; 0x34c <leds_off>
				leds_off(LED_RED);
     ec6:	83 e0       	ldi	r24, 0x03	; 3
     ec8:	41 da       	rcall	.-2942   	; 0x34c <leds_off>
				leds_off(LED_ORANGE);
     eca:	82 e0       	ldi	r24, 0x02	; 2
     ecc:	3f da       	rcall	.-2946   	; 0x34c <leds_off>
				open = false;
     ece:	10 92 7c 03 	sts	0x037C, r1
     ed2:	09 c0       	rjmp	.+18     	; 0xee6 <application_radio_rx_msg+0x244>
			}
			else{
				leds_on(LED_GREEN);
     ed4:	81 e0       	ldi	r24, 0x01	; 1
     ed6:	2e da       	rcall	.-2980   	; 0x334 <leds_on>
				leds_off(LED_RED);
     ed8:	83 e0       	ldi	r24, 0x03	; 3
     eda:	38 da       	rcall	.-2960   	; 0x34c <leds_off>
				leds_off(LED_ORANGE);
     edc:	82 e0       	ldi	r24, 0x02	; 2
     ede:	36 da       	rcall	.-2964   	; 0x34c <leds_off>
				open = true;
     ee0:	81 e0       	ldi	r24, 0x01	; 1
     ee2:	80 93 7c 03 	sts	0x037C, r24
			}
			newPkt.dst = src;
     ee6:	e7 e0       	ldi	r30, 0x07	; 7
     ee8:	f4 e0       	ldi	r31, 0x04	; 4
     eea:	d1 82       	std	Z+1, r13	; 0x01
     eec:	c0 82       	st	Z, r12
			newPkt.src = NODE_ID;
     eee:	82 e0       	ldi	r24, 0x02	; 2
     ef0:	90 e0       	ldi	r25, 0x00	; 0
     ef2:	93 83       	std	Z+3, r25	; 0x03
     ef4:	82 83       	std	Z+2, r24	; 0x02
			sprintf(plaintext, ACK);
     ef6:	81 e1       	ldi	r24, 0x11	; 17
     ef8:	e9 ea       	ldi	r30, 0xA9	; 169
     efa:	f2 e0       	ldi	r31, 0x02	; 2
     efc:	a5 e4       	ldi	r26, 0x45	; 69
     efe:	b2 e0       	ldi	r27, 0x02	; 2
     f00:	01 90       	ld	r0, Z+
     f02:	0d 92       	st	X+, r0
     f04:	8a 95       	dec	r24
     f06:	e1 f7       	brne	.-8      	; 0xf00 <application_radio_rx_msg+0x25e>
			encrypt();
     f08:	92 dd       	rcall	.-1244   	; 0xa2e <encrypt>
			
			printf("%s\r\n", plaintext);
     f0a:	85 e4       	ldi	r24, 0x45	; 69
     f0c:	92 e0       	ldi	r25, 0x02	; 2
     f0e:	9f 93       	push	r25
     f10:	8f 93       	push	r24
     f12:	84 ea       	ldi	r24, 0xA4	; 164
     f14:	92 e0       	ldi	r25, 0x02	; 2
     f16:	9f 93       	push	r25
     f18:	8f 93       	push	r24
     f1a:	ef d1       	rcall	.+990    	; 0x12fa <printf>
			printf("cryptotext=");
     f1c:	88 e6       	ldi	r24, 0x68	; 104
     f1e:	92 e0       	ldi	r25, 0x02	; 2
     f20:	9f 93       	push	r25
     f22:	8f 93       	push	r24
     f24:	ea d1       	rcall	.+980    	; 0x12fa <printf>
			for (i=0; i<16; i++) printf(" %02x", crypto[i]);
     f26:	10 92 02 04 	sts	0x0402, r1
     f2a:	10 92 01 04 	sts	0x0401, r1
     f2e:	0f 90       	pop	r0
     f30:	0f 90       	pop	r0
     f32:	0f 90       	pop	r0
     f34:	0f 90       	pop	r0
     f36:	0f 90       	pop	r0
     f38:	0f 90       	pop	r0
     f3a:	80 e0       	ldi	r24, 0x00	; 0
     f3c:	90 e0       	ldi	r25, 0x00	; 0
     f3e:	0f 2e       	mov	r0, r31
     f40:	f2 e6       	ldi	r31, 0x62	; 98
     f42:	ef 2e       	mov	r14, r31
     f44:	f2 e0       	ldi	r31, 0x02	; 2
     f46:	ff 2e       	mov	r15, r31
     f48:	f0 2d       	mov	r31, r0
     f4a:	fc 01       	movw	r30, r24
     f4c:	ed 5d       	subi	r30, 0xDD	; 221
     f4e:	fd 4f       	sbci	r31, 0xFD	; 253
     f50:	80 81       	ld	r24, Z
     f52:	1f 92       	push	r1
     f54:	8f 93       	push	r24
     f56:	ff 92       	push	r15
     f58:	ef 92       	push	r14
     f5a:	cf d1       	rcall	.+926    	; 0x12fa <printf>
     f5c:	80 91 01 04 	lds	r24, 0x0401
     f60:	90 91 02 04 	lds	r25, 0x0402
     f64:	01 96       	adiw	r24, 0x01	; 1
     f66:	90 93 02 04 	sts	0x0402, r25
     f6a:	80 93 01 04 	sts	0x0401, r24
     f6e:	0f 90       	pop	r0
     f70:	0f 90       	pop	r0
     f72:	0f 90       	pop	r0
     f74:	0f 90       	pop	r0
     f76:	80 31       	cpi	r24, 0x10	; 16
     f78:	91 05       	cpc	r25, r1
     f7a:	38 f3       	brcs	.-50     	; 0xf4a <application_radio_rx_msg+0x2a8>
			printf("\n\r");
     f7c:	8c e8       	ldi	r24, 0x8C	; 140
     f7e:	92 e0       	ldi	r25, 0x02	; 2
     f80:	9f 93       	push	r25
     f82:	8f 93       	push	r24
     f84:	ba d1       	rcall	.+884    	; 0x12fa <printf>
     f86:	eb e0       	ldi	r30, 0x0B	; 11
     f88:	f4 e0       	ldi	r31, 0x04	; 4
     f8a:	2c e1       	ldi	r18, 0x1C	; 28
     f8c:	34 e0       	ldi	r19, 0x04	; 4
     f8e:	0f 90       	pop	r0
     f90:	0f 90       	pop	r0
			
			//sprintf(newPkt.dt, crypto); //sprintf doesn't like values 0 and 25 -> the /0 and % characters.
			for(int i=0;i<17;i++){
				newPkt.dt[i] = crypto[i];
     f92:	d8 01       	movw	r26, r16
     f94:	8d 91       	ld	r24, X+
     f96:	8d 01       	movw	r16, r26
     f98:	81 93       	st	Z+, r24
			printf("cryptotext=");
			for (i=0; i<16; i++) printf(" %02x", crypto[i]);
			printf("\n\r");
			
			//sprintf(newPkt.dt, crypto); //sprintf doesn't like values 0 and 25 -> the /0 and % characters.
			for(int i=0;i<17;i++){
     f9a:	e2 17       	cp	r30, r18
     f9c:	f3 07       	cpc	r31, r19
     f9e:	c9 f7       	brne	.-14     	; 0xf92 <application_radio_rx_msg+0x2f0>
				newPkt.dt[i] = crypto[i];
			}
			canSend = true;
     fa0:	81 e0       	ldi	r24, 0x01	; 1
     fa2:	80 93 71 03 	sts	0x0371, r24
			decryptMeth();
     fa6:	b4 dd       	rcall	.-1176   	; 0xb10 <decryptMeth>
     fa8:	63 c0       	rjmp	.+198    	; 0x1070 <application_radio_rx_msg+0x3ce>
		}
		else{
			//send a nack
			newPkt.dst = 0x01;
     faa:	e7 e0       	ldi	r30, 0x07	; 7
     fac:	f4 e0       	ldi	r31, 0x04	; 4
     fae:	81 e0       	ldi	r24, 0x01	; 1
     fb0:	90 e0       	ldi	r25, 0x00	; 0
     fb2:	91 83       	std	Z+1, r25	; 0x01
     fb4:	80 83       	st	Z, r24
			newPkt.src = NODE_ID;
     fb6:	82 e0       	ldi	r24, 0x02	; 2
     fb8:	90 e0       	ldi	r25, 0x00	; 0
     fba:	93 83       	std	Z+3, r25	; 0x03
     fbc:	82 83       	std	Z+2, r24	; 0x02
			
			sprintf(plaintext, NACK);
     fbe:	81 e1       	ldi	r24, 0x11	; 17
     fc0:	ea eb       	ldi	r30, 0xBA	; 186
     fc2:	f2 e0       	ldi	r31, 0x02	; 2
     fc4:	a5 e4       	ldi	r26, 0x45	; 69
     fc6:	b2 e0       	ldi	r27, 0x02	; 2
     fc8:	01 90       	ld	r0, Z+
     fca:	0d 92       	st	X+, r0
     fcc:	8a 95       	dec	r24
     fce:	e1 f7       	brne	.-8      	; 0xfc8 <application_radio_rx_msg+0x326>
			//encrypt the plaintext
			encrypt();
     fd0:	2e dd       	rcall	.-1444   	; 0xa2e <encrypt>
			
			printf("%s\r\n", plaintext);
     fd2:	85 e4       	ldi	r24, 0x45	; 69
     fd4:	92 e0       	ldi	r25, 0x02	; 2
     fd6:	9f 93       	push	r25
     fd8:	8f 93       	push	r24
     fda:	84 ea       	ldi	r24, 0xA4	; 164
     fdc:	92 e0       	ldi	r25, 0x02	; 2
     fde:	9f 93       	push	r25
     fe0:	8f 93       	push	r24
     fe2:	8b d1       	rcall	.+790    	; 0x12fa <printf>
			printf("cryptotext=");
     fe4:	88 e6       	ldi	r24, 0x68	; 104
     fe6:	92 e0       	ldi	r25, 0x02	; 2
     fe8:	9f 93       	push	r25
     fea:	8f 93       	push	r24
     fec:	86 d1       	rcall	.+780    	; 0x12fa <printf>
			for (i=0; i<16; i++) printf(" %02x", crypto[i]);
     fee:	10 92 02 04 	sts	0x0402, r1
     ff2:	10 92 01 04 	sts	0x0401, r1
     ff6:	0f 90       	pop	r0
     ff8:	0f 90       	pop	r0
     ffa:	0f 90       	pop	r0
     ffc:	0f 90       	pop	r0
     ffe:	0f 90       	pop	r0
    1000:	0f 90       	pop	r0
    1002:	80 e0       	ldi	r24, 0x00	; 0
    1004:	90 e0       	ldi	r25, 0x00	; 0
    1006:	0f 2e       	mov	r0, r31
    1008:	f2 e6       	ldi	r31, 0x62	; 98
    100a:	ef 2e       	mov	r14, r31
    100c:	f2 e0       	ldi	r31, 0x02	; 2
    100e:	ff 2e       	mov	r15, r31
    1010:	f0 2d       	mov	r31, r0
    1012:	fc 01       	movw	r30, r24
    1014:	ed 5d       	subi	r30, 0xDD	; 221
    1016:	fd 4f       	sbci	r31, 0xFD	; 253
    1018:	80 81       	ld	r24, Z
    101a:	1f 92       	push	r1
    101c:	8f 93       	push	r24
    101e:	ff 92       	push	r15
    1020:	ef 92       	push	r14
    1022:	6b d1       	rcall	.+726    	; 0x12fa <printf>
    1024:	80 91 01 04 	lds	r24, 0x0401
    1028:	90 91 02 04 	lds	r25, 0x0402
    102c:	01 96       	adiw	r24, 0x01	; 1
    102e:	90 93 02 04 	sts	0x0402, r25
    1032:	80 93 01 04 	sts	0x0401, r24
    1036:	0f 90       	pop	r0
    1038:	0f 90       	pop	r0
    103a:	0f 90       	pop	r0
    103c:	0f 90       	pop	r0
    103e:	80 31       	cpi	r24, 0x10	; 16
    1040:	91 05       	cpc	r25, r1
    1042:	38 f3       	brcs	.-50     	; 0x1012 <application_radio_rx_msg+0x370>
			printf("\n\r");
    1044:	8c e8       	ldi	r24, 0x8C	; 140
    1046:	92 e0       	ldi	r25, 0x02	; 2
    1048:	9f 93       	push	r25
    104a:	8f 93       	push	r24
    104c:	56 d1       	rcall	.+684    	; 0x12fa <printf>
    104e:	eb e0       	ldi	r30, 0x0B	; 11
    1050:	f4 e0       	ldi	r31, 0x04	; 4
    1052:	2c e1       	ldi	r18, 0x1C	; 28
    1054:	34 e0       	ldi	r19, 0x04	; 4
    1056:	0f 90       	pop	r0
    1058:	0f 90       	pop	r0
			
			for(int i=0;i<17;i++){
				newPkt.dt[i] = crypto[i];
    105a:	d8 01       	movw	r26, r16
    105c:	8d 91       	ld	r24, X+
    105e:	8d 01       	movw	r16, r26
    1060:	81 93       	st	Z+, r24
			printf("%s\r\n", plaintext);
			printf("cryptotext=");
			for (i=0; i<16; i++) printf(" %02x", crypto[i]);
			printf("\n\r");
			
			for(int i=0;i<17;i++){
    1062:	e2 17       	cp	r30, r18
    1064:	f3 07       	cpc	r31, r19
    1066:	c9 f7       	brne	.-14     	; 0x105a <application_radio_rx_msg+0x3b8>
				newPkt.dt[i] = crypto[i];
			}

			canSend = true;
    1068:	81 e0       	ldi	r24, 0x01	; 1
    106a:	80 93 71 03 	sts	0x0371, r24
			decryptMeth(); //decrypt gibberish
    106e:	50 dd       	rcall	.-1376   	; 0xb10 <decryptMeth>
		}	
	}
}
    1070:	61 96       	adiw	r28, 0x11	; 17
    1072:	0f b6       	in	r0, 0x3f	; 63
    1074:	f8 94       	cli
    1076:	de bf       	out	0x3e, r29	; 62
    1078:	0f be       	out	0x3f, r0	; 63
    107a:	cd bf       	out	0x3d, r28	; 61
    107c:	df 91       	pop	r29
    107e:	cf 91       	pop	r28
    1080:	1f 91       	pop	r17
    1082:	0f 91       	pop	r16
    1084:	ff 90       	pop	r15
    1086:	ef 90       	pop	r14
    1088:	df 90       	pop	r13
    108a:	cf 90       	pop	r12
    108c:	bf 90       	pop	r11
    108e:	af 90       	pop	r10
    1090:	9f 90       	pop	r9
    1092:	8f 90       	pop	r8
    1094:	08 95       	ret

00001096 <application_radio_tx_done>:

void application_radio_tx_done()
{
	tx_buffer_inuse = false;
    1096:	10 92 7d 03 	sts	0x037D, r1
    109a:	e1 e8       	ldi	r30, 0x81	; 129
    109c:	f3 e0       	ldi	r31, 0x03	; 3
    109e:	81 e0       	ldi	r24, 0x01	; 1
    10a0:	94 e0       	ldi	r25, 0x04	; 4
	
	//empty buffers after data has been sent
	for(int j=0; j<RADIO_MAX_LEN; j++)
	{
		tx_buffer[j] = 0x00;
    10a2:	11 92       	st	Z+, r1
void application_radio_tx_done()
{
	tx_buffer_inuse = false;
	
	//empty buffers after data has been sent
	for(int j=0; j<RADIO_MAX_LEN; j++)
    10a4:	e8 17       	cp	r30, r24
    10a6:	f9 07       	cpc	r31, r25
    10a8:	e1 f7       	brne	.-8      	; 0x10a2 <application_radio_tx_done+0xc>
	{
		tx_buffer[j] = 0x00;
	}
	newPkt.dst = 0;
    10aa:	e7 e0       	ldi	r30, 0x07	; 7
    10ac:	f4 e0       	ldi	r31, 0x04	; 4
    10ae:	11 82       	std	Z+1, r1	; 0x01
    10b0:	10 82       	st	Z, r1
	newPkt.src = 0;
    10b2:	13 82       	std	Z+3, r1	; 0x03
    10b4:	12 82       	std	Z+2, r1	; 0x02
    10b6:	eb e0       	ldi	r30, 0x0B	; 11
    10b8:	f4 e0       	ldi	r31, 0x04	; 4
    10ba:	8c e1       	ldi	r24, 0x1C	; 28
    10bc:	94 e0       	ldi	r25, 0x04	; 4
	for(int i=0;i<sizeof(newPkt.dt);i++){
		newPkt.dt[i] = 0;
    10be:	11 92       	st	Z+, r1
	{
		tx_buffer[j] = 0x00;
	}
	newPkt.dst = 0;
	newPkt.src = 0;
	for(int i=0;i<sizeof(newPkt.dt);i++){
    10c0:	e8 17       	cp	r30, r24
    10c2:	f9 07       	cpc	r31, r25
    10c4:	e1 f7       	brne	.-8      	; 0x10be <application_radio_tx_done+0x28>
    10c6:	e5 e4       	ldi	r30, 0x45	; 69
    10c8:	f2 e0       	ldi	r31, 0x02	; 2
    10ca:	86 e5       	ldi	r24, 0x56	; 86
    10cc:	92 e0       	ldi	r25, 0x02	; 2
		newPkt.dt[i] = 0;
	}
	for(int i=0;i<sizeof(plaintext);i++){
		plaintext[i] = 0;
    10ce:	11 92       	st	Z+, r1
	newPkt.dst = 0;
	newPkt.src = 0;
	for(int i=0;i<sizeof(newPkt.dt);i++){
		newPkt.dt[i] = 0;
	}
	for(int i=0;i<sizeof(plaintext);i++){
    10d0:	e8 17       	cp	r30, r24
    10d2:	f9 07       	cpc	r31, r25
    10d4:	e1 f7       	brne	.-8      	; 0x10ce <application_radio_tx_done+0x38>
    10d6:	e3 e2       	ldi	r30, 0x23	; 35
    10d8:	f2 e0       	ldi	r31, 0x02	; 2
    10da:	84 e3       	ldi	r24, 0x34	; 52
    10dc:	92 e0       	ldi	r25, 0x02	; 2
		plaintext[i] = 0;
	}
	for(int i=0;i<sizeof(crypto);i++){
		crypto[i] = 0;
    10de:	11 92       	st	Z+, r1
		newPkt.dt[i] = 0;
	}
	for(int i=0;i<sizeof(plaintext);i++){
		plaintext[i] = 0;
	}
	for(int i=0;i<sizeof(crypto);i++){
    10e0:	e8 17       	cp	r30, r24
    10e2:	f9 07       	cpc	r31, r25
    10e4:	e1 f7       	brne	.-8      	; 0x10de <application_radio_tx_done+0x48>
    10e6:	e4 e3       	ldi	r30, 0x34	; 52
    10e8:	f2 e0       	ldi	r31, 0x02	; 2
    10ea:	85 e4       	ldi	r24, 0x45	; 69
    10ec:	92 e0       	ldi	r25, 0x02	; 2
		crypto[i] = 0;
	}
	for(int i=0;i<sizeof(decrypt);i++){
		decrypt[i] = 0;
    10ee:	11 92       	st	Z+, r1
		plaintext[i] = 0;
	}
	for(int i=0;i<sizeof(crypto);i++){
		crypto[i] = 0;
	}
	for(int i=0;i<sizeof(decrypt);i++){
    10f0:	e8 17       	cp	r30, r24
    10f2:	f9 07       	cpc	r31, r25
    10f4:	e1 f7       	brne	.-8      	; 0x10ee <application_radio_tx_done+0x58>
		decrypt[i] = 0;
	}
}
    10f6:	08 95       	ret

000010f8 <application_button_pressed>:

void application_button_pressed(){
    10f8:	08 95       	ret

000010fa <application_button_released>:
	//Not needed.
}

void application_button_released(){
    10fa:	08 95       	ret

000010fc <__mulsi3>:
    10fc:	db 01       	movw	r26, r22
    10fe:	8f 93       	push	r24
    1100:	9f 93       	push	r25
    1102:	49 d0       	rcall	.+146    	; 0x1196 <__muluhisi3>
    1104:	bf 91       	pop	r27
    1106:	af 91       	pop	r26
    1108:	a2 9f       	mul	r26, r18
    110a:	80 0d       	add	r24, r0
    110c:	91 1d       	adc	r25, r1
    110e:	a3 9f       	mul	r26, r19
    1110:	90 0d       	add	r25, r0
    1112:	b2 9f       	mul	r27, r18
    1114:	90 0d       	add	r25, r0
    1116:	11 24       	eor	r1, r1
    1118:	08 95       	ret

0000111a <__udivmodsi4>:
    111a:	a1 e2       	ldi	r26, 0x21	; 33
    111c:	1a 2e       	mov	r1, r26
    111e:	aa 1b       	sub	r26, r26
    1120:	bb 1b       	sub	r27, r27
    1122:	fd 01       	movw	r30, r26
    1124:	0d c0       	rjmp	.+26     	; 0x1140 <__udivmodsi4_ep>

00001126 <__udivmodsi4_loop>:
    1126:	aa 1f       	adc	r26, r26
    1128:	bb 1f       	adc	r27, r27
    112a:	ee 1f       	adc	r30, r30
    112c:	ff 1f       	adc	r31, r31
    112e:	a2 17       	cp	r26, r18
    1130:	b3 07       	cpc	r27, r19
    1132:	e4 07       	cpc	r30, r20
    1134:	f5 07       	cpc	r31, r21
    1136:	20 f0       	brcs	.+8      	; 0x1140 <__udivmodsi4_ep>
    1138:	a2 1b       	sub	r26, r18
    113a:	b3 0b       	sbc	r27, r19
    113c:	e4 0b       	sbc	r30, r20
    113e:	f5 0b       	sbc	r31, r21

00001140 <__udivmodsi4_ep>:
    1140:	66 1f       	adc	r22, r22
    1142:	77 1f       	adc	r23, r23
    1144:	88 1f       	adc	r24, r24
    1146:	99 1f       	adc	r25, r25
    1148:	1a 94       	dec	r1
    114a:	69 f7       	brne	.-38     	; 0x1126 <__udivmodsi4_loop>
    114c:	60 95       	com	r22
    114e:	70 95       	com	r23
    1150:	80 95       	com	r24
    1152:	90 95       	com	r25
    1154:	9b 01       	movw	r18, r22
    1156:	ac 01       	movw	r20, r24
    1158:	bd 01       	movw	r22, r26
    115a:	cf 01       	movw	r24, r30
    115c:	08 95       	ret

0000115e <__divmodsi4>:
    115e:	05 2e       	mov	r0, r21
    1160:	97 fb       	bst	r25, 7
    1162:	16 f4       	brtc	.+4      	; 0x1168 <__divmodsi4+0xa>
    1164:	00 94       	com	r0
    1166:	0f d0       	rcall	.+30     	; 0x1186 <__negsi2>
    1168:	57 fd       	sbrc	r21, 7
    116a:	05 d0       	rcall	.+10     	; 0x1176 <__divmodsi4_neg2>
    116c:	d6 df       	rcall	.-84     	; 0x111a <__udivmodsi4>
    116e:	07 fc       	sbrc	r0, 7
    1170:	02 d0       	rcall	.+4      	; 0x1176 <__divmodsi4_neg2>
    1172:	46 f4       	brtc	.+16     	; 0x1184 <__divmodsi4_exit>
    1174:	08 c0       	rjmp	.+16     	; 0x1186 <__negsi2>

00001176 <__divmodsi4_neg2>:
    1176:	50 95       	com	r21
    1178:	40 95       	com	r20
    117a:	30 95       	com	r19
    117c:	21 95       	neg	r18
    117e:	3f 4f       	sbci	r19, 0xFF	; 255
    1180:	4f 4f       	sbci	r20, 0xFF	; 255
    1182:	5f 4f       	sbci	r21, 0xFF	; 255

00001184 <__divmodsi4_exit>:
    1184:	08 95       	ret

00001186 <__negsi2>:
    1186:	90 95       	com	r25
    1188:	80 95       	com	r24
    118a:	70 95       	com	r23
    118c:	61 95       	neg	r22
    118e:	7f 4f       	sbci	r23, 0xFF	; 255
    1190:	8f 4f       	sbci	r24, 0xFF	; 255
    1192:	9f 4f       	sbci	r25, 0xFF	; 255
    1194:	08 95       	ret

00001196 <__muluhisi3>:
    1196:	09 d0       	rcall	.+18     	; 0x11aa <__umulhisi3>
    1198:	a5 9f       	mul	r26, r21
    119a:	90 0d       	add	r25, r0
    119c:	b4 9f       	mul	r27, r20
    119e:	90 0d       	add	r25, r0
    11a0:	a4 9f       	mul	r26, r20
    11a2:	80 0d       	add	r24, r0
    11a4:	91 1d       	adc	r25, r1
    11a6:	11 24       	eor	r1, r1
    11a8:	08 95       	ret

000011aa <__umulhisi3>:
    11aa:	a2 9f       	mul	r26, r18
    11ac:	b0 01       	movw	r22, r0
    11ae:	b3 9f       	mul	r27, r19
    11b0:	c0 01       	movw	r24, r0
    11b2:	a3 9f       	mul	r26, r19
    11b4:	70 0d       	add	r23, r0
    11b6:	81 1d       	adc	r24, r1
    11b8:	11 24       	eor	r1, r1
    11ba:	91 1d       	adc	r25, r1
    11bc:	b2 9f       	mul	r27, r18
    11be:	70 0d       	add	r23, r0
    11c0:	81 1d       	adc	r24, r1
    11c2:	11 24       	eor	r1, r1
    11c4:	91 1d       	adc	r25, r1
    11c6:	08 95       	ret

000011c8 <do_rand>:
    11c8:	8f 92       	push	r8
    11ca:	9f 92       	push	r9
    11cc:	af 92       	push	r10
    11ce:	bf 92       	push	r11
    11d0:	cf 92       	push	r12
    11d2:	df 92       	push	r13
    11d4:	ef 92       	push	r14
    11d6:	ff 92       	push	r15
    11d8:	cf 93       	push	r28
    11da:	df 93       	push	r29
    11dc:	ec 01       	movw	r28, r24
    11de:	68 81       	ld	r22, Y
    11e0:	79 81       	ldd	r23, Y+1	; 0x01
    11e2:	8a 81       	ldd	r24, Y+2	; 0x02
    11e4:	9b 81       	ldd	r25, Y+3	; 0x03
    11e6:	61 15       	cp	r22, r1
    11e8:	71 05       	cpc	r23, r1
    11ea:	81 05       	cpc	r24, r1
    11ec:	91 05       	cpc	r25, r1
    11ee:	21 f4       	brne	.+8      	; 0x11f8 <do_rand+0x30>
    11f0:	64 e2       	ldi	r22, 0x24	; 36
    11f2:	79 ed       	ldi	r23, 0xD9	; 217
    11f4:	8b e5       	ldi	r24, 0x5B	; 91
    11f6:	97 e0       	ldi	r25, 0x07	; 7
    11f8:	2d e1       	ldi	r18, 0x1D	; 29
    11fa:	33 ef       	ldi	r19, 0xF3	; 243
    11fc:	41 e0       	ldi	r20, 0x01	; 1
    11fe:	50 e0       	ldi	r21, 0x00	; 0
    1200:	ae df       	rcall	.-164    	; 0x115e <__divmodsi4>
    1202:	49 01       	movw	r8, r18
    1204:	5a 01       	movw	r10, r20
    1206:	9b 01       	movw	r18, r22
    1208:	ac 01       	movw	r20, r24
    120a:	a7 ea       	ldi	r26, 0xA7	; 167
    120c:	b1 e4       	ldi	r27, 0x41	; 65
    120e:	c3 df       	rcall	.-122    	; 0x1196 <__muluhisi3>
    1210:	6b 01       	movw	r12, r22
    1212:	7c 01       	movw	r14, r24
    1214:	ac ee       	ldi	r26, 0xEC	; 236
    1216:	b4 ef       	ldi	r27, 0xF4	; 244
    1218:	a5 01       	movw	r20, r10
    121a:	94 01       	movw	r18, r8
    121c:	4c d3       	rcall	.+1688   	; 0x18b6 <__mulohisi3>
    121e:	dc 01       	movw	r26, r24
    1220:	cb 01       	movw	r24, r22
    1222:	8c 0d       	add	r24, r12
    1224:	9d 1d       	adc	r25, r13
    1226:	ae 1d       	adc	r26, r14
    1228:	bf 1d       	adc	r27, r15
    122a:	b7 ff       	sbrs	r27, 7
    122c:	03 c0       	rjmp	.+6      	; 0x1234 <do_rand+0x6c>
    122e:	01 97       	sbiw	r24, 0x01	; 1
    1230:	a1 09       	sbc	r26, r1
    1232:	b0 48       	sbci	r27, 0x80	; 128
    1234:	88 83       	st	Y, r24
    1236:	99 83       	std	Y+1, r25	; 0x01
    1238:	aa 83       	std	Y+2, r26	; 0x02
    123a:	bb 83       	std	Y+3, r27	; 0x03
    123c:	9f 77       	andi	r25, 0x7F	; 127
    123e:	df 91       	pop	r29
    1240:	cf 91       	pop	r28
    1242:	ff 90       	pop	r15
    1244:	ef 90       	pop	r14
    1246:	df 90       	pop	r13
    1248:	cf 90       	pop	r12
    124a:	bf 90       	pop	r11
    124c:	af 90       	pop	r10
    124e:	9f 90       	pop	r9
    1250:	8f 90       	pop	r8
    1252:	08 95       	ret

00001254 <rand_r>:
    1254:	b9 cf       	rjmp	.-142    	; 0x11c8 <do_rand>

00001256 <rand>:
    1256:	8f e0       	ldi	r24, 0x0F	; 15
    1258:	92 e0       	ldi	r25, 0x02	; 2
    125a:	b6 cf       	rjmp	.-148    	; 0x11c8 <do_rand>

0000125c <srand>:
    125c:	a0 e0       	ldi	r26, 0x00	; 0
    125e:	b0 e0       	ldi	r27, 0x00	; 0
    1260:	80 93 0f 02 	sts	0x020F, r24
    1264:	90 93 10 02 	sts	0x0210, r25
    1268:	a0 93 11 02 	sts	0x0211, r26
    126c:	b0 93 12 02 	sts	0x0212, r27
    1270:	08 95       	ret

00001272 <atol>:
    1272:	1f 93       	push	r17
    1274:	fc 01       	movw	r30, r24
    1276:	99 27       	eor	r25, r25
    1278:	88 27       	eor	r24, r24
    127a:	bc 01       	movw	r22, r24
    127c:	e8 94       	clt
    127e:	11 91       	ld	r17, Z+
    1280:	10 32       	cpi	r17, 0x20	; 32
    1282:	e9 f3       	breq	.-6      	; 0x127e <atol+0xc>
    1284:	19 30       	cpi	r17, 0x09	; 9
    1286:	10 f0       	brcs	.+4      	; 0x128c <atol+0x1a>
    1288:	1e 30       	cpi	r17, 0x0E	; 14
    128a:	c8 f3       	brcs	.-14     	; 0x127e <atol+0xc>
    128c:	1b 32       	cpi	r17, 0x2B	; 43
    128e:	49 f0       	breq	.+18     	; 0x12a2 <atol+0x30>
    1290:	1d 32       	cpi	r17, 0x2D	; 45
    1292:	41 f4       	brne	.+16     	; 0x12a4 <atol+0x32>
    1294:	68 94       	set
    1296:	05 c0       	rjmp	.+10     	; 0x12a2 <atol+0x30>
    1298:	1b d0       	rcall	.+54     	; 0x12d0 <__mulsi_const_10>
    129a:	61 0f       	add	r22, r17
    129c:	71 1d       	adc	r23, r1
    129e:	81 1d       	adc	r24, r1
    12a0:	91 1d       	adc	r25, r1
    12a2:	11 91       	ld	r17, Z+
    12a4:	10 53       	subi	r17, 0x30	; 48
    12a6:	1a 30       	cpi	r17, 0x0A	; 10
    12a8:	b8 f3       	brcs	.-18     	; 0x1298 <atol+0x26>
    12aa:	3e f4       	brtc	.+14     	; 0x12ba <atol+0x48>
    12ac:	90 95       	com	r25
    12ae:	80 95       	com	r24
    12b0:	70 95       	com	r23
    12b2:	61 95       	neg	r22
    12b4:	7f 4f       	sbci	r23, 0xFF	; 255
    12b6:	8f 4f       	sbci	r24, 0xFF	; 255
    12b8:	9f 4f       	sbci	r25, 0xFF	; 255
    12ba:	1f 91       	pop	r17
    12bc:	08 95       	ret

000012be <strcmp>:
    12be:	fb 01       	movw	r30, r22
    12c0:	dc 01       	movw	r26, r24
    12c2:	8d 91       	ld	r24, X+
    12c4:	01 90       	ld	r0, Z+
    12c6:	80 19       	sub	r24, r0
    12c8:	01 10       	cpse	r0, r1
    12ca:	d9 f3       	breq	.-10     	; 0x12c2 <strcmp+0x4>
    12cc:	99 0b       	sbc	r25, r25
    12ce:	08 95       	ret

000012d0 <__mulsi_const_10>:
    12d0:	59 2f       	mov	r21, r25
    12d2:	48 2f       	mov	r20, r24
    12d4:	37 2f       	mov	r19, r23
    12d6:	26 2f       	mov	r18, r22
    12d8:	66 0f       	add	r22, r22
    12da:	77 1f       	adc	r23, r23
    12dc:	88 1f       	adc	r24, r24
    12de:	99 1f       	adc	r25, r25
    12e0:	66 0f       	add	r22, r22
    12e2:	77 1f       	adc	r23, r23
    12e4:	88 1f       	adc	r24, r24
    12e6:	99 1f       	adc	r25, r25
    12e8:	62 0f       	add	r22, r18
    12ea:	73 1f       	adc	r23, r19
    12ec:	84 1f       	adc	r24, r20
    12ee:	95 1f       	adc	r25, r21
    12f0:	66 0f       	add	r22, r22
    12f2:	77 1f       	adc	r23, r23
    12f4:	88 1f       	adc	r24, r24
    12f6:	99 1f       	adc	r25, r25
    12f8:	08 95       	ret

000012fa <printf>:
    12fa:	cf 93       	push	r28
    12fc:	df 93       	push	r29
    12fe:	cd b7       	in	r28, 0x3d	; 61
    1300:	de b7       	in	r29, 0x3e	; 62
    1302:	ae 01       	movw	r20, r28
    1304:	4b 5f       	subi	r20, 0xFB	; 251
    1306:	5f 4f       	sbci	r21, 0xFF	; 255
    1308:	fa 01       	movw	r30, r20
    130a:	61 91       	ld	r22, Z+
    130c:	71 91       	ld	r23, Z+
    130e:	af 01       	movw	r20, r30
    1310:	80 91 1e 04 	lds	r24, 0x041E
    1314:	90 91 1f 04 	lds	r25, 0x041F
    1318:	32 d0       	rcall	.+100    	; 0x137e <vfprintf>
    131a:	df 91       	pop	r29
    131c:	cf 91       	pop	r28
    131e:	08 95       	ret

00001320 <sprintf>:
    1320:	0f 93       	push	r16
    1322:	1f 93       	push	r17
    1324:	cf 93       	push	r28
    1326:	df 93       	push	r29
    1328:	cd b7       	in	r28, 0x3d	; 61
    132a:	de b7       	in	r29, 0x3e	; 62
    132c:	2e 97       	sbiw	r28, 0x0e	; 14
    132e:	0f b6       	in	r0, 0x3f	; 63
    1330:	f8 94       	cli
    1332:	de bf       	out	0x3e, r29	; 62
    1334:	0f be       	out	0x3f, r0	; 63
    1336:	cd bf       	out	0x3d, r28	; 61
    1338:	0d 89       	ldd	r16, Y+21	; 0x15
    133a:	1e 89       	ldd	r17, Y+22	; 0x16
    133c:	86 e0       	ldi	r24, 0x06	; 6
    133e:	8c 83       	std	Y+4, r24	; 0x04
    1340:	1a 83       	std	Y+2, r17	; 0x02
    1342:	09 83       	std	Y+1, r16	; 0x01
    1344:	8f ef       	ldi	r24, 0xFF	; 255
    1346:	9f e7       	ldi	r25, 0x7F	; 127
    1348:	9e 83       	std	Y+6, r25	; 0x06
    134a:	8d 83       	std	Y+5, r24	; 0x05
    134c:	ae 01       	movw	r20, r28
    134e:	47 5e       	subi	r20, 0xE7	; 231
    1350:	5f 4f       	sbci	r21, 0xFF	; 255
    1352:	6f 89       	ldd	r22, Y+23	; 0x17
    1354:	78 8d       	ldd	r23, Y+24	; 0x18
    1356:	ce 01       	movw	r24, r28
    1358:	01 96       	adiw	r24, 0x01	; 1
    135a:	11 d0       	rcall	.+34     	; 0x137e <vfprintf>
    135c:	2f 81       	ldd	r18, Y+7	; 0x07
    135e:	38 85       	ldd	r19, Y+8	; 0x08
    1360:	f8 01       	movw	r30, r16
    1362:	e2 0f       	add	r30, r18
    1364:	f3 1f       	adc	r31, r19
    1366:	10 82       	st	Z, r1
    1368:	2e 96       	adiw	r28, 0x0e	; 14
    136a:	0f b6       	in	r0, 0x3f	; 63
    136c:	f8 94       	cli
    136e:	de bf       	out	0x3e, r29	; 62
    1370:	0f be       	out	0x3f, r0	; 63
    1372:	cd bf       	out	0x3d, r28	; 61
    1374:	df 91       	pop	r29
    1376:	cf 91       	pop	r28
    1378:	1f 91       	pop	r17
    137a:	0f 91       	pop	r16
    137c:	08 95       	ret

0000137e <vfprintf>:
    137e:	2f 92       	push	r2
    1380:	3f 92       	push	r3
    1382:	4f 92       	push	r4
    1384:	5f 92       	push	r5
    1386:	6f 92       	push	r6
    1388:	7f 92       	push	r7
    138a:	8f 92       	push	r8
    138c:	9f 92       	push	r9
    138e:	af 92       	push	r10
    1390:	bf 92       	push	r11
    1392:	cf 92       	push	r12
    1394:	df 92       	push	r13
    1396:	ef 92       	push	r14
    1398:	ff 92       	push	r15
    139a:	0f 93       	push	r16
    139c:	1f 93       	push	r17
    139e:	cf 93       	push	r28
    13a0:	df 93       	push	r29
    13a2:	cd b7       	in	r28, 0x3d	; 61
    13a4:	de b7       	in	r29, 0x3e	; 62
    13a6:	2c 97       	sbiw	r28, 0x0c	; 12
    13a8:	0f b6       	in	r0, 0x3f	; 63
    13aa:	f8 94       	cli
    13ac:	de bf       	out	0x3e, r29	; 62
    13ae:	0f be       	out	0x3f, r0	; 63
    13b0:	cd bf       	out	0x3d, r28	; 61
    13b2:	7c 01       	movw	r14, r24
    13b4:	6b 01       	movw	r12, r22
    13b6:	8a 01       	movw	r16, r20
    13b8:	fc 01       	movw	r30, r24
    13ba:	17 82       	std	Z+7, r1	; 0x07
    13bc:	16 82       	std	Z+6, r1	; 0x06
    13be:	83 81       	ldd	r24, Z+3	; 0x03
    13c0:	81 ff       	sbrs	r24, 1
    13c2:	b0 c1       	rjmp	.+864    	; 0x1724 <vfprintf+0x3a6>
    13c4:	ce 01       	movw	r24, r28
    13c6:	01 96       	adiw	r24, 0x01	; 1
    13c8:	4c 01       	movw	r8, r24
    13ca:	f7 01       	movw	r30, r14
    13cc:	93 81       	ldd	r25, Z+3	; 0x03
    13ce:	f6 01       	movw	r30, r12
    13d0:	93 fd       	sbrc	r25, 3
    13d2:	85 91       	lpm	r24, Z+
    13d4:	93 ff       	sbrs	r25, 3
    13d6:	81 91       	ld	r24, Z+
    13d8:	6f 01       	movw	r12, r30
    13da:	88 23       	and	r24, r24
    13dc:	09 f4       	brne	.+2      	; 0x13e0 <vfprintf+0x62>
    13de:	9e c1       	rjmp	.+828    	; 0x171c <vfprintf+0x39e>
    13e0:	85 32       	cpi	r24, 0x25	; 37
    13e2:	39 f4       	brne	.+14     	; 0x13f2 <vfprintf+0x74>
    13e4:	93 fd       	sbrc	r25, 3
    13e6:	85 91       	lpm	r24, Z+
    13e8:	93 ff       	sbrs	r25, 3
    13ea:	81 91       	ld	r24, Z+
    13ec:	6f 01       	movw	r12, r30
    13ee:	85 32       	cpi	r24, 0x25	; 37
    13f0:	21 f4       	brne	.+8      	; 0x13fa <vfprintf+0x7c>
    13f2:	b7 01       	movw	r22, r14
    13f4:	90 e0       	ldi	r25, 0x00	; 0
    13f6:	c7 d1       	rcall	.+910    	; 0x1786 <fputc>
    13f8:	e8 cf       	rjmp	.-48     	; 0x13ca <vfprintf+0x4c>
    13fa:	51 2c       	mov	r5, r1
    13fc:	31 2c       	mov	r3, r1
    13fe:	20 e0       	ldi	r18, 0x00	; 0
    1400:	20 32       	cpi	r18, 0x20	; 32
    1402:	a0 f4       	brcc	.+40     	; 0x142c <vfprintf+0xae>
    1404:	8b 32       	cpi	r24, 0x2B	; 43
    1406:	69 f0       	breq	.+26     	; 0x1422 <vfprintf+0xa4>
    1408:	30 f4       	brcc	.+12     	; 0x1416 <vfprintf+0x98>
    140a:	80 32       	cpi	r24, 0x20	; 32
    140c:	59 f0       	breq	.+22     	; 0x1424 <vfprintf+0xa6>
    140e:	83 32       	cpi	r24, 0x23	; 35
    1410:	69 f4       	brne	.+26     	; 0x142c <vfprintf+0xae>
    1412:	20 61       	ori	r18, 0x10	; 16
    1414:	2c c0       	rjmp	.+88     	; 0x146e <vfprintf+0xf0>
    1416:	8d 32       	cpi	r24, 0x2D	; 45
    1418:	39 f0       	breq	.+14     	; 0x1428 <vfprintf+0xaa>
    141a:	80 33       	cpi	r24, 0x30	; 48
    141c:	39 f4       	brne	.+14     	; 0x142c <vfprintf+0xae>
    141e:	21 60       	ori	r18, 0x01	; 1
    1420:	26 c0       	rjmp	.+76     	; 0x146e <vfprintf+0xf0>
    1422:	22 60       	ori	r18, 0x02	; 2
    1424:	24 60       	ori	r18, 0x04	; 4
    1426:	23 c0       	rjmp	.+70     	; 0x146e <vfprintf+0xf0>
    1428:	28 60       	ori	r18, 0x08	; 8
    142a:	21 c0       	rjmp	.+66     	; 0x146e <vfprintf+0xf0>
    142c:	27 fd       	sbrc	r18, 7
    142e:	27 c0       	rjmp	.+78     	; 0x147e <vfprintf+0x100>
    1430:	30 ed       	ldi	r19, 0xD0	; 208
    1432:	38 0f       	add	r19, r24
    1434:	3a 30       	cpi	r19, 0x0A	; 10
    1436:	78 f4       	brcc	.+30     	; 0x1456 <vfprintf+0xd8>
    1438:	26 ff       	sbrs	r18, 6
    143a:	06 c0       	rjmp	.+12     	; 0x1448 <vfprintf+0xca>
    143c:	fa e0       	ldi	r31, 0x0A	; 10
    143e:	5f 9e       	mul	r5, r31
    1440:	30 0d       	add	r19, r0
    1442:	11 24       	eor	r1, r1
    1444:	53 2e       	mov	r5, r19
    1446:	13 c0       	rjmp	.+38     	; 0x146e <vfprintf+0xf0>
    1448:	8a e0       	ldi	r24, 0x0A	; 10
    144a:	38 9e       	mul	r3, r24
    144c:	30 0d       	add	r19, r0
    144e:	11 24       	eor	r1, r1
    1450:	33 2e       	mov	r3, r19
    1452:	20 62       	ori	r18, 0x20	; 32
    1454:	0c c0       	rjmp	.+24     	; 0x146e <vfprintf+0xf0>
    1456:	8e 32       	cpi	r24, 0x2E	; 46
    1458:	21 f4       	brne	.+8      	; 0x1462 <vfprintf+0xe4>
    145a:	26 fd       	sbrc	r18, 6
    145c:	5f c1       	rjmp	.+702    	; 0x171c <vfprintf+0x39e>
    145e:	20 64       	ori	r18, 0x40	; 64
    1460:	06 c0       	rjmp	.+12     	; 0x146e <vfprintf+0xf0>
    1462:	8c 36       	cpi	r24, 0x6C	; 108
    1464:	11 f4       	brne	.+4      	; 0x146a <vfprintf+0xec>
    1466:	20 68       	ori	r18, 0x80	; 128
    1468:	02 c0       	rjmp	.+4      	; 0x146e <vfprintf+0xf0>
    146a:	88 36       	cpi	r24, 0x68	; 104
    146c:	41 f4       	brne	.+16     	; 0x147e <vfprintf+0x100>
    146e:	f6 01       	movw	r30, r12
    1470:	93 fd       	sbrc	r25, 3
    1472:	85 91       	lpm	r24, Z+
    1474:	93 ff       	sbrs	r25, 3
    1476:	81 91       	ld	r24, Z+
    1478:	6f 01       	movw	r12, r30
    147a:	81 11       	cpse	r24, r1
    147c:	c1 cf       	rjmp	.-126    	; 0x1400 <vfprintf+0x82>
    147e:	98 2f       	mov	r25, r24
    1480:	9f 7d       	andi	r25, 0xDF	; 223
    1482:	95 54       	subi	r25, 0x45	; 69
    1484:	93 30       	cpi	r25, 0x03	; 3
    1486:	28 f4       	brcc	.+10     	; 0x1492 <vfprintf+0x114>
    1488:	0c 5f       	subi	r16, 0xFC	; 252
    148a:	1f 4f       	sbci	r17, 0xFF	; 255
    148c:	ff e3       	ldi	r31, 0x3F	; 63
    148e:	f9 83       	std	Y+1, r31	; 0x01
    1490:	0d c0       	rjmp	.+26     	; 0x14ac <vfprintf+0x12e>
    1492:	83 36       	cpi	r24, 0x63	; 99
    1494:	31 f0       	breq	.+12     	; 0x14a2 <vfprintf+0x124>
    1496:	83 37       	cpi	r24, 0x73	; 115
    1498:	71 f0       	breq	.+28     	; 0x14b6 <vfprintf+0x138>
    149a:	83 35       	cpi	r24, 0x53	; 83
    149c:	09 f0       	breq	.+2      	; 0x14a0 <vfprintf+0x122>
    149e:	57 c0       	rjmp	.+174    	; 0x154e <vfprintf+0x1d0>
    14a0:	21 c0       	rjmp	.+66     	; 0x14e4 <vfprintf+0x166>
    14a2:	f8 01       	movw	r30, r16
    14a4:	80 81       	ld	r24, Z
    14a6:	89 83       	std	Y+1, r24	; 0x01
    14a8:	0e 5f       	subi	r16, 0xFE	; 254
    14aa:	1f 4f       	sbci	r17, 0xFF	; 255
    14ac:	44 24       	eor	r4, r4
    14ae:	43 94       	inc	r4
    14b0:	51 2c       	mov	r5, r1
    14b2:	54 01       	movw	r10, r8
    14b4:	14 c0       	rjmp	.+40     	; 0x14de <vfprintf+0x160>
    14b6:	38 01       	movw	r6, r16
    14b8:	f2 e0       	ldi	r31, 0x02	; 2
    14ba:	6f 0e       	add	r6, r31
    14bc:	71 1c       	adc	r7, r1
    14be:	f8 01       	movw	r30, r16
    14c0:	a0 80       	ld	r10, Z
    14c2:	b1 80       	ldd	r11, Z+1	; 0x01
    14c4:	26 ff       	sbrs	r18, 6
    14c6:	03 c0       	rjmp	.+6      	; 0x14ce <vfprintf+0x150>
    14c8:	65 2d       	mov	r22, r5
    14ca:	70 e0       	ldi	r23, 0x00	; 0
    14cc:	02 c0       	rjmp	.+4      	; 0x14d2 <vfprintf+0x154>
    14ce:	6f ef       	ldi	r22, 0xFF	; 255
    14d0:	7f ef       	ldi	r23, 0xFF	; 255
    14d2:	c5 01       	movw	r24, r10
    14d4:	2c 87       	std	Y+12, r18	; 0x0c
    14d6:	4c d1       	rcall	.+664    	; 0x1770 <strnlen>
    14d8:	2c 01       	movw	r4, r24
    14da:	83 01       	movw	r16, r6
    14dc:	2c 85       	ldd	r18, Y+12	; 0x0c
    14de:	2f 77       	andi	r18, 0x7F	; 127
    14e0:	22 2e       	mov	r2, r18
    14e2:	16 c0       	rjmp	.+44     	; 0x1510 <vfprintf+0x192>
    14e4:	38 01       	movw	r6, r16
    14e6:	f2 e0       	ldi	r31, 0x02	; 2
    14e8:	6f 0e       	add	r6, r31
    14ea:	71 1c       	adc	r7, r1
    14ec:	f8 01       	movw	r30, r16
    14ee:	a0 80       	ld	r10, Z
    14f0:	b1 80       	ldd	r11, Z+1	; 0x01
    14f2:	26 ff       	sbrs	r18, 6
    14f4:	03 c0       	rjmp	.+6      	; 0x14fc <vfprintf+0x17e>
    14f6:	65 2d       	mov	r22, r5
    14f8:	70 e0       	ldi	r23, 0x00	; 0
    14fa:	02 c0       	rjmp	.+4      	; 0x1500 <vfprintf+0x182>
    14fc:	6f ef       	ldi	r22, 0xFF	; 255
    14fe:	7f ef       	ldi	r23, 0xFF	; 255
    1500:	c5 01       	movw	r24, r10
    1502:	2c 87       	std	Y+12, r18	; 0x0c
    1504:	2a d1       	rcall	.+596    	; 0x175a <strnlen_P>
    1506:	2c 01       	movw	r4, r24
    1508:	2c 85       	ldd	r18, Y+12	; 0x0c
    150a:	20 68       	ori	r18, 0x80	; 128
    150c:	22 2e       	mov	r2, r18
    150e:	83 01       	movw	r16, r6
    1510:	23 fc       	sbrc	r2, 3
    1512:	19 c0       	rjmp	.+50     	; 0x1546 <vfprintf+0x1c8>
    1514:	83 2d       	mov	r24, r3
    1516:	90 e0       	ldi	r25, 0x00	; 0
    1518:	48 16       	cp	r4, r24
    151a:	59 06       	cpc	r5, r25
    151c:	a0 f4       	brcc	.+40     	; 0x1546 <vfprintf+0x1c8>
    151e:	b7 01       	movw	r22, r14
    1520:	80 e2       	ldi	r24, 0x20	; 32
    1522:	90 e0       	ldi	r25, 0x00	; 0
    1524:	30 d1       	rcall	.+608    	; 0x1786 <fputc>
    1526:	3a 94       	dec	r3
    1528:	f5 cf       	rjmp	.-22     	; 0x1514 <vfprintf+0x196>
    152a:	f5 01       	movw	r30, r10
    152c:	27 fc       	sbrc	r2, 7
    152e:	85 91       	lpm	r24, Z+
    1530:	27 fe       	sbrs	r2, 7
    1532:	81 91       	ld	r24, Z+
    1534:	5f 01       	movw	r10, r30
    1536:	b7 01       	movw	r22, r14
    1538:	90 e0       	ldi	r25, 0x00	; 0
    153a:	25 d1       	rcall	.+586    	; 0x1786 <fputc>
    153c:	31 10       	cpse	r3, r1
    153e:	3a 94       	dec	r3
    1540:	f1 e0       	ldi	r31, 0x01	; 1
    1542:	4f 1a       	sub	r4, r31
    1544:	51 08       	sbc	r5, r1
    1546:	41 14       	cp	r4, r1
    1548:	51 04       	cpc	r5, r1
    154a:	79 f7       	brne	.-34     	; 0x152a <vfprintf+0x1ac>
    154c:	de c0       	rjmp	.+444    	; 0x170a <vfprintf+0x38c>
    154e:	84 36       	cpi	r24, 0x64	; 100
    1550:	11 f0       	breq	.+4      	; 0x1556 <vfprintf+0x1d8>
    1552:	89 36       	cpi	r24, 0x69	; 105
    1554:	31 f5       	brne	.+76     	; 0x15a2 <vfprintf+0x224>
    1556:	f8 01       	movw	r30, r16
    1558:	27 ff       	sbrs	r18, 7
    155a:	07 c0       	rjmp	.+14     	; 0x156a <vfprintf+0x1ec>
    155c:	60 81       	ld	r22, Z
    155e:	71 81       	ldd	r23, Z+1	; 0x01
    1560:	82 81       	ldd	r24, Z+2	; 0x02
    1562:	93 81       	ldd	r25, Z+3	; 0x03
    1564:	0c 5f       	subi	r16, 0xFC	; 252
    1566:	1f 4f       	sbci	r17, 0xFF	; 255
    1568:	08 c0       	rjmp	.+16     	; 0x157a <vfprintf+0x1fc>
    156a:	60 81       	ld	r22, Z
    156c:	71 81       	ldd	r23, Z+1	; 0x01
    156e:	07 2e       	mov	r0, r23
    1570:	00 0c       	add	r0, r0
    1572:	88 0b       	sbc	r24, r24
    1574:	99 0b       	sbc	r25, r25
    1576:	0e 5f       	subi	r16, 0xFE	; 254
    1578:	1f 4f       	sbci	r17, 0xFF	; 255
    157a:	2f 76       	andi	r18, 0x6F	; 111
    157c:	72 2e       	mov	r7, r18
    157e:	97 ff       	sbrs	r25, 7
    1580:	09 c0       	rjmp	.+18     	; 0x1594 <vfprintf+0x216>
    1582:	90 95       	com	r25
    1584:	80 95       	com	r24
    1586:	70 95       	com	r23
    1588:	61 95       	neg	r22
    158a:	7f 4f       	sbci	r23, 0xFF	; 255
    158c:	8f 4f       	sbci	r24, 0xFF	; 255
    158e:	9f 4f       	sbci	r25, 0xFF	; 255
    1590:	20 68       	ori	r18, 0x80	; 128
    1592:	72 2e       	mov	r7, r18
    1594:	2a e0       	ldi	r18, 0x0A	; 10
    1596:	30 e0       	ldi	r19, 0x00	; 0
    1598:	a4 01       	movw	r20, r8
    159a:	2d d1       	rcall	.+602    	; 0x17f6 <__ultoa_invert>
    159c:	a8 2e       	mov	r10, r24
    159e:	a8 18       	sub	r10, r8
    15a0:	43 c0       	rjmp	.+134    	; 0x1628 <vfprintf+0x2aa>
    15a2:	85 37       	cpi	r24, 0x75	; 117
    15a4:	29 f4       	brne	.+10     	; 0x15b0 <vfprintf+0x232>
    15a6:	2f 7e       	andi	r18, 0xEF	; 239
    15a8:	b2 2e       	mov	r11, r18
    15aa:	2a e0       	ldi	r18, 0x0A	; 10
    15ac:	30 e0       	ldi	r19, 0x00	; 0
    15ae:	25 c0       	rjmp	.+74     	; 0x15fa <vfprintf+0x27c>
    15b0:	f2 2f       	mov	r31, r18
    15b2:	f9 7f       	andi	r31, 0xF9	; 249
    15b4:	bf 2e       	mov	r11, r31
    15b6:	8f 36       	cpi	r24, 0x6F	; 111
    15b8:	c1 f0       	breq	.+48     	; 0x15ea <vfprintf+0x26c>
    15ba:	18 f4       	brcc	.+6      	; 0x15c2 <vfprintf+0x244>
    15bc:	88 35       	cpi	r24, 0x58	; 88
    15be:	79 f0       	breq	.+30     	; 0x15de <vfprintf+0x260>
    15c0:	ad c0       	rjmp	.+346    	; 0x171c <vfprintf+0x39e>
    15c2:	80 37       	cpi	r24, 0x70	; 112
    15c4:	19 f0       	breq	.+6      	; 0x15cc <vfprintf+0x24e>
    15c6:	88 37       	cpi	r24, 0x78	; 120
    15c8:	21 f0       	breq	.+8      	; 0x15d2 <vfprintf+0x254>
    15ca:	a8 c0       	rjmp	.+336    	; 0x171c <vfprintf+0x39e>
    15cc:	2f 2f       	mov	r18, r31
    15ce:	20 61       	ori	r18, 0x10	; 16
    15d0:	b2 2e       	mov	r11, r18
    15d2:	b4 fe       	sbrs	r11, 4
    15d4:	0d c0       	rjmp	.+26     	; 0x15f0 <vfprintf+0x272>
    15d6:	8b 2d       	mov	r24, r11
    15d8:	84 60       	ori	r24, 0x04	; 4
    15da:	b8 2e       	mov	r11, r24
    15dc:	09 c0       	rjmp	.+18     	; 0x15f0 <vfprintf+0x272>
    15de:	24 ff       	sbrs	r18, 4
    15e0:	0a c0       	rjmp	.+20     	; 0x15f6 <vfprintf+0x278>
    15e2:	9f 2f       	mov	r25, r31
    15e4:	96 60       	ori	r25, 0x06	; 6
    15e6:	b9 2e       	mov	r11, r25
    15e8:	06 c0       	rjmp	.+12     	; 0x15f6 <vfprintf+0x278>
    15ea:	28 e0       	ldi	r18, 0x08	; 8
    15ec:	30 e0       	ldi	r19, 0x00	; 0
    15ee:	05 c0       	rjmp	.+10     	; 0x15fa <vfprintf+0x27c>
    15f0:	20 e1       	ldi	r18, 0x10	; 16
    15f2:	30 e0       	ldi	r19, 0x00	; 0
    15f4:	02 c0       	rjmp	.+4      	; 0x15fa <vfprintf+0x27c>
    15f6:	20 e1       	ldi	r18, 0x10	; 16
    15f8:	32 e0       	ldi	r19, 0x02	; 2
    15fa:	f8 01       	movw	r30, r16
    15fc:	b7 fe       	sbrs	r11, 7
    15fe:	07 c0       	rjmp	.+14     	; 0x160e <vfprintf+0x290>
    1600:	60 81       	ld	r22, Z
    1602:	71 81       	ldd	r23, Z+1	; 0x01
    1604:	82 81       	ldd	r24, Z+2	; 0x02
    1606:	93 81       	ldd	r25, Z+3	; 0x03
    1608:	0c 5f       	subi	r16, 0xFC	; 252
    160a:	1f 4f       	sbci	r17, 0xFF	; 255
    160c:	06 c0       	rjmp	.+12     	; 0x161a <vfprintf+0x29c>
    160e:	60 81       	ld	r22, Z
    1610:	71 81       	ldd	r23, Z+1	; 0x01
    1612:	80 e0       	ldi	r24, 0x00	; 0
    1614:	90 e0       	ldi	r25, 0x00	; 0
    1616:	0e 5f       	subi	r16, 0xFE	; 254
    1618:	1f 4f       	sbci	r17, 0xFF	; 255
    161a:	a4 01       	movw	r20, r8
    161c:	ec d0       	rcall	.+472    	; 0x17f6 <__ultoa_invert>
    161e:	a8 2e       	mov	r10, r24
    1620:	a8 18       	sub	r10, r8
    1622:	fb 2d       	mov	r31, r11
    1624:	ff 77       	andi	r31, 0x7F	; 127
    1626:	7f 2e       	mov	r7, r31
    1628:	76 fe       	sbrs	r7, 6
    162a:	0b c0       	rjmp	.+22     	; 0x1642 <vfprintf+0x2c4>
    162c:	37 2d       	mov	r19, r7
    162e:	3e 7f       	andi	r19, 0xFE	; 254
    1630:	a5 14       	cp	r10, r5
    1632:	50 f4       	brcc	.+20     	; 0x1648 <vfprintf+0x2ca>
    1634:	74 fe       	sbrs	r7, 4
    1636:	0a c0       	rjmp	.+20     	; 0x164c <vfprintf+0x2ce>
    1638:	72 fc       	sbrc	r7, 2
    163a:	08 c0       	rjmp	.+16     	; 0x164c <vfprintf+0x2ce>
    163c:	37 2d       	mov	r19, r7
    163e:	3e 7e       	andi	r19, 0xEE	; 238
    1640:	05 c0       	rjmp	.+10     	; 0x164c <vfprintf+0x2ce>
    1642:	ba 2c       	mov	r11, r10
    1644:	37 2d       	mov	r19, r7
    1646:	03 c0       	rjmp	.+6      	; 0x164e <vfprintf+0x2d0>
    1648:	ba 2c       	mov	r11, r10
    164a:	01 c0       	rjmp	.+2      	; 0x164e <vfprintf+0x2d0>
    164c:	b5 2c       	mov	r11, r5
    164e:	34 ff       	sbrs	r19, 4
    1650:	0d c0       	rjmp	.+26     	; 0x166c <vfprintf+0x2ee>
    1652:	fe 01       	movw	r30, r28
    1654:	ea 0d       	add	r30, r10
    1656:	f1 1d       	adc	r31, r1
    1658:	80 81       	ld	r24, Z
    165a:	80 33       	cpi	r24, 0x30	; 48
    165c:	11 f4       	brne	.+4      	; 0x1662 <vfprintf+0x2e4>
    165e:	39 7e       	andi	r19, 0xE9	; 233
    1660:	09 c0       	rjmp	.+18     	; 0x1674 <vfprintf+0x2f6>
    1662:	32 ff       	sbrs	r19, 2
    1664:	06 c0       	rjmp	.+12     	; 0x1672 <vfprintf+0x2f4>
    1666:	b3 94       	inc	r11
    1668:	b3 94       	inc	r11
    166a:	04 c0       	rjmp	.+8      	; 0x1674 <vfprintf+0x2f6>
    166c:	83 2f       	mov	r24, r19
    166e:	86 78       	andi	r24, 0x86	; 134
    1670:	09 f0       	breq	.+2      	; 0x1674 <vfprintf+0x2f6>
    1672:	b3 94       	inc	r11
    1674:	33 fd       	sbrc	r19, 3
    1676:	12 c0       	rjmp	.+36     	; 0x169c <vfprintf+0x31e>
    1678:	30 ff       	sbrs	r19, 0
    167a:	06 c0       	rjmp	.+12     	; 0x1688 <vfprintf+0x30a>
    167c:	5a 2c       	mov	r5, r10
    167e:	b3 14       	cp	r11, r3
    1680:	18 f4       	brcc	.+6      	; 0x1688 <vfprintf+0x30a>
    1682:	53 0c       	add	r5, r3
    1684:	5b 18       	sub	r5, r11
    1686:	b3 2c       	mov	r11, r3
    1688:	b3 14       	cp	r11, r3
    168a:	60 f4       	brcc	.+24     	; 0x16a4 <vfprintf+0x326>
    168c:	b7 01       	movw	r22, r14
    168e:	80 e2       	ldi	r24, 0x20	; 32
    1690:	90 e0       	ldi	r25, 0x00	; 0
    1692:	3c 87       	std	Y+12, r19	; 0x0c
    1694:	78 d0       	rcall	.+240    	; 0x1786 <fputc>
    1696:	b3 94       	inc	r11
    1698:	3c 85       	ldd	r19, Y+12	; 0x0c
    169a:	f6 cf       	rjmp	.-20     	; 0x1688 <vfprintf+0x30a>
    169c:	b3 14       	cp	r11, r3
    169e:	10 f4       	brcc	.+4      	; 0x16a4 <vfprintf+0x326>
    16a0:	3b 18       	sub	r3, r11
    16a2:	01 c0       	rjmp	.+2      	; 0x16a6 <vfprintf+0x328>
    16a4:	31 2c       	mov	r3, r1
    16a6:	34 ff       	sbrs	r19, 4
    16a8:	11 c0       	rjmp	.+34     	; 0x16cc <vfprintf+0x34e>
    16aa:	b7 01       	movw	r22, r14
    16ac:	80 e3       	ldi	r24, 0x30	; 48
    16ae:	90 e0       	ldi	r25, 0x00	; 0
    16b0:	3c 87       	std	Y+12, r19	; 0x0c
    16b2:	69 d0       	rcall	.+210    	; 0x1786 <fputc>
    16b4:	3c 85       	ldd	r19, Y+12	; 0x0c
    16b6:	32 ff       	sbrs	r19, 2
    16b8:	16 c0       	rjmp	.+44     	; 0x16e6 <vfprintf+0x368>
    16ba:	31 fd       	sbrc	r19, 1
    16bc:	03 c0       	rjmp	.+6      	; 0x16c4 <vfprintf+0x346>
    16be:	88 e7       	ldi	r24, 0x78	; 120
    16c0:	90 e0       	ldi	r25, 0x00	; 0
    16c2:	02 c0       	rjmp	.+4      	; 0x16c8 <vfprintf+0x34a>
    16c4:	88 e5       	ldi	r24, 0x58	; 88
    16c6:	90 e0       	ldi	r25, 0x00	; 0
    16c8:	b7 01       	movw	r22, r14
    16ca:	0c c0       	rjmp	.+24     	; 0x16e4 <vfprintf+0x366>
    16cc:	83 2f       	mov	r24, r19
    16ce:	86 78       	andi	r24, 0x86	; 134
    16d0:	51 f0       	breq	.+20     	; 0x16e6 <vfprintf+0x368>
    16d2:	31 ff       	sbrs	r19, 1
    16d4:	02 c0       	rjmp	.+4      	; 0x16da <vfprintf+0x35c>
    16d6:	8b e2       	ldi	r24, 0x2B	; 43
    16d8:	01 c0       	rjmp	.+2      	; 0x16dc <vfprintf+0x35e>
    16da:	80 e2       	ldi	r24, 0x20	; 32
    16dc:	37 fd       	sbrc	r19, 7
    16de:	8d e2       	ldi	r24, 0x2D	; 45
    16e0:	b7 01       	movw	r22, r14
    16e2:	90 e0       	ldi	r25, 0x00	; 0
    16e4:	50 d0       	rcall	.+160    	; 0x1786 <fputc>
    16e6:	a5 14       	cp	r10, r5
    16e8:	30 f4       	brcc	.+12     	; 0x16f6 <vfprintf+0x378>
    16ea:	b7 01       	movw	r22, r14
    16ec:	80 e3       	ldi	r24, 0x30	; 48
    16ee:	90 e0       	ldi	r25, 0x00	; 0
    16f0:	4a d0       	rcall	.+148    	; 0x1786 <fputc>
    16f2:	5a 94       	dec	r5
    16f4:	f8 cf       	rjmp	.-16     	; 0x16e6 <vfprintf+0x368>
    16f6:	aa 94       	dec	r10
    16f8:	f4 01       	movw	r30, r8
    16fa:	ea 0d       	add	r30, r10
    16fc:	f1 1d       	adc	r31, r1
    16fe:	80 81       	ld	r24, Z
    1700:	b7 01       	movw	r22, r14
    1702:	90 e0       	ldi	r25, 0x00	; 0
    1704:	40 d0       	rcall	.+128    	; 0x1786 <fputc>
    1706:	a1 10       	cpse	r10, r1
    1708:	f6 cf       	rjmp	.-20     	; 0x16f6 <vfprintf+0x378>
    170a:	33 20       	and	r3, r3
    170c:	09 f4       	brne	.+2      	; 0x1710 <vfprintf+0x392>
    170e:	5d ce       	rjmp	.-838    	; 0x13ca <vfprintf+0x4c>
    1710:	b7 01       	movw	r22, r14
    1712:	80 e2       	ldi	r24, 0x20	; 32
    1714:	90 e0       	ldi	r25, 0x00	; 0
    1716:	37 d0       	rcall	.+110    	; 0x1786 <fputc>
    1718:	3a 94       	dec	r3
    171a:	f7 cf       	rjmp	.-18     	; 0x170a <vfprintf+0x38c>
    171c:	f7 01       	movw	r30, r14
    171e:	86 81       	ldd	r24, Z+6	; 0x06
    1720:	97 81       	ldd	r25, Z+7	; 0x07
    1722:	02 c0       	rjmp	.+4      	; 0x1728 <vfprintf+0x3aa>
    1724:	8f ef       	ldi	r24, 0xFF	; 255
    1726:	9f ef       	ldi	r25, 0xFF	; 255
    1728:	2c 96       	adiw	r28, 0x0c	; 12
    172a:	0f b6       	in	r0, 0x3f	; 63
    172c:	f8 94       	cli
    172e:	de bf       	out	0x3e, r29	; 62
    1730:	0f be       	out	0x3f, r0	; 63
    1732:	cd bf       	out	0x3d, r28	; 61
    1734:	df 91       	pop	r29
    1736:	cf 91       	pop	r28
    1738:	1f 91       	pop	r17
    173a:	0f 91       	pop	r16
    173c:	ff 90       	pop	r15
    173e:	ef 90       	pop	r14
    1740:	df 90       	pop	r13
    1742:	cf 90       	pop	r12
    1744:	bf 90       	pop	r11
    1746:	af 90       	pop	r10
    1748:	9f 90       	pop	r9
    174a:	8f 90       	pop	r8
    174c:	7f 90       	pop	r7
    174e:	6f 90       	pop	r6
    1750:	5f 90       	pop	r5
    1752:	4f 90       	pop	r4
    1754:	3f 90       	pop	r3
    1756:	2f 90       	pop	r2
    1758:	08 95       	ret

0000175a <strnlen_P>:
    175a:	fc 01       	movw	r30, r24
    175c:	05 90       	lpm	r0, Z+
    175e:	61 50       	subi	r22, 0x01	; 1
    1760:	70 40       	sbci	r23, 0x00	; 0
    1762:	01 10       	cpse	r0, r1
    1764:	d8 f7       	brcc	.-10     	; 0x175c <strnlen_P+0x2>
    1766:	80 95       	com	r24
    1768:	90 95       	com	r25
    176a:	8e 0f       	add	r24, r30
    176c:	9f 1f       	adc	r25, r31
    176e:	08 95       	ret

00001770 <strnlen>:
    1770:	fc 01       	movw	r30, r24
    1772:	61 50       	subi	r22, 0x01	; 1
    1774:	70 40       	sbci	r23, 0x00	; 0
    1776:	01 90       	ld	r0, Z+
    1778:	01 10       	cpse	r0, r1
    177a:	d8 f7       	brcc	.-10     	; 0x1772 <strnlen+0x2>
    177c:	80 95       	com	r24
    177e:	90 95       	com	r25
    1780:	8e 0f       	add	r24, r30
    1782:	9f 1f       	adc	r25, r31
    1784:	08 95       	ret

00001786 <fputc>:
    1786:	0f 93       	push	r16
    1788:	1f 93       	push	r17
    178a:	cf 93       	push	r28
    178c:	df 93       	push	r29
    178e:	fb 01       	movw	r30, r22
    1790:	23 81       	ldd	r18, Z+3	; 0x03
    1792:	21 fd       	sbrc	r18, 1
    1794:	03 c0       	rjmp	.+6      	; 0x179c <fputc+0x16>
    1796:	8f ef       	ldi	r24, 0xFF	; 255
    1798:	9f ef       	ldi	r25, 0xFF	; 255
    179a:	28 c0       	rjmp	.+80     	; 0x17ec <fputc+0x66>
    179c:	22 ff       	sbrs	r18, 2
    179e:	16 c0       	rjmp	.+44     	; 0x17cc <fputc+0x46>
    17a0:	46 81       	ldd	r20, Z+6	; 0x06
    17a2:	57 81       	ldd	r21, Z+7	; 0x07
    17a4:	24 81       	ldd	r18, Z+4	; 0x04
    17a6:	35 81       	ldd	r19, Z+5	; 0x05
    17a8:	42 17       	cp	r20, r18
    17aa:	53 07       	cpc	r21, r19
    17ac:	44 f4       	brge	.+16     	; 0x17be <fputc+0x38>
    17ae:	a0 81       	ld	r26, Z
    17b0:	b1 81       	ldd	r27, Z+1	; 0x01
    17b2:	9d 01       	movw	r18, r26
    17b4:	2f 5f       	subi	r18, 0xFF	; 255
    17b6:	3f 4f       	sbci	r19, 0xFF	; 255
    17b8:	31 83       	std	Z+1, r19	; 0x01
    17ba:	20 83       	st	Z, r18
    17bc:	8c 93       	st	X, r24
    17be:	26 81       	ldd	r18, Z+6	; 0x06
    17c0:	37 81       	ldd	r19, Z+7	; 0x07
    17c2:	2f 5f       	subi	r18, 0xFF	; 255
    17c4:	3f 4f       	sbci	r19, 0xFF	; 255
    17c6:	37 83       	std	Z+7, r19	; 0x07
    17c8:	26 83       	std	Z+6, r18	; 0x06
    17ca:	10 c0       	rjmp	.+32     	; 0x17ec <fputc+0x66>
    17cc:	eb 01       	movw	r28, r22
    17ce:	09 2f       	mov	r16, r25
    17d0:	18 2f       	mov	r17, r24
    17d2:	00 84       	ldd	r0, Z+8	; 0x08
    17d4:	f1 85       	ldd	r31, Z+9	; 0x09
    17d6:	e0 2d       	mov	r30, r0
    17d8:	09 95       	icall
    17da:	89 2b       	or	r24, r25
    17dc:	e1 f6       	brne	.-72     	; 0x1796 <fputc+0x10>
    17de:	8e 81       	ldd	r24, Y+6	; 0x06
    17e0:	9f 81       	ldd	r25, Y+7	; 0x07
    17e2:	01 96       	adiw	r24, 0x01	; 1
    17e4:	9f 83       	std	Y+7, r25	; 0x07
    17e6:	8e 83       	std	Y+6, r24	; 0x06
    17e8:	81 2f       	mov	r24, r17
    17ea:	90 2f       	mov	r25, r16
    17ec:	df 91       	pop	r29
    17ee:	cf 91       	pop	r28
    17f0:	1f 91       	pop	r17
    17f2:	0f 91       	pop	r16
    17f4:	08 95       	ret

000017f6 <__ultoa_invert>:
    17f6:	fa 01       	movw	r30, r20
    17f8:	aa 27       	eor	r26, r26
    17fa:	28 30       	cpi	r18, 0x08	; 8
    17fc:	51 f1       	breq	.+84     	; 0x1852 <__ultoa_invert+0x5c>
    17fe:	20 31       	cpi	r18, 0x10	; 16
    1800:	81 f1       	breq	.+96     	; 0x1862 <__ultoa_invert+0x6c>
    1802:	e8 94       	clt
    1804:	6f 93       	push	r22
    1806:	6e 7f       	andi	r22, 0xFE	; 254
    1808:	6e 5f       	subi	r22, 0xFE	; 254
    180a:	7f 4f       	sbci	r23, 0xFF	; 255
    180c:	8f 4f       	sbci	r24, 0xFF	; 255
    180e:	9f 4f       	sbci	r25, 0xFF	; 255
    1810:	af 4f       	sbci	r26, 0xFF	; 255
    1812:	b1 e0       	ldi	r27, 0x01	; 1
    1814:	3e d0       	rcall	.+124    	; 0x1892 <__ultoa_invert+0x9c>
    1816:	b4 e0       	ldi	r27, 0x04	; 4
    1818:	3c d0       	rcall	.+120    	; 0x1892 <__ultoa_invert+0x9c>
    181a:	67 0f       	add	r22, r23
    181c:	78 1f       	adc	r23, r24
    181e:	89 1f       	adc	r24, r25
    1820:	9a 1f       	adc	r25, r26
    1822:	a1 1d       	adc	r26, r1
    1824:	68 0f       	add	r22, r24
    1826:	79 1f       	adc	r23, r25
    1828:	8a 1f       	adc	r24, r26
    182a:	91 1d       	adc	r25, r1
    182c:	a1 1d       	adc	r26, r1
    182e:	6a 0f       	add	r22, r26
    1830:	71 1d       	adc	r23, r1
    1832:	81 1d       	adc	r24, r1
    1834:	91 1d       	adc	r25, r1
    1836:	a1 1d       	adc	r26, r1
    1838:	20 d0       	rcall	.+64     	; 0x187a <__ultoa_invert+0x84>
    183a:	09 f4       	brne	.+2      	; 0x183e <__ultoa_invert+0x48>
    183c:	68 94       	set
    183e:	3f 91       	pop	r19
    1840:	2a e0       	ldi	r18, 0x0A	; 10
    1842:	26 9f       	mul	r18, r22
    1844:	11 24       	eor	r1, r1
    1846:	30 19       	sub	r19, r0
    1848:	30 5d       	subi	r19, 0xD0	; 208
    184a:	31 93       	st	Z+, r19
    184c:	de f6       	brtc	.-74     	; 0x1804 <__ultoa_invert+0xe>
    184e:	cf 01       	movw	r24, r30
    1850:	08 95       	ret
    1852:	46 2f       	mov	r20, r22
    1854:	47 70       	andi	r20, 0x07	; 7
    1856:	40 5d       	subi	r20, 0xD0	; 208
    1858:	41 93       	st	Z+, r20
    185a:	b3 e0       	ldi	r27, 0x03	; 3
    185c:	0f d0       	rcall	.+30     	; 0x187c <__ultoa_invert+0x86>
    185e:	c9 f7       	brne	.-14     	; 0x1852 <__ultoa_invert+0x5c>
    1860:	f6 cf       	rjmp	.-20     	; 0x184e <__ultoa_invert+0x58>
    1862:	46 2f       	mov	r20, r22
    1864:	4f 70       	andi	r20, 0x0F	; 15
    1866:	40 5d       	subi	r20, 0xD0	; 208
    1868:	4a 33       	cpi	r20, 0x3A	; 58
    186a:	18 f0       	brcs	.+6      	; 0x1872 <__ultoa_invert+0x7c>
    186c:	49 5d       	subi	r20, 0xD9	; 217
    186e:	31 fd       	sbrc	r19, 1
    1870:	40 52       	subi	r20, 0x20	; 32
    1872:	41 93       	st	Z+, r20
    1874:	02 d0       	rcall	.+4      	; 0x187a <__ultoa_invert+0x84>
    1876:	a9 f7       	brne	.-22     	; 0x1862 <__ultoa_invert+0x6c>
    1878:	ea cf       	rjmp	.-44     	; 0x184e <__ultoa_invert+0x58>
    187a:	b4 e0       	ldi	r27, 0x04	; 4
    187c:	a6 95       	lsr	r26
    187e:	97 95       	ror	r25
    1880:	87 95       	ror	r24
    1882:	77 95       	ror	r23
    1884:	67 95       	ror	r22
    1886:	ba 95       	dec	r27
    1888:	c9 f7       	brne	.-14     	; 0x187c <__ultoa_invert+0x86>
    188a:	00 97       	sbiw	r24, 0x00	; 0
    188c:	61 05       	cpc	r22, r1
    188e:	71 05       	cpc	r23, r1
    1890:	08 95       	ret
    1892:	9b 01       	movw	r18, r22
    1894:	ac 01       	movw	r20, r24
    1896:	0a 2e       	mov	r0, r26
    1898:	06 94       	lsr	r0
    189a:	57 95       	ror	r21
    189c:	47 95       	ror	r20
    189e:	37 95       	ror	r19
    18a0:	27 95       	ror	r18
    18a2:	ba 95       	dec	r27
    18a4:	c9 f7       	brne	.-14     	; 0x1898 <__ultoa_invert+0xa2>
    18a6:	62 0f       	add	r22, r18
    18a8:	73 1f       	adc	r23, r19
    18aa:	84 1f       	adc	r24, r20
    18ac:	95 1f       	adc	r25, r21
    18ae:	a0 1d       	adc	r26, r0
    18b0:	08 95       	ret

000018b2 <__mulshisi3>:
    18b2:	b7 ff       	sbrs	r27, 7
    18b4:	70 cc       	rjmp	.-1824   	; 0x1196 <__muluhisi3>

000018b6 <__mulohisi3>:
    18b6:	6f dc       	rcall	.-1826   	; 0x1196 <__muluhisi3>
    18b8:	82 1b       	sub	r24, r18
    18ba:	93 0b       	sbc	r25, r19
    18bc:	08 95       	ret

000018be <_exit>:
    18be:	f8 94       	cli

000018c0 <__stop_program>:
    18c0:	ff cf       	rjmp	.-2      	; 0x18c0 <__stop_program>
